{
  "swagger": "2.0",
  "info": {
    "version": "v1",
    "title": "HQ API"
  },
  "host": "api.hellohq.io",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/ArticleStorages": {
      "get": {
        "tags": [
          "Articles - Article Storages"
        ],
        "summary": "Returns all article storages",
        "description": "An article storage is a storage unit for one or several article stocks.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ArticleStorage"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Articles - Article Storages"
        ],
        "summary": "Creates a new article storage",
        "description": "Creates an article storage.",
        "parameters": [
          {
            "name": "articleStorage",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ArticleStorage"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ArticleStorage"
            }
          }
        }
      }
    },
    "/v1/ArticleStorages({Id})": {
      "get": {
        "tags": [
          "Articles - Article Storages"
        ],
        "summary": "Returns the article storage with the specified id",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ArticleStorage"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Articles - Article Storages"
        ],
        "summary": "Updates an existing article storage",
        "description": "Updates the article storage.",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "articleStorage",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ArticleStorage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ArticleStorage"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Articles - Article Storages"
        ],
        "summary": "Deletes an article storage",
        "description": "Deletes the article storage with the specified id.",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "If-Match header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        }
      }
    },
    "/v1/Articles": {
      "get": {
        "tags": [
          "Articles - Articles"
        ],
        "summary": "Returns all articles",
        "description": "An article is a stock item that your company sells, for example a digital camera. \r\n            An article can also be a service or activity that your company performs, for example a digital design. \r\n            Articles can be used to create positions on invoices or quotations, among others.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Article"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Articles - Articles"
        ],
        "summary": "Creates a new article",
        "description": "Creates an article. You can find more details about articles in the <a href=\"#!/Articles_-_Articles/ArticlesV1_Get\">GET operation description</a>.",
        "parameters": [
          {
            "name": "article",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Article"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Article"
            }
          }
        }
      }
    },
    "/v1/Articles({Id})": {
      "get": {
        "tags": [
          "Articles - Articles"
        ],
        "summary": "Returns the article with the specified id",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Article"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Articles - Articles"
        ],
        "summary": "Updates an existing article",
        "description": "Updates the article. You can find more details about articles in the <a href=\"#!/Articles_-_Articles/ArticlesV1_Get\">GET operation description</a>.",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "article",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Article"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Article"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Articles - Articles"
        ],
        "summary": "Deletes an article",
        "description": "Deletes the article with the specified id.",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "If-Match header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        }
      }
    },
    "/v1/Articles({Id})/do.CreateTransaction": {
      "post": {
        "tags": [
          "Articles - Articles"
        ],
        "summary": "Creates an article stock transaction for the given article",
        "description": "Creates an article stock transaction for the given article.",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "ArticlesV1CreateTransactionParameters",
            "in": "body",
            "description": "Required parameters are Type, Quantity and StorageId. TargetStorageId is only required when the transaction is of type 'Rearrange'.",
            "required": true,
            "schema": {
              "required": [
                "Type",
                "Quantity",
                "StorageId"
              ],
              "type": "object",
              "properties": {
                "Type": {
                  "enum": [
                    "GoodsIn",
                    "GoodsOut",
                    "Used",
                    "Loss",
                    "Broken",
                    "Rearrange",
                    "Correction"
                  ],
                  "type": "string"
                },
                "Quantity": {
                  "format": "double",
                  "type": "number"
                },
                "StorageId": {
                  "format": "int32",
                  "type": "integer"
                },
                "TargetStorageId": {
                  "format": "int32",
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ArticleStock"
            }
          }
        }
      }
    },
    "/v1/Articles({Id})/SalesPrices": {
      "get": {
        "tags": [
          "Articles - Articles"
        ],
        "summary": "Returns the article sales prices for the article with the...",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ArticleSalesPrice"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Articles - Articles"
        ],
        "summary": "Creates a new article sales price for the article with th...",
        "description": "Creates an article sales price for the specified article.",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "articleSalesPrice",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ArticleSalesPrice"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ArticleSalesPrice"
            }
          }
        }
      }
    },
    "/v1/Articles({Id})/SalesPrices({SalesPriceId})": {
      "get": {
        "tags": [
          "Articles - Articles"
        ],
        "summary": "Returns the article sales prices for the article with the...",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "SalesPriceId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ArticleSalesPrice"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Articles - Articles"
        ],
        "summary": "Updates an existing article sales price for the article w...",
        "description": "Updates the article sales price.",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "SalesPriceId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "articleSalesPrice",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ArticleSalesPrice"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent",
            "schema": {
              "$ref": "#/definitions/ArticleSalesPrice"
            }
          }
        }
      }
    },
    "/v1/Articles({Id})/Stocks": {
      "get": {
        "tags": [
          "Articles - Articles"
        ],
        "summary": "Returns the article stocks of the selected article",
        "description": "An article stock contains the information about the current stock amount for a given article and further stock keeping limits.\r\n            The article stock can only be changed by performing stock transactions.\r\n            The stock itself is automatically available when a new article is beeing created. The seperate creation of new stocks is not possible.",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ArticleStock"
              }
            }
          }
        }
      }
    },
    "/v1/Articles({Id})/Stocks({StockId})": {
      "get": {
        "tags": [
          "Articles - Articles"
        ],
        "summary": "Returns the article stock with the specified id of the se...",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "StockId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ArticleStock"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Articles - Articles"
        ],
        "summary": "Updates an existing article stock",
        "description": "Updates the article stock.",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "StockId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "articleStock",
            "in": "body",
            "description": "The article stock to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ArticleStock"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ArticleStock"
            }
          }
        }
      }
    },
    "/v1/Articles({Id})/Stocks({StockId})/Transactions": {
      "get": {
        "tags": [
          "Articles - Articles"
        ],
        "summary": "Returns the article stocks transactions of the selected a...",
        "description": "",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "StockId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ArticleStockTransaction"
              }
            }
          }
        }
      }
    },
    "/v1/Articles({Id})/Stocks({StockId})/Transactions({TransactionId})": {
      "get": {
        "tags": [
          "Articles - Articles"
        ],
        "summary": "Returns the article stock with the specified id of the se...",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "StockId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "TransactionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ArticleStockTransaction"
            }
          }
        }
      }
    },
    "/v1/Articles({Id})/CustomFields": {
      "get": {
        "tags": [
          "Articles - Articles"
        ],
        "summary": "Returns all customfields of the article",
        "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomField"
              }
            }
          }
        }
      }
    },
    "/v1/Articles({Id})/CustomFields({CustomFieldDefinitionId})": {
      "get": {
        "tags": [
          "Articles - Articles"
        ],
        "summary": "Returns the custom field with the specified id of the sel...",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "CustomFieldDefinitionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomField"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Articles - Articles"
        ],
        "summary": "Updates an existing customfield of the article",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "CustomFieldDefinitionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "customField",
            "in": "body",
            "description": "The customfield body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomField"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomField"
            }
          }
        }
      }
    },
    "/v1/AworkIntegration": {},
    "/v1/Companies": {
      "get": {
        "tags": [
          "Companies - Companies"
        ],
        "summary": "Returns all companies",
        "description": "A company represents any entity you do business with, for example a customer, a supplier or a partner.\r\n            <br />\r\n            This list of all companies includes the <a href=\"#!/CompanyTypes/CompanyTypes_Get\">CompanyType</a>.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Company"
              }
            },
            "examples": {
              "application/json": [
                {
                  "Name": "Company A",
                  "IndustrialSector": null,
                  "Description": "A simple company of type Customer",
                  "IBAN": null,
                  "BIC": null,
                  "DebitorNumber": null,
                  "CreditorNumber": null,
                  "TaxId": null,
                  "DefaultDeliveryConditionId": null,
                  "DefaultDeliveryCondition": null,
                  "DefaultPaymentConditionId": null,
                  "DefaultPaymentCondition": null,
                  "DefaultAddress": null,
                  "Addresses": null,
                  "ResponsibleUsers": null,
                  "CustomFields": null,
                  "CompanyTypes": [
                    {
                      "Name": "Customer",
                      "Number": "C12345",
                      "CompanyId": 0,
                      "Id": 1,
                      "CreatedBy": 1,
                      "UpdatedBy": 1,
                      "CreatedOn": "2024-08-09T12:50:46.6029101Z",
                      "UpdatedOn": "2024-08-09T12:50:46.6029101Z"
                    }
                  ],
                  "Files": null,
                  "Subsystems": null,
                  "Id": 1,
                  "CreatedBy": 1,
                  "UpdatedBy": 1,
                  "CreatedOn": "2024-08-09T12:50:46.6029101Z",
                  "UpdatedOn": "2024-08-09T12:50:46.6029101Z"
                },
                {
                  "Name": "Company B",
                  "IndustrialSector": null,
                  "Description": "A simple company of type Supplier",
                  "IBAN": null,
                  "BIC": null,
                  "DebitorNumber": null,
                  "CreditorNumber": null,
                  "TaxId": null,
                  "DefaultDeliveryConditionId": null,
                  "DefaultDeliveryCondition": null,
                  "DefaultPaymentConditionId": null,
                  "DefaultPaymentCondition": null,
                  "DefaultAddress": null,
                  "Addresses": null,
                  "ResponsibleUsers": null,
                  "CustomFields": null,
                  "CompanyTypes": [
                    {
                      "Name": "Supplier",
                      "Number": "S12346",
                      "CompanyId": 0,
                      "Id": 1,
                      "CreatedBy": 1,
                      "UpdatedBy": 1,
                      "CreatedOn": "2024-08-09T12:50:46.6029101Z",
                      "UpdatedOn": "2024-08-09T12:50:46.6029101Z"
                    }
                  ],
                  "Files": null,
                  "Subsystems": null,
                  "Id": 0,
                  "CreatedBy": 1,
                  "UpdatedBy": 1,
                  "CreatedOn": "2024-08-09T12:50:46.6029101Z",
                  "UpdatedOn": "2024-08-09T12:50:46.6029101Z"
                }
              ]
            }
          }
        }
      },
      "post": {
        "tags": [
          "Companies - Companies"
        ],
        "summary": "Creates a new company",
        "parameters": [
          {
            "name": "company",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Company"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Company"
            }
          }
        }
      }
    },
    "/v1/Companies({Id})": {
      "get": {
        "tags": [
          "Companies - Companies"
        ],
        "summary": "Returns the company with the specified id",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Company"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Companies - Companies"
        ],
        "summary": "Updates an existing company",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "company",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Company"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Company"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Companies - Companies"
        ],
        "summary": "Deletes a company",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "If-Match header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        }
      }
    },
    "/v1/Companies({Id})/Addresses": {
      "get": {
        "tags": [
          "Companies - Companies"
        ],
        "summary": "Returns all company addresses of the company",
        "description": "A company address represents one of many addresses of companies.",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CompanyAddress"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Companies - Companies"
        ],
        "summary": "Creates a new address for a company",
        "description": "Creates an address for the company.",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "address",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompanyAddress"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/CompanyAddress"
            }
          }
        }
      }
    },
    "/v1/Companies({Id})/Addresses({AddressId})": {
      "get": {
        "tags": [
          "Companies - Companies"
        ],
        "summary": "Returns the company address of the company with the speci...",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "AddressId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CompanyAddress"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Companies - Companies"
        ],
        "summary": "Updates an existing companie's address",
        "description": "Updates the address.",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "AddressId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "address",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompanyAddress"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CompanyAddress"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Companies - Companies"
        ],
        "summary": "Deletes a companie's address",
        "description": "Deletes the address for the company with the specified address id.",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "AddressId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        }
      }
    },
    "/v1/Companies({Id})/Files": {
      "get": {
        "tags": [
          "Companies - Companies"
        ],
        "summary": "Returns all Files of the specified Company",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/HQFile"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Companies - Companies"
        ],
        "summary": "Creates a new File for the specified Company",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "file",
            "in": "body",
            "description": "The new file",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HQFile"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        }
      }
    },
    "/v1/Companies({Id})/Files({FileId})": {
      "get": {
        "tags": [
          "Companies - Companies"
        ],
        "summary": "Returns the specified File of the specified Company",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "FileId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/HQFile"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Companies - Companies"
        ],
        "summary": "Updates the specified File of the specified Company",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "FileId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "file",
            "in": "body",
            "description": "The updated file",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HQFile"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/HQFile"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Companies - Companies"
        ],
        "summary": "Deletes the specified File of the specified Company",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "FileId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        }
      }
    },
    "/v1/Companies({Id})/CustomFields": {
      "get": {
        "tags": [
          "Companies - Companies"
        ],
        "summary": "Returns all customfields of the company",
        "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomField"
              }
            }
          }
        }
      }
    },
    "/v1/Companies({Id})/CustomFields({CustomFieldDefinitionId})": {
      "get": {
        "tags": [
          "Companies - Companies"
        ],
        "summary": "Returns the custom field with the specified id of the sel...",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "CustomFieldDefinitionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomField"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Companies - Companies"
        ],
        "summary": "Updates an existing customfield of the company",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "CustomFieldDefinitionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "CustomField",
            "in": "body",
            "description": "The customfield body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomField"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomField"
            }
          }
        }
      }
    },
    "/v1/CompanyTypeToCompanies": {
      "get": {
        "tags": [
          "Companies - Company Type To Companies"
        ],
        "summary": "Returns all company types of all companies",
        "description": "A company type represents the type of a company, for example 'Customer' or 'Supplier'.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CompanyTypeOfCompany"
              }
            }
          }
        }
      }
    },
    "/v1/CompanyTypeToCompanies({Id})": {
      "get": {
        "tags": [
          "Companies - Company Type To Companies"
        ],
        "summary": "Returns the all company types of a specified company",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CompanyTypeOfCompany"
            }
          }
        }
      }
    },
    "/v1/CompanyTypes": {
      "get": {
        "tags": [
          "Companies - Company Types"
        ],
        "summary": "Returns all company types",
        "description": "A company type represents the type of a company, for example 'Customer' or 'Supplier'.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CompanyType"
              }
            }
          }
        }
      }
    },
    "/v1/CompanyTypes({Id})": {
      "get": {
        "tags": [
          "Companies - Company Types"
        ],
        "summary": "Returns the specified company type",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CompanyType"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Companies - Company Types"
        ],
        "summary": "Deletes the specified company type",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "If-Match header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        }
      }
    },
    "/v1/AzureConfig": {},
    "/v1/AzureConfig({Id})": {},
    "/v1/ConfigSystemEvents": {},
    "/v1/ConfigSystemEvents({Id})": {},
    "/v1/ConfigSystemEvents/do.GetDeleted()": {
      "get": {
        "tags": [
          "Config - Config System Events"
        ],
        "summary": "Returns the system events of deleted entities",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ConfigSystemEvent"
              }
            }
          }
        }
      }
    },
    "/v1/HangfireStats": {},
    "/v1/HangfireStats({Id})": {},
    "/v1/InternalCompanies": {
      "get": {
        "tags": [
          "Config - Internal Companies"
        ],
        "summary": "Returns all internal companies",
        "description": "Represents internal companies that can have different document templates and tax information.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/InternalCompany"
              }
            },
            "examples": {
              "application/json": [
                {
                  "Name": "Example Company",
                  "TaxNumber": "11/222/33333",
                  "TaxId": "DE123456789",
                  "IsTaxExempt": false,
                  "DefaultAddress": null,
                  "Id": 1,
                  "CreatedBy": 1,
                  "UpdatedBy": 1,
                  "CreatedOn": "2024-08-09T12:50:46.8211257Z",
                  "UpdatedOn": "2024-08-09T12:50:46.8211257Z"
                }
              ]
            }
          }
        }
      }
    },
    "/v1/InternalCompanies({Id})": {
      "get": {
        "tags": [
          "Config - Internal Companies"
        ],
        "summary": "Returns the internal company with the specified id",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/InternalCompany"
            }
          }
        }
      }
    },
    "/v1/LoginConfig": {},
    "/v1/LoginConfig('{Hostname}')": {},
    "/v1/MenuItems": {},
    "/v1/MenuItems({Id})": {},
    "/v1/ResponseTimeLogs": {},
    "/v1/ResponseTimeLogs({Id})": {},
    "/v1/Subsystem": {
      "get": {
        "tags": [
          "Config - Subsystem"
        ],
        "summary": "Returns all subsystems",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Subsystem"
              }
            }
          }
        }
      }
    },
    "/v1/Subsystem({Id})": {
      "get": {
        "tags": [
          "Config - Subsystem"
        ],
        "summary": "Returns all subsystems",
        "description": "",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Subsystem"
              }
            }
          }
        }
      }
    },
    "/v1/SystemUrl": {},
    "/v1/SystemUrl('{Hostname}')": {},
    "/v1/ContactHistories": {
      "get": {
        "tags": [
          "Contact Person - Contact Histories"
        ],
        "summary": "Returns all contact histories",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContactHistory"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Contact Person - Contact Histories"
        ],
        "summary": "Creates a new contact history",
        "parameters": [
          {
            "name": "contactHistory",
            "in": "body",
            "description": "The contact history to be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContactHistory"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        }
      }
    },
    "/v1/ContactHistories({Id})": {
      "get": {
        "tags": [
          "Contact Person - Contact Histories"
        ],
        "summary": "Returns the contact history with the specified id",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ContactHistory"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Contact Person - Contact Histories"
        ],
        "summary": "Updates an existing contact history",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "contactHistory",
            "in": "body",
            "description": "The contact history to be updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContactHistory"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ContactHistory"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Contact Person - Contact Histories"
        ],
        "summary": "Deletes a contact history",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "If-Match header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        }
      }
    },
    "/v1/ContactPersons": {
      "get": {
        "tags": [
          "Contact Person - Contact Persons"
        ],
        "summary": "Returns all contact persons",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContactPerson"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Contact Person - Contact Persons"
        ],
        "summary": "Creates a new contact person",
        "parameters": [
          {
            "name": "contactPerson",
            "in": "body",
            "description": "The contact person to be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContactPerson"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ContactPerson"
            }
          }
        }
      }
    },
    "/v1/ContactPersons({Id})": {
      "get": {
        "tags": [
          "Contact Person - Contact Persons"
        ],
        "summary": "Returns the contact person with the specified id",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ContactPerson"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Contact Person - Contact Persons"
        ],
        "summary": "Updates an existing contact person",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "contactPerson",
            "in": "body",
            "description": "The contact person to be updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContactPerson"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ContactPerson"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Contact Person - Contact Persons"
        ],
        "summary": "Deletes a contact person",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "If-Match header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        }
      }
    },
    "/v1/ContactPersons({Id})/CustomFields": {
      "get": {
        "tags": [
          "Contact Person - Contact Persons"
        ],
        "summary": "Returns all customfields of the contact person",
        "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomField"
              }
            }
          }
        }
      }
    },
    "/v1/ContactPersons({Id})/CustomFields({CustomFieldDefinitionId})": {
      "get": {
        "tags": [
          "Contact Person - Contact Persons"
        ],
        "summary": "Returns the custom field with the specified id of the sel...",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "CustomFieldDefinitionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomField"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Contact Person - Contact Persons"
        ],
        "summary": "Updates an existing customfield of the contact person",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "CustomFieldDefinitionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "CustomField",
            "in": "body",
            "description": "The customfield body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomField"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomField"
            }
          }
        }
      }
    },
    "/v1/CustomFieldDefinitions": {
      "get": {
        "tags": [
          "Custom Fields - Custom Field Definitions"
        ],
        "summary": "Returns all customfield definitions",
        "description": "A custom field definition is a customer-specific value field which extends certain entities.\r\n            Custom field definitions can currently only be created in the HQ, but can be accessed and modified in the API.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomFieldDefinition"
              }
            }
          }
        }
      }
    },
    "/v1/CustomFieldDefinitions({Id})": {
      "get": {
        "tags": [
          "Custom Fields - Custom Field Definitions"
        ],
        "summary": "Returns the custom field definition with the specified id",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomFieldDefinition"
            }
          }
        }
      }
    },
    "/v1/Demo": {},
    "/v1/Demo('{Token}')": {},
    "/v1/Demo('{Token}')/do.FinishDemo": {},
    "/v1/Demo('{Token}')/do.PrepareDemo": {},
    "/v1/CreditNotes": {
      "get": {
        "tags": [
          "Documents - Credit Notes"
        ],
        "summary": "Returns all creditNotes",
        "description": "A creditNote represents an outgoing creditNote you send to your customers.\r\n            Use expand=CancellationInformation to get information of\r\n            canceled credit note as well.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CreditNote"
              }
            }
          }
        }
      }
    },
    "/v1/CreditNotes({Id})": {
      "get": {
        "tags": [
          "Documents - Credit Notes"
        ],
        "summary": "Returns the creditNote with the specified id",
        "description": "A creditNote represents an outgoing creditNote you send to your customers.\r\n            Use expand=CancellationInformation to get information of\r\n            canceled credit note as well.",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreditNote"
            }
          }
        }
      }
    },
    "/v1/CreditNotes({Id})/Positions({PositionId})/CustomFields": {
      "get": {
        "tags": [
          "Documents - Credit Notes"
        ],
        "summary": "Returns all custom fields of the creditNote positions",
        "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "PositionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomField"
              }
            }
          }
        }
      }
    },
    "/v1/CreditNotes({Id})/Positions({PositionId})/CustomFields({CustomFieldDefinitionId})": {
      "get": {
        "tags": [
          "Documents - Credit Notes"
        ],
        "summary": "Returns the custom field with the specified id of the sel...",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "PositionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "CustomFieldDefinitionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomField"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Documents - Credit Notes"
        ],
        "summary": "Updates an existing custom field of the creditNote position",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "PositionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "CustomFieldDefinitionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "CustomField",
            "in": "body",
            "description": "The customfield body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomField"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomField"
            }
          }
        }
      }
    },
    "/v1/CreditNotes({Id})/Positions": {
      "get": {
        "tags": [
          "Documents - Credit Notes"
        ],
        "summary": "Returns all positions on the specified creditNote",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DocumentPosition"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Documents - Credit Notes"
        ],
        "summary": "Creates a new position on the specified creditNote",
        "description": "Creates a new document position. You can find more details about creditNotes in the <a href=\"#!/Documents_-_CreditNotes/CreditNotesV1_Get\">GET operation description</a>.",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "position",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocumentPosition"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/DocumentPosition"
            }
          }
        }
      }
    },
    "/v1/CreditNotes({Id})/Positions({PositionId})": {
      "get": {
        "tags": [
          "Documents - Credit Notes"
        ],
        "summary": "Returns a position on the specified creditNote",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "PositionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DocumentPosition"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Documents - Credit Notes"
        ],
        "summary": "Updates an existing position on the specified creditNote",
        "description": "Updates the position on the specified creditNote. You can find more details about creditNotes in the <a href=\"#!/Documents_-_CreditNotes/CreditNotesV1_Get\">GET operation description</a>.",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "PositionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "position",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocumentPosition"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DocumentPosition"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Documents - Credit Notes"
        ],
        "summary": "Deletes a position on the specified creditNote",
        "description": "Deletes the document position with the specified id.",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "PositionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        }
      }
    },
    "/v1/CreditNotes({Id})/DocumentFile/$value": {
      "get": {
        "tags": [
          "Documents - Credit Notes"
        ],
        "summary": "Returns the real binary data",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ODataResponse[List[Byte]]"
            }
          }
        }
      }
    },
    "/v1/DeliveryNotes": {
      "get": {
        "tags": [
          "Documents - Delivery Notes"
        ],
        "summary": "Returns all delivery notes",
        "description": "Returns a list of all delivery notes.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DeliveryNote"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Documents - Delivery Notes"
        ],
        "summary": "Creates a new delivery note",
        "description": "Creates a new delivery note.\r\n            You can find more details about delivery notes in the <a href=\"#!/Documents_-_DeliveryNotes/DeliveryNotesV1_Get\">GET operation description</a>.",
        "parameters": [
          {
            "name": "deliveryNote",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeliveryNote"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/DeliveryNote"
            }
          }
        }
      }
    },
    "/v1/DeliveryNotes({Id})": {
      "get": {
        "tags": [
          "Documents - Delivery Notes"
        ],
        "summary": "Returns the delivery note with the specified id",
        "description": "Returns the delivery note with the specified id.\r\n            You can find more details about delivery notes in the <a href=\"#!/Documents_-_DeliveryNotes/DeliveryNotesV1_Get\">GET operation description</a>.",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeliveryNote"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Documents - Delivery Notes"
        ],
        "summary": "Updates an existing delivery note",
        "description": "Updates the delivery note with the specified id.\r\n            You can find more details about delivery notes in the <a href=\"#!/Documents_-_DeliveryNotes/DeliveryNotesV1_Get\">GET operation description</a>.",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "deliveryNote",
            "in": "body",
            "description": "The model to update the devilvery note,",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeliveryNote"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeliveryNote"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Documents - Delivery Notes"
        ],
        "summary": "Deletes a delivery note",
        "description": "Deletes the delivery note with the specified id. \r\n            You can find more details about delivery notes in the <a href=\"#!/Documents_-_DeliveryNotes/DeliveryNotesV1_Get\">GET operation description</a>.",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "If-Match header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        }
      }
    },
    "/v1/DeliveryNotes({Id})/Positions": {
      "get": {
        "tags": [
          "Documents - Delivery Notes"
        ],
        "summary": "Returns all positions on the specified delivery note",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BaseDocumentPosition"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Documents - Delivery Notes"
        ],
        "summary": "Creates a new position on the specified delivery note",
        "description": "Creates a new document position. You can find more details about delivery notes in the <a href=\"#!/Documents_-_DeliveryNotes/DeliveryNotesV1_Get\">GET operation description</a>.",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "position",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BaseDocumentPosition"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/BaseDocumentPosition"
            }
          }
        }
      }
    },
    "/v1/DeliveryNotes({Id})/Positions({PositionId})": {
      "get": {
        "tags": [
          "Documents - Delivery Notes"
        ],
        "summary": "Returns a position on the specified delivery note",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "PositionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseDocumentPosition"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Documents - Delivery Notes"
        ],
        "summary": "Updates an existing position on the specified delivery note",
        "description": "Updates the document position. You can find more details about delivery notes in the <a href=\"#!/Documents_-_DeliveryNotes/DeliveryNotesV1_Get\">GET operation description</a>.",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "PositionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "position",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BaseDocumentPosition"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseDocumentPosition"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Documents - Delivery Notes"
        ],
        "summary": "Deletes a position on the specified delivery note",
        "description": "Deletes the document position with the specified id.",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "PositionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        }
      }
    },
    "/v1/DocumentConditions": {
      "get": {
        "tags": [
          "Documents - Document Conditions"
        ],
        "summary": "Returns all document conditions",
        "description": "A document condition is either a delivery condition or a payment condition. \r\n            These conditions contain information about legal texts and due dates that should be displayed on the document.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DocumentCondition"
              }
            },
            "examples": {
              "application/json": [
                {
                  "Name": "14 Days ",
                  "Text": null,
                  "DisplayText": null,
                  "DueInDays": null,
                  "Type": 0,
                  "WarningDays": null,
                  "ReminderDays": null,
                  "Language": null,
                  "DocumentEarlyPayments": null,
                  "Id": 1,
                  "CreatedBy": 1,
                  "UpdatedBy": 1,
                  "CreatedOn": "2024-08-09T12:50:47.2437313Z",
                  "UpdatedOn": "2024-08-09T12:50:47.2437313Z"
                },
                {
                  "Name": "7 Days",
                  "Text": null,
                  "DisplayText": null,
                  "DueInDays": null,
                  "Type": 0,
                  "WarningDays": null,
                  "ReminderDays": null,
                  "Language": null,
                  "DocumentEarlyPayments": null,
                  "Id": 0,
                  "CreatedBy": 1,
                  "UpdatedBy": 1,
                  "CreatedOn": "2024-08-09T12:50:47.2437313Z",
                  "UpdatedOn": "2024-08-09T12:50:47.2437313Z"
                }
              ]
            }
          }
        }
      }
    },
    "/v1/DocumentConditions({Id})": {
      "get": {
        "tags": [
          "Documents - Document Conditions"
        ],
        "summary": "Returns document conditions with the specified id",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DocumentCondition"
            }
          }
        }
      }
    },
    "/v1/DocumentPositions": {},
    "/v1/DocumentPositions({Id})": {},
    "/v1/DocumentTemplates": {
      "get": {
        "tags": [
          "Documents - Document Templates"
        ],
        "summary": "Returns all document templates",
        "description": "A document template represents the templates you designed in your HQ.\r\n            They contain your stationary, fonts and texts for invoices, quotations and other types of documents.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DocumentTemplate"
              }
            },
            "examples": {
              "application/json": [
                {
                  "Name": "Invoice",
                  "DocumentType": 1,
                  "Language": "de-DE",
                  "InternalCompanyId": null,
                  "InternalCompany": null,
                  "Id": 1,
                  "CreatedBy": 1,
                  "UpdatedBy": 1,
                  "CreatedOn": "2024-08-09T12:50:47.2889393Z",
                  "UpdatedOn": "2024-08-09T12:50:47.2889393Z"
                },
                {
                  "Name": "Akonto",
                  "DocumentType": 14,
                  "Language": "de-DE",
                  "InternalCompanyId": null,
                  "InternalCompany": null,
                  "Id": 1,
                  "CreatedBy": 1,
                  "UpdatedBy": 1,
                  "CreatedOn": "2024-08-09T12:50:47.2889393Z",
                  "UpdatedOn": "2024-08-09T12:50:47.2889393Z"
                }
              ]
            }
          }
        }
      }
    },
    "/v1/DocumentTemplates({Id})": {
      "get": {
        "tags": [
          "Documents - Document Templates"
        ],
        "summary": "Returns document template with the specified id",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CompanyType"
            }
          }
        }
      }
    },
    "/v1/Documents({Id})": {},
    "/v1/Documents({Id})/Files": {},
    "/v1/IncomingInvoices": {
      "get": {
        "tags": [
          "Documents - Incoming Invoices"
        ],
        "summary": "Returns the incoming invoices",
        "description": "Returns the incoming invoices",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IncomingInvoice"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Documents - Incoming Invoices"
        ],
        "summary": "Creates a new incoming invoice",
        "description": "Creates the incoming invoice. You can find more details about incoming invoices in the <a href=\"#!/Documents_-_IncomingInvoices/IncomingInvoicesV1_Get\">GET operation description</a>.",
        "parameters": [
          {
            "name": "IncomingInvoice",
            "in": "body",
            "description": "The entity to post",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IncomingInvoice"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/IncomingInvoice"
            }
          }
        }
      }
    },
    "/v1/IncomingInvoices({Id})": {
      "get": {
        "tags": [
          "Documents - Incoming Invoices"
        ],
        "summary": "Returns the incoming invoice with the specified id",
        "description": "Returns the incoming invoice with the specified id",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/IncomingInvoice"
            }
          }
        }
      }
    },
    "/v1/IncomingInvoices({Id})/do.SetStatus": {
      "post": {
        "tags": [
          "Documents - Incoming Invoices"
        ],
        "summary": "Changes the status of an incoming invoice",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "InvoicesV1SetStatusParameters",
            "in": "body",
            "description": "The parameter object, where 'status' is the new status to set",
            "required": true,
            "schema": {
              "required": [
                "Status"
              ],
              "type": "object",
              "properties": {
                "Status": {
                  "enum": [
                    "Draft",
                    "WaitingForReview",
                    "Sent",
                    "PartlyPaid",
                    "CompletelyPaid",
                    "Canceled",
                    "WaitingForApproval",
                    "Approved"
                  ],
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        }
      }
    },
    "/v1/IncomingInvoices({Id})/Positions({PositionId})/CustomFields({CustomFieldDefinitionId})": {
      "put": {
        "tags": [
          "Documents - Incoming Invoices"
        ],
        "summary": "Updates an existing custom field of the incoming invoice ...",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "PositionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "CustomFieldDefinitionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "CustomField",
            "in": "body",
            "description": "The customfield body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomField"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomField"
            }
          }
        }
      }
    },
    "/v1/Invoices": {
      "get": {
        "tags": [
          "Documents - Invoices"
        ],
        "summary": "Returns all invoices",
        "description": "Returns a list of all invoices. Invoices represent valid legal documents consisting of one or multiple positions and a total sum. <br />\r\n            Invoices come in several types:\r\n            <ul><li><b>Invoice</b>: an invoice you sent to a customer.</li><li><b>Advance Invoice</b>: an advance payment invoice that you sent to a customer.</li><li><b>Final Invoice</b>: the final invoice of one or several advance invoices.</li><li><b>Cancellation</b>: a cancellation of an invoice or advance invoice.</li></ul>",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Invoice"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Documents - Invoices"
        ],
        "summary": "Creates a new invoice",
        "description": "Creates the invoice. You can find more details about invoices in the <a href=\"#!/Documents_-_Invoices/InvoicesV1_Get\">GET operation description</a>.",
        "parameters": [
          {
            "name": "invoice",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Invoice"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Invoice"
            }
          }
        }
      }
    },
    "/v1/Invoices({Id})": {
      "get": {
        "tags": [
          "Documents - Invoices"
        ],
        "summary": "Returns the invoice with the specified id",
        "description": "Returns the invoice with the specified id. You can find more details about invoices in the <a href=\"#!/Documents_-_Invoices/InvoicesV1_Get\">GET operation description</a>.",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Invoice"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Documents - Invoices"
        ],
        "summary": "Updates an existing invoice",
        "description": "Updates the invoice. You can find more details about invoices in the <a href=\"#!/Documents_-_Invoices/InvoicesV1_Get\">GET operation description</a>.",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "invoice",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Invoice"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Invoice"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Documents - Invoices"
        ],
        "summary": "Deletes an invoice",
        "description": "Deletes the invoice with the specified id. You can find more details about invoices in the <a href=\"#!/Documents_-_Invoices/InvoicesV1_Get\">GET operation description</a>.",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "If-Match header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        }
      }
    },
    "/v1/Invoices({Id})/do.SetStatus": {
      "post": {
        "tags": [
          "Documents - Invoices"
        ],
        "summary": "Changes the status of an invoice",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "InvoicesV1SetStatusParameters",
            "in": "body",
            "description": "The parameter object, where 'status' is the new status to set",
            "required": true,
            "schema": {
              "required": [
                "Status"
              ],
              "type": "object",
              "properties": {
                "Status": {
                  "enum": [
                    "Draft",
                    "WaitingForReview",
                    "Sent",
                    "PartlyPaid",
                    "CompletelyPaid",
                    "Canceled",
                    "WaitingForApproval",
                    "Approved"
                  ],
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        }
      }
    },
    "/v1/Invoices({Id})/do.CreateCancellation": {
      "post": {
        "tags": [
          "Documents - Invoices"
        ],
        "summary": "Creates a cancellation of a given invoice",
        "description": "Creates a cancellation of the specified invoice.",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Invoice"
            }
          }
        }
      }
    },
    "/v1/Invoices({Id})/do.CopyInvoice": {
      "post": {
        "tags": [
          "Documents - Invoices"
        ],
        "summary": "Creates a copy of the invoice",
        "description": "Creates a copy of the invoice. The copy is not linked to the given invoice and can be edited freely. If the original invoice has positions with reportings, freetext positions will be generated without linking to the reportings.",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Invoice"
            }
          }
        }
      }
    },
    "/v1/Invoices({Id})/do.AttachAdvanceInvoice": {
      "post": {
        "tags": [
          "Documents - Invoices"
        ],
        "summary": "Attaches an advance invoice to the given invoice",
        "description": "When creating a final invoice manually (not by the action 'CreateFinalInvoice' on a quotation), this action gives you the possibility to attach created advance invoices to the invoice.\r\n            By attaching advance invoices to an invoice it automatically makes the invoice a final invoice.",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "InvoicesV1AttachAdvanceInvoiceParameters",
            "in": "body",
            "description": "The parameter object, where 'advanceInvoiceId' is required and represents the Id of the advance invoice that should be attached to the invoice.",
            "required": true,
            "schema": {
              "required": [
                "AdvanceInvoiceId"
              ],
              "type": "object",
              "properties": {
                "AdvanceInvoiceId": {
                  "format": "double",
                  "type": "number"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        }
      }
    },
    "/v1/Invoices({Id})/Positions({PositionId})/CustomFields": {
      "get": {
        "tags": [
          "Documents - Invoices"
        ],
        "summary": "Returns all custom fields of the invoice positions",
        "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "PositionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomField"
              }
            }
          }
        }
      }
    },
    "/v1/Invoices({Id})/Positions({PositionId})/CustomFields({CustomFieldDefinitionId})": {
      "get": {
        "tags": [
          "Documents - Invoices"
        ],
        "summary": "Returns the custom field with the specified id of the sel...",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "PositionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "CustomFieldDefinitionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomField"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Documents - Invoices"
        ],
        "summary": "Updates an existing custom field of the invoice position",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "PositionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "CustomFieldDefinitionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "CustomField",
            "in": "body",
            "description": "The customfield body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomField"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomField"
            }
          }
        }
      }
    },
    "/v1/Invoices({Id})/Positions": {
      "get": {
        "tags": [
          "Documents - Invoices"
        ],
        "summary": "Returns all positions on the specified invoice",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DocumentPosition"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Documents - Invoices"
        ],
        "summary": "Creates a new position on the specified invoice",
        "description": "Creates a new document position. You can find more details about invoices in the <a href=\"#!/Documents_-_Invoices/InvoicesV1_Get\">GET operation description</a>.",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "position",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocumentPosition"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/DocumentPosition"
            }
          }
        }
      }
    },
    "/v1/Invoices({Id})/Positions({PositionId})": {
      "get": {
        "tags": [
          "Documents - Invoices"
        ],
        "summary": "Returns a position on the specified invoice",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "PositionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DocumentPosition"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Documents - Invoices"
        ],
        "summary": "Updates an existing position on the specified invoice",
        "description": "Updates the document position. You can find more details about invoices in the <a href=\"#!/Documents_-_Invoices/InvoicesV1_Get\">GET operation description</a>.",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "PositionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "position",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocumentPosition"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DocumentPosition"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Documents - Invoices"
        ],
        "summary": "Deletes a position on the specified invoice",
        "description": "Deletes the document position with the specified id.",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "PositionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        }
      }
    },
    "/v1/Invoices({Id})/DocumentFile/$value": {
      "get": {
        "tags": [
          "Documents - Invoices"
        ],
        "summary": "Returns the real binary data of the pdf file",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ODataResponse[List[Byte]]"
            }
          }
        }
      }
    },
    "/v1/PlannedRevenues": {
      "get": {
        "tags": [
          "Documents - Planned Revenues"
        ],
        "summary": "Returns all planned revenues",
        "description": "Returns a list of all planned revenues. Planned revenues are all individual occurrences of expected payments. <br />\r\n            The Recurrence property contains details about the interval, start and end of the recurring planned revenue.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PlannedRevenue"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Documents - Planned Revenues"
        ],
        "summary": "Creates a new planned revenue",
        "description": "You can find more details about planned revenues in the <a href=\"#!/Documents_-_PlannedRevenues/PlannedRevenuesV1_Get\">GET operation description</a>.",
        "parameters": [
          {
            "name": "plannedRevenue",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PlannedRevenuePost"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/PlannedRevenue"
            }
          }
        }
      }
    },
    "/v1/PlannedRevenues({Id})": {
      "get": {
        "tags": [
          "Documents - Planned Revenues"
        ],
        "summary": "Returns the planned revenue with the specified id",
        "description": "Returns the planned revenue with the specified id. You can find more details about planned revenues in the <a href=\"#!/Documents_-PlannedRevenues/PlannedRevenuesV1_Get\">GET operation description</a>.",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PlannedRevenue"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Documents - Planned Revenues"
        ],
        "summary": "Updates an existing planned revenue",
        "description": "You can find more details about planned revenues in the <a href=\"#!/Documents_-_PlannedRevenues/PlannedRevenuesV1_Get\">GET operation description</a>.",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "plannedRevenue",
            "in": "body",
            "description": "The model to update the planned revenue",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PlannedRevenuePut"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PlannedRevenue"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Documents - Planned Revenues"
        ],
        "summary": "Deletes a planned revenue",
        "description": "Deletes the planned revenue with the specified id",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "If-Match header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        }
      }
    },
    "/v1/PlannedRevenues({Id})/do.UpdateProbability": {
      "post": {
        "tags": [
          "Documents - Planned Revenues"
        ],
        "summary": "Creates a new planned revenue",
        "description": "Creates the planned revenuw. You can find more details about planned revenues in the <a href=\"#!/Documents_-_PlannedRevenues/PlannedRevenuesV1_Get\">GET operation description</a>.",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/PlannedRevenue"
            }
          }
        }
      }
    },
    "/v1/PlannedRevenues({PlannedRevenueId})/Positions({PositionId})": {
      "get": {
        "tags": [
          "Documents - Planned Revenues"
        ],
        "summary": "Returns the position on the specified planned revenue",
        "parameters": [
          {
            "name": "PlannedRevenueId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "PositionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DocumentPosition"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Documents - Planned Revenues"
        ],
        "summary": "Updates an existing position on the specified planned rev...",
        "description": "Updates the position on the specified planned revenue. \r\n            You can find more details about planned revenues in the <a href=\"#!/Documents_-_PlannedRevenues/PlannedRevenuesV1_Get\">GET operation description</a>.",
        "parameters": [
          {
            "name": "PlannedRevenueId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "PositionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "position",
            "in": "body",
            "description": "The model to update the position of the planned revenue.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocumentPosition"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DocumentPosition"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Documents - Planned Revenues"
        ],
        "summary": "Deletes a position on the specified planned revenue",
        "description": "Deletes the document position with the specified id.",
        "parameters": [
          {
            "name": "PlannedRevenueId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "PositionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        }
      }
    },
    "/v1/PlannedRevenues({PlannedRevenueId})/RecurringPlannedRevenues": {
      "get": {
        "tags": [
          "Documents - Planned Revenues"
        ],
        "summary": "Returns the recurring planned revenues of the specified p...",
        "description": "Returns the recurring planned revenues if the planned revenue of the specified id\r\n            has a recurring interval.\r\n            You can find more details about planned \r\n            revenues in the <a href=\"#!/Documents_-PlannedRevenues/PlannedRevenuesV1_Get\">GET operation description</a>.",
        "parameters": [
          {
            "name": "PlannedRevenueId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RecurringPlannedRevenue"
              }
            }
          }
        }
      }
    },
    "/v1/PlannedRevenues({PlannedRevenueId})/Positions": {
      "post": {
        "tags": [
          "Documents - Planned Revenues"
        ],
        "summary": "Creates a new position on the specified planned revenue",
        "description": "Creates a new document position. \r\n            You can find more details about planned revenues in the <a href=\"#!/Documents_-_PlannedRevenues/PlannedRevenuesV1_Get\">GET operation description</a>.",
        "parameters": [
          {
            "name": "PlannedRevenueId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "position",
            "in": "body",
            "description": "The model to create the position of the planned revenue",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocumentPosition"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/DocumentPosition"
            }
          }
        }
      }
    },
    "/v1/PlannedRevenues({Id})/Positions({PositionId})/CustomFields": {
      "get": {
        "tags": [
          "Documents - Planned Revenues"
        ],
        "summary": "Returns all custom fields of the planned revenue positions",
        "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "PositionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomField"
              }
            }
          }
        }
      }
    },
    "/v1/PlannedRevenues({Id})/Positions({PositionId})/CustomFields({CustomFieldDefinitionId})": {
      "get": {
        "tags": [
          "Documents - Planned Revenues"
        ],
        "summary": "Returns the custom field with the specified id of the sel...",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "PositionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "CustomFieldDefinitionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomField"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Documents - Planned Revenues"
        ],
        "summary": "Updates an existing custom field of the planned revenue p...",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "PositionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "CustomFieldDefinitionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "CustomField",
            "in": "body",
            "description": "The customfield body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomField"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomField"
            }
          }
        }
      }
    },
    "/v1/Quotations": {
      "get": {
        "tags": [
          "Documents - Quotations"
        ],
        "summary": "Returns all quotations",
        "description": "A quotation represents an outgoing quotation you send to your customers.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Quotation"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Documents - Quotations"
        ],
        "summary": "Creates a new quotation",
        "parameters": [
          {
            "name": "quotation",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Quotation"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Quotation"
            }
          }
        }
      }
    },
    "/v1/Quotations({Id})": {
      "get": {
        "tags": [
          "Documents - Quotations"
        ],
        "summary": "Returns the quotation with the specified id",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Quotation"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Documents - Quotations"
        ],
        "summary": "Updates an existing quotation",
        "description": "Updates the quotation. You can find more details about quotations in the <a href=\"#!/Documents_-_Quotations/QuotationsV1_Get\">GET operation description</a>.",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "quotation",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Quotation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Quotation"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Documents - Quotations"
        ],
        "summary": "Deletes a quotation",
        "description": "Deletes the quotation with the specified id. You can find more details about quotations in the <a href=\"#!/Documents_-_Quotations/QuotationsV1_Get\">GET operation description</a>.",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "If-Match header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        }
      }
    },
    "/v1/Quotations({Id})/do.SetStatus": {
      "post": {
        "tags": [
          "Documents - Quotations"
        ],
        "summary": "Changes the status of a quotation",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "QuotationsV1SetStatusParameters",
            "in": "body",
            "description": "The parameter object, where 'status' is the new status to set",
            "required": true,
            "schema": {
              "required": [
                "Status"
              ],
              "type": "object",
              "properties": {
                "Status": {
                  "enum": [
                    "Draft",
                    "WaitingForReview",
                    "Sent",
                    "Accepted",
                    "Declined",
                    "Canceled",
                    "Share1",
                    "Share2"
                  ],
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        }
      }
    },
    "/v1/Quotations({Id})/do.CreateFinalInvoice": {
      "post": {
        "tags": [
          "Documents - Quotations"
        ],
        "summary": "Creates the final invoice for a quotation",
        "description": "Creates the final invoice for the given quotation. The final invoice automatically includes all advance invoices which have been created for this quotation.\r\n            This action is only required when advance invoices have been created for the quotation.",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Invoice"
            }
          }
        }
      }
    },
    "/v1/Quotations({Id})/do.CreatePlannedRevenue": {
      "post": {
        "tags": [
          "Documents - Quotations"
        ],
        "summary": "Creates the planned revenue for a quotation",
        "description": "Creates the planned revenue for the given quotation.",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model",
            "in": "body",
            "description": "The model to create the planned revenue",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QuotationPlannedRevenuePost"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/PlannedRevenue"
            }
          }
        }
      }
    },
    "/v1/Quotations({Id})/do.CopyQuotation": {
      "post": {
        "tags": [
          "Documents - Quotations"
        ],
        "summary": "Creates a copy of a quotation",
        "description": "Creates a copy of the given quotation without linking the documents. The copy can be fully edited.",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Quotation"
            }
          }
        }
      }
    },
    "/v1/Quotations({Id})/do.CreateAdvanceInvoice": {
      "post": {
        "tags": [
          "Documents - Quotations"
        ],
        "summary": "Creates an advance invoice for a quotation",
        "description": "Creates an advance invoice for the given quotation. An advance invoice represents an invoice which only includes a part of the whole quotation sum. This fraction can either be a percentage of the quotation sum or a defined fixed sum.\r\n            Remember when creating advance invoices, a final invoice has to be created at the end of the billing process which then automatically includes the complete total sum and summarizes the send advance invoices.",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "QuotationsV1CreateAdvanceInvoiceParameters",
            "in": "body",
            "description": "The parameter object, where 'invoiceType' and 'advanceInvoiceValue' are required. 'invoiceType' can either be '1' (take a certain percentage of the whole invoice for the advance invoice) or '2' (make an advance invoice with a fixed sum in the invoice currency). In case of a percentage, 'advanceInvoiceValue' represents the percentage value 0-100. In case of a fixed sum, it represents the net sum of the advance invoice, which must be less or equal to the quotation total.",
            "required": true,
            "schema": {
              "required": [
                "InvoiceType",
                "AdvanceInvoiceValue"
              ],
              "type": "object",
              "properties": {
                "InvoiceType": {
                  "enum": [
                    "Finish",
                    "Positions",
                    "Percentage",
                    "Absolute"
                  ],
                  "type": "string"
                },
                "AdvanceInvoiceValue": {
                  "format": "double",
                  "type": "number"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Invoice"
            }
          }
        }
      }
    },
    "/v1/Quotations({Id})/do.CreateInvoice": {
      "post": {
        "tags": [
          "Documents - Quotations"
        ],
        "summary": "Creates an invoice for a quotation",
        "description": "Creates an invoice for the given quotation. The invoice automatically includes all positions of the quotation which are not yet on another valid invoice.",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Invoice"
            }
          }
        }
      }
    },
    "/v1/Quotations({Id})/Positions({PositionId})/CustomFields": {
      "get": {
        "tags": [
          "Documents - Quotations"
        ],
        "summary": "Returns all custom fields of the quotation positions",
        "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "PositionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomField"
              }
            }
          }
        }
      }
    },
    "/v1/Quotations({Id})/Positions({PositionId})/CustomFields({CustomFieldDefinitionId})": {
      "get": {
        "tags": [
          "Documents - Quotations"
        ],
        "summary": "Returns the custom field with the specified id of the sel...",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "PositionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "CustomFieldDefinitionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomField"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Documents - Quotations"
        ],
        "summary": "Updates an existing custom field of the quotation position",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "PositionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "CustomFieldDefinitionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "CustomField",
            "in": "body",
            "description": "The customfield body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomField"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomField"
            }
          }
        }
      }
    },
    "/v1/Quotations({Id})/Positions": {
      "get": {
        "tags": [
          "Documents - Quotations"
        ],
        "summary": "Returns all positions on the specified quotation",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DocumentPosition"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Documents - Quotations"
        ],
        "summary": "Creates a new position on the specified quotation",
        "description": "Creates a new document position. You can find more details about quotations in the <a href=\"#!/Documents_-_Quotations/QuotationsV1_Get\">GET operation description</a>.",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "position",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocumentPosition"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/DocumentPosition"
            }
          }
        }
      }
    },
    "/v1/Quotations({Id})/Positions({PositionId})": {
      "get": {
        "tags": [
          "Documents - Quotations"
        ],
        "summary": "Returns a position on the specified quotation",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "PositionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DocumentPosition"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Documents - Quotations"
        ],
        "summary": "Updates an existing position on the specified quotation",
        "description": "Updates the position on the specified quotation. You can find more details about quotations in the <a href=\"#!/Documents_-_Quotations/QuotationsV1_Get\">GET operation description</a>.",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "PositionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "position",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocumentPosition"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DocumentPosition"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Documents - Quotations"
        ],
        "summary": "Deletes a position on the specified quotation",
        "description": "Deletes the document position with the specified id.",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "PositionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        }
      }
    },
    "/v1/Files": {
      "get": {
        "tags": [
          "Files - Files"
        ],
        "summary": "Returns all file meta data",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HQFile"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Files - Files"
        ],
        "summary": "Creates new file meta data",
        "parameters": [
          {
            "name": "HQFile",
            "in": "body",
            "description": "The entity to post",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HQFile"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/HQFile"
            }
          }
        }
      }
    },
    "/v1/Files({Id})": {
      "get": {
        "tags": [
          "Files - Files"
        ],
        "summary": "Returns the meta data of the file",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HQFile"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Files - Files"
        ],
        "summary": "Updates existing file meta data",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "HQFile",
            "in": "body",
            "description": "The entity to put",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HQFile"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HQFile"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Files - Files"
        ],
        "summary": "Deletes a file (meta data and binary content)",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "If-Match header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        }
      }
    },
    "/v1/Files({Id})/do.Upload": {
      "post": {
        "tags": [
          "Files - Files"
        ],
        "summary": "Uploads the binary data of the file",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        }
      }
    },
    "/v1/Files({Id})/$value": {
      "get": {
        "tags": [
          "Files - Files"
        ],
        "summary": "Downloads the binary data of the file",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "byte",
              "type": "string"
            }
          }
        }
      }
    },
    "/v1/FinancesCostTypes": {
      "get": {
        "tags": [
          "Finances - Finances Cost Types"
        ],
        "summary": "Returns all available cost types",
        "description": "Represents a cost type which can be assigned to costos",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FinancesCostType"
              }
            }
          }
        }
      }
    },
    "/v1/FinancesCostTypes({Id})": {
      "get": {
        "tags": [
          "Finances - Finances Cost Types"
        ],
        "summary": "Returns the cost type with the specified id",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FinancesCostType"
            }
          }
        }
      }
    },
    "/v1/HealthCheck": {},
    "/v1/HealthCheck({Id})": {},
    "/v1/ExternalIntegrationsCallback": {},
    "/v1/ExternalIntegrationsCallback('{Id}')": {},
    "/v1/LeadStatuses": {
      "get": {
        "tags": [
          "Leads - Lead Statuses"
        ],
        "summary": "Returns all lead status",
        "description": "Represents the status a lead is in.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LeadStatus"
              }
            }
          }
        }
      }
    },
    "/v1/LeadStatuses({Id})": {
      "get": {
        "tags": [
          "Leads - Lead Statuses"
        ],
        "summary": "Returns the lead status with the specified id",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LeadStatus"
            }
          }
        }
      }
    },
    "/v1/Leads": {
      "get": {
        "tags": [
          "Leads - Leads"
        ],
        "summary": "Returns all leads",
        "description": "A lead represents a deal or prospective customer that you are in contact with.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Lead"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Leads - Leads"
        ],
        "summary": "Creates a new Lead",
        "parameters": [
          {
            "name": "lead",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Lead"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Company"
            }
          }
        }
      }
    },
    "/v1/Leads({Id})": {
      "get": {
        "tags": [
          "Leads - Leads"
        ],
        "summary": "Returns the lead with the specified id",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Lead"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Leads - Leads"
        ],
        "summary": "Updates an existing lead",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "lead",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Lead"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Lead"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Leads - Leads"
        ],
        "summary": "Deletes a lead",
        "description": "Deletes the lead with the specified id",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "If-Match header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        }
      }
    },
    "/v1/Leads({Id})/CustomFields": {
      "get": {
        "tags": [
          "Leads - Leads"
        ],
        "summary": "Returns all customfields of the lead",
        "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomField"
              }
            }
          }
        }
      }
    },
    "/v1/Leads({Id})/CustomFields({CustomFieldDefinitionId})": {
      "get": {
        "tags": [
          "Leads - Leads"
        ],
        "summary": "Returns the custom field with the specified id of the sel...",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "CustomFieldDefinitionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomField"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Leads - Leads"
        ],
        "summary": "Updates an existing customfield of the lead",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "CustomFieldDefinitionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "CustomField",
            "in": "body",
            "description": "The customfield body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomField"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomField"
            }
          }
        }
      }
    },
    "/v1/PlannedCosts": {
      "get": {
        "tags": [
          "Projects - Planned Costs"
        ],
        "summary": "Returns all planned costs.",
        "description": "Returns a list of all planned costs. Planned costs are expected costs in a project.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PlannedCost"
              }
            }
          }
        }
      }
    },
    "/v1/PlannedCosts({Id})": {
      "get": {
        "tags": [
          "Projects - Planned Costs"
        ],
        "summary": "Returns the planned cost with the specified id.",
        "description": "Returns the planned cost with the specified id. Planned costs are expected costs in a project.",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PlannedCost"
            }
          }
        }
      }
    },
    "/v1/ProjectBudgets": {
      "get": {
        "tags": [
          "Projects - Project Budgets"
        ],
        "summary": "Returns all project budgets",
        "description": "Represents a budget item of a project.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProjectBudget"
              }
            }
          }
        }
      }
    },
    "/v1/ProjectBudgets({Id})": {
      "get": {
        "tags": [
          "Projects - Project Budgets"
        ],
        "summary": "Returns the project budget with the specified id",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProjectBudget"
            }
          }
        }
      }
    },
    "/v1/ProjectRoles": {
      "get": {
        "tags": [
          "Projects - Project Roles"
        ],
        "summary": "Returns all project roles",
        "description": "A project role.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProjectRole"
              }
            }
          }
        }
      }
    },
    "/v1/ProjectRoles({Id})": {
      "get": {
        "tags": [
          "Projects - Project Roles"
        ],
        "summary": "Returns the project role with the specified id",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProjectRole"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Projects - Project Roles"
        ],
        "summary": "Deletes a project role",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "If-Match header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        }
      }
    },
    "/v1/ProjectStatuses": {
      "get": {
        "tags": [
          "Projects - Project Statuses"
        ],
        "summary": "Returns all project status",
        "description": "Represents the status of a project.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProjectStatus"
              }
            }
          }
        }
      }
    },
    "/v1/ProjectStatuses({Id})": {
      "get": {
        "tags": [
          "Projects - Project Statuses"
        ],
        "summary": "Returns the project status with the specified id",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProjectStatus"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Projects - Project Statuses"
        ],
        "summary": "Deletes a project status",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "If-Match header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        }
      }
    },
    "/v1/ProjectTasks": {
      "get": {
        "tags": [
          "Projects - Project Tasks"
        ],
        "summary": "Returns all project tasks",
        "description": "A task represents a To-Do or other forms of tasks, in this case tasks of a project.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Task"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Projects - Project Tasks"
        ],
        "summary": "Creates a new project task",
        "description": "Adds a new task, which requires a valid project id",
        "parameters": [
          {
            "name": "Task",
            "in": "body",
            "description": "The entity to post",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        }
      }
    },
    "/v1/ProjectTasks({Id})": {
      "get": {
        "tags": [
          "Projects - Project Tasks"
        ],
        "summary": "Returns the project task with the specified id",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Projects - Project Tasks"
        ],
        "summary": "Updates an existing project task",
        "description": "Alters a task.\r\n            Requires a valid project Id;",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Task",
            "in": "body",
            "description": "The entity to put",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Projects - Project Tasks"
        ],
        "summary": "Deletes a project task",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "If-Match header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        }
      }
    },
    "/v1/ProjectTasks({Id})/do.Finish": {
      "post": {
        "tags": [
          "Projects - Project Tasks"
        ],
        "summary": "Marks the project task as finished",
        "description": "Finishes a task",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        }
      }
    },
    "/v1/ProjectTasks({Id})/do.Open": {
      "post": {
        "tags": [
          "Projects - Project Tasks"
        ],
        "summary": "Marks the project task as open",
        "description": "Opens a task",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        }
      }
    },
    "/v1/ProjectTasks({Id})/do.SetStatus": {
      "post": {
        "tags": [
          "Projects - Project Tasks"
        ],
        "summary": "Changes the status of a task",
        "description": "Sets the TaskTypeStatus of the task.\r\n            The IsCompleted attribute of the status has an impact on the IsDone attribute of the task. If\r\n            the new status has IsCompleted == true/false, the task's IsDone will be set to true/false as well.",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "ProjectTaskV1SetStatusParams",
            "in": "body",
            "description": "Contains the status to set",
            "required": true,
            "schema": {
              "required": [
                "Status"
              ],
              "type": "object",
              "properties": {
                "Status": {
                  "format": "int32",
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        }
      }
    },
    "/v1/ProjectTasks({Id})/Dependencies": {
      "get": {
        "tags": [
          "Projects - Project Tasks"
        ],
        "summary": "Returns all task dependencies of the task with the specif...",
        "description": "The dependencies of a task",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaskDependency"
              }
            }
          }
        }
      }
    },
    "/v1/ProjectTasks({Id})/Dependencies({DependencyId})": {
      "get": {
        "tags": [
          "Projects - Project Tasks"
        ],
        "summary": "Returns the task dependency with the specified id of the ...",
        "description": "The dependency of a task",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "DependencyId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TaskDependency"
            }
          }
        }
      }
    },
    "/v1/ProjectTasks({Id})/Assignments": {
      "get": {
        "tags": [
          "Projects - Project Tasks"
        ],
        "summary": "Returns all task assignments of the selected task",
        "description": "The assignment of a user to a task",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaskAssignment"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Projects - Project Tasks"
        ],
        "summary": "Creates a new project task assignment.",
        "description": "Creates a new project task assignment.",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "assignmentExternal",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskAssignment"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/TaskAssignment"
            }
          }
        }
      }
    },
    "/v1/ProjectTasks({Id})/Assignments({AssignmentId})": {
      "get": {
        "tags": [
          "Projects - Project Tasks"
        ],
        "summary": "Returns the task assignment of the selected task",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "AssignmentId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TaskAssignment"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Projects - Project Tasks"
        ],
        "summary": "Deletes a project task assignment.",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "AssignmentId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        }
      }
    },
    "/v1/ProjectTemplates": {
      "get": {
        "tags": [
          "Projects - Project Templates"
        ],
        "summary": "Returns all project templates",
        "description": "A project template defines the default tasks of this project and whether the project is internal or external.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProjectTemplate"
              }
            }
          }
        }
      }
    },
    "/v1/ProjectTemplates({Id})": {
      "get": {
        "tags": [
          "Projects - Project Templates"
        ],
        "summary": "Returns the project status with the specified id",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProjectTemplate"
            }
          }
        }
      }
    },
    "/v1/Projects": {
      "get": {
        "tags": [
          "Projects - Projects"
        ],
        "summary": "Returns all projects",
        "description": "A project represents a service you are performing for a customer, like a job or any other project-based service.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Project"
              }
            }
          }
        }
      }
    },
    "/v1/Projects({Id})": {
      "get": {
        "tags": [
          "Projects - Projects"
        ],
        "summary": "Returns the project with the specified id",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          }
        }
      }
    },
    "/v1/Projects/do.Create": {
      "post": {
        "tags": [
          "Projects - Projects"
        ],
        "summary": "Creates a new project",
        "description": "Creates a new project.\r\n            The parameter requirements are depending on the template.\r\n            \r\n            External Projects require:\r\n            - CompanyId\r\n            \r\n            Internal Projects Require:\r\n            - ResponsibleUserId\r\n            \r\n            External Projects also allow a contactPerson to be set.\r\n            \r\n            If the template has a number schema, any number parameter will be ignored. If there is no \r\n            number schema, the number parameter is optional as the next valid project number will be \r\n            generated and used.\r\n            \r\n            The ProjectStatusId is optional. If none is provided, the first valid ProjectStatus for \r\n            the given template will be used.\r\n            \r\n            The StartDate will be used as the PlannendStartDate and for the start date of the first project\r\n            plan task.",
        "parameters": [
          {
            "name": "ProjectV1CreateParameters",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "required": [
                "ProjectTemplateId",
                "Name"
              ],
              "type": "object",
              "properties": {
                "ProjectTemplateId": {
                  "format": "int32",
                  "type": "integer"
                },
                "Name": {
                  "type": "string"
                },
                "Number": {
                  "type": "string"
                },
                "CompanyId": {
                  "format": "int32",
                  "type": "integer"
                },
                "ContactPersonId": {
                  "format": "int32",
                  "type": "integer"
                },
                "ResponsibleUserId": {
                  "format": "int32",
                  "type": "integer"
                },
                "LeadId": {
                  "format": "int32",
                  "type": "integer"
                },
                "StartDate": {
                  "format": "date-time",
                  "type": "string"
                },
                "EndDate": {
                  "format": "date-time",
                  "type": "string"
                },
                "ProjectStatusId": {
                  "format": "int32",
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Project"
              }
            }
          }
        }
      }
    },
    "/v1/Projects({Id})/do.AddMember": {
      "post": {
        "tags": [
          "Projects - Projects"
        ],
        "summary": "Adds a new member for the given project",
        "description": "Assigns a user to the project of the specified project.",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "ProjectV1AddMemberParameters",
            "in": "body",
            "description": "Required parameters are UserId and ProjectRoleId. Optional parameters are ExternalChargeRateId, ExternalChargeRateValue and ExternalChargeRateCurrency.",
            "required": true,
            "schema": {
              "required": [
                "UserId",
                "ProjectRoleId"
              ],
              "type": "object",
              "properties": {
                "UserId": {
                  "format": "int32",
                  "type": "integer"
                },
                "ProjectRoleId": {
                  "format": "int32",
                  "type": "integer"
                },
                "ExternalChargeRateId": {
                  "format": "int32",
                  "type": "integer"
                },
                "ExternalChargeRateValue": {
                  "format": "decimal",
                  "type": "number"
                },
                "ExternalChargeRateCurrency": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ProjectMember"
            }
          }
        }
      }
    },
    "/v1/Projects({Id})/do.ChangeStatus": {
      "post": {
        "tags": [
          "Projects - Projects"
        ],
        "summary": "Change status for the given project",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "ProjectV1ChangesStatusParameters",
            "in": "body",
            "description": "Required parameters are ProjectStatusId.",
            "required": true,
            "schema": {
              "required": [
                "ProjectStatusId"
              ],
              "type": "object",
              "properties": {
                "ProjectStatusId": {
                  "format": "int32",
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Changed",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          }
        }
      }
    },
    "/v1/Projects({Id})/do.CreateReporting": {
      "post": {
        "tags": [
          "Projects - Projects"
        ],
        "summary": "Creates a reporting for the given project",
        "description": "Creates a reporting for the specified project. You can find more details about reportings in the <a href=\"/docs/#tag/Users-User-Reportings\">UserReportings</a> description.",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "ProjectV1CreateReportingParameters",
            "in": "body",
            "description": "Required parameters are userId, startDate, duration (in seconds). Optional parameters are taskId and the description text. You can find more details about reportings in the <a href=\"/docs/#tag/Users-User-Reportings\">UserReportings</a> description.",
            "required": true,
            "schema": {
              "required": [
                "UserId",
                "StartDate",
                "Duration"
              ],
              "type": "object",
              "properties": {
                "UserId": {
                  "format": "int32",
                  "type": "integer"
                },
                "TaskId": {
                  "format": "int32",
                  "type": "integer"
                },
                "StartDate": {
                  "format": "date-time",
                  "type": "string"
                },
                "Duration": {
                  "format": "double",
                  "type": "number"
                },
                "Description": {
                  "type": "string"
                },
                "IsApproved": {
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/UserReporting"
            }
          }
        }
      }
    },
    "/v1/Projects({Id})/CustomFields": {
      "get": {
        "tags": [
          "Projects - Projects"
        ],
        "summary": "Returns all customfields of the project",
        "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomField"
              }
            }
          }
        }
      }
    },
    "/v1/Projects({Id})/CustomFields({CustomFieldDefinitionId})": {
      "get": {
        "tags": [
          "Projects - Projects"
        ],
        "summary": "Returns the custom field with the specified id of the sel...",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "CustomFieldDefinitionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomField"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Projects - Projects"
        ],
        "summary": "Updates an existing customfield of the project",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "CustomFieldDefinitionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "CustomField",
            "in": "body",
            "description": "The customfield body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomField"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomField"
            }
          }
        }
      }
    },
    "/v1/Projects({Id})/Files": {
      "get": {
        "tags": [
          "Projects - Projects"
        ],
        "summary": "Returns all Files of the specified Project",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/HQFile"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Projects - Projects"
        ],
        "summary": "Creates a new File for the specified Project",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "file",
            "in": "body",
            "description": "The new file",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HQFile"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        }
      }
    },
    "/v1/Projects({Id})/Files({FileId})": {
      "get": {
        "tags": [
          "Projects - Projects"
        ],
        "summary": "Returns the specified File of the specified Project",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "FileId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/HQFile"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Projects - Projects"
        ],
        "summary": "Updates the specified File of the specified Project",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "FileId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "file",
            "in": "body",
            "description": "The updated file",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HQFile"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/HQFile"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Projects - Projects"
        ],
        "summary": "Deletes the specified File of the specified Project",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "FileId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        }
      }
    },
    "/v1/Projects({Id})/Files({FileId})/$value": {
      "get": {
        "tags": [
          "Projects - Projects"
        ],
        "summary": "Returns the binary content of the specified File of the s...",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "FileId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "format": "byte",
              "type": "string"
            }
          }
        }
      }
    },
    "/v1/Projects({Id})/Members": {
      "get": {
        "tags": [
          "Projects - Projects"
        ],
        "summary": "Returns all project members of a selected project",
        "description": "A project member represents a user working on a project",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProjectMember"
              }
            }
          }
        }
      }
    },
    "/v1/Projects({Id})/Members({MemberId})": {
      "get": {
        "tags": [
          "Projects - Projects"
        ],
        "summary": "Returns the member of a selected project with the specifi...",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "MemberId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProjectMember"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Projects - Projects"
        ],
        "summary": "Deletes a project member of a selected project",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "MemberId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "204": {
            "description": "No content",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        }
      }
    },
    "/v1/TaskTypes": {
      "get": {
        "tags": [
          "Projects - Task Types"
        ],
        "summary": "Returns all task types",
        "description": "All types of tasks",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaskType"
              }
            }
          }
        }
      }
    },
    "/v1/TaskTypes({Id})": {
      "get": {
        "tags": [
          "Projects - Task Types"
        ],
        "summary": "Returns the task type for a given id",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TaskType"
            }
          }
        }
      }
    },
    "/v1/PublicHolidays": {
      "get": {
        "tags": [
          "User - Public Holidays"
        ],
        "summary": "Returns all public holidays",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PublicHolidays"
              }
            }
          }
        }
      }
    },
    "/v1/PublicHolidays({Id})": {
      "get": {
        "tags": [
          "User - Public Holidays"
        ],
        "summary": "Returns all public holidays",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PublicHolidays"
              }
            }
          }
        }
      }
    },
    "/v1/Me": {
      "get": {
        "tags": [
          "Users - Me"
        ],
        "summary": "Returns the current user",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Me"
            }
          }
        }
      }
    },
    "/v1/Me({Id})": {
      "get": {
        "tags": [
          "Users - Me"
        ],
        "summary": "Returns the current user",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Me"
            }
          }
        }
      }
    },
    "/v1/UserReportings": {
      "get": {
        "tags": [
          "Users - User Reportings"
        ],
        "summary": "Returns all user reportings",
        "description": "A user reporting represents a logged time of a user on a specific task in HQ. \r\n            UserReportings can be created via the <a href=\"/docs/#tag/Projects-Projects%2Fpaths%2F~1v1~1Projects(%7BId%7D)~1do.CreateReporting%2Fpost\">CreateReporting</a> action of a project.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserReporting"
              }
            }
          }
        }
      }
    },
    "/v1/UserReportings({Id})": {
      "get": {
        "tags": [
          "Users - User Reportings"
        ],
        "summary": "Returns the user reporting with the specified id",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserReporting"
            }
          }
        }
      }
    },
    "/v1/Users": {
      "get": {
        "tags": [
          "Users - Users"
        ],
        "summary": "Returns all users. If you pass includedeactivated=true as...",
        "description": "A user represents a user in your HQ system.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          }
        }
      }
    },
    "/v1/Users({Id})": {
      "get": {
        "tags": [
          "Users - Users"
        ],
        "summary": "Returns the user with the specified id",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Users - Users"
        ],
        "summary": "Updates an existing user",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "user",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/v1/Users({Id})/CustomFields": {
      "get": {
        "tags": [
          "Users - Users"
        ],
        "summary": "Returns all customfields of the user",
        "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomField"
              }
            }
          }
        }
      }
    },
    "/v1/Users({Id})/CustomFields({CustomFieldDefinitionId})": {
      "get": {
        "tags": [
          "Users - Users"
        ],
        "summary": "Returns the custom field with the specified id of the sel...",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "CustomFieldDefinitionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomField"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Users - Users"
        ],
        "summary": "Updates an existing customfield of the user",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "CustomFieldDefinitionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "CustomField",
            "in": "body",
            "description": "The customfield body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomField"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomField"
            }
          }
        }
      }
    },
    "/v1/Users({Id})/ProjectMembers": {
      "get": {
        "tags": [
          "Users - Users"
        ],
        "summary": "Returns all project members of the user with the specifie...",
        "description": "A project member represents a user working on a project",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProjectMember"
              }
            }
          }
        }
      }
    },
    "/v1/Users({Id})/ProjectMembers({MemberId})": {
      "get": {
        "tags": [
          "Users - Users"
        ],
        "summary": "Returns the project member with the specified id of the u...",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "MemberId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProjectMember"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users - Users"
        ],
        "summary": "Deletes the project membership of the selected user",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "MemberId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "204": {
            "description": "No content",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        }
      }
    },
    "/v1/Users({Id})/Assignments": {
      "get": {
        "tags": [
          "Users - Users"
        ],
        "summary": "Returns all task assignments of the selected user",
        "description": "The assignment of a user to a task",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaskAssignment"
              }
            }
          }
        }
      }
    },
    "/v1/Users({Id})/Assignments({AssignmentId})": {
      "get": {
        "tags": [
          "Users - Users"
        ],
        "summary": "Returns the task assignment of the selected user with the...",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "AssignmentId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TaskAssignment"
            }
          }
        }
      }
    },
    "/v1/Users({Id})/Absences": {
      "get": {
        "tags": [
          "Users - Users"
        ],
        "summary": "Returns all absences",
        "description": "An absence represents a time of absence from work, for example holidays or sickness.\r\n            Absences can be either paid or unpaid.",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserAbsence"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users - Users"
        ],
        "summary": "Creates a new absence for a user",
        "description": "The value for the start and end depends on the type of the absence. Refer to the following table for more details.",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "absence",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserAbsence"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/UserAbsence"
            }
          }
        }
      }
    },
    "/v1/Users({Id})/Absences({AbsenceId})": {
      "get": {
        "tags": [
          "Users - Users"
        ],
        "summary": "Returns the absence with the specified id",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "AbsenceId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserAbsence"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users - Users"
        ],
        "summary": "Deletes an absence of a user",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "AbsenceId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        }
      }
    },
    "/v1/Users({Id})/Reportings": {
      "get": {
        "tags": [
          "Users - Users"
        ],
        "summary": "Returns all user reportings of the user with the specifie...",
        "description": "A user reporting represents a logged time of a user on a specific task in HQ.",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserReporting"
              }
            }
          }
        }
      }
    },
    "/v1/Users({Id})/Reportings({ReportingId})": {
      "get": {
        "tags": [
          "Users - Users"
        ],
        "summary": "Returns the user reporting with the specified id of the u...",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "ReportingId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserReporting"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Users - Users"
        ],
        "summary": "Updates an existing reporting of a selected user",
        "description": "Updates the reporting.",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "ReportingId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "reporting",
            "in": "body",
            "description": "The UserReporting object",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UserReporting"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserReporting"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users - Users"
        ],
        "summary": "Deletes a user reporting of a selected user",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "ReportingId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "204": {
            "description": "No content",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        }
      }
    },
    "/v1/Users({Id})/UserWorkingHours": {
      "get": {
        "tags": [
          "Users - Users"
        ],
        "summary": "Returns the weekly working times of the user with the spe...",
        "description": "A user weekly working time represents the weekly capacity of a user in HQ.",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserWorkingHours"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ODataResponse[List[ArticleStorage]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "Name": {
                "description": "The name of the storage",
                "type": "string"
              },
              "Number": {
                "description": "The storage number",
                "type": "string"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "ArticleStorage": {
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "Name": {
          "description": "The name of the storage",
          "type": "string"
        },
        "Number": {
          "description": "The storage number",
          "type": "string"
        },
        "Id": {
          "format": "int32",
          "description": "The unique identifier of this entity",
          "type": "integer"
        },
        "CreatedBy": {
          "format": "int32",
          "description": "The id of the user who created this entity",
          "type": "integer"
        },
        "UpdatedBy": {
          "format": "int32",
          "description": "The id of the last user who modified this entity",
          "type": "integer"
        },
        "CreatedOn": {
          "format": "date-time",
          "description": "The date and time this entity was created, in UTC",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "description": "The last date and time this entity was updated, in UTC",
          "type": "string"
        }
      }
    },
    "Object": {
      "type": "object",
      "properties": {}
    },
    "ODataResponse[List[Article]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "description": "An article is a stock item that your company sells, for example a digital camera. \r\n            An article can also be a service or activity that your company performs, for example a digital design. \r\n            Articles can be used to create positions on invoices or quotations, among others.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "Name": {
                "description": "The name of this article",
                "type": "string"
              },
              "Number": {
                "description": "The number as identifier of the article",
                "type": "string"
              },
              "Description": {
                "description": "The description of the article",
                "type": "string"
              },
              "BaseType": {
                "description": "The baset ype of the article",
                "type": "string"
              },
              "CategoryId": {
                "format": "int32",
                "description": "The category ID of the article",
                "type": "integer"
              },
              "Category": {
                "description": "The article category",
                "type": "object"
              },
              "SalesPrices": {
                "description": "The list of possible sales prices",
                "type": "array"
              },
              "PurchasingPrices": {
                "description": "The list of possible purchasing prices",
                "type": "array"
              },
              "Stocks": {
                "description": "The list of stocks this article can be stored in",
                "type": "array"
              },
              "CustomFields": {
                "description": "The customfields associated with this article",
                "type": "array"
              },
              "Files": {
                "description": "The files associated to the article",
                "type": "array"
              },
              "InternalExternalArticle": {
                "description": "The Make or Buy type of this article",
                "type": "string"
              },
              "CostCenter1": {
                "description": "The cost center 1 this article is associated with",
                "type": "string"
              },
              "CostCenter2": {
                "description": "The cost center 2 this article is associated with",
                "type": "string"
              },
              "BookingAccount": {
                "description": "The booking account this article is associated with",
                "type": "string"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "Article": {
      "description": "An article is a stock item that your company sells, for example a digital camera. \r\n            An article can also be a service or activity that your company performs, for example a digital design. \r\n            Articles can be used to create positions on invoices or quotations, among others.",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "Name": {
          "description": "The name of this article",
          "type": "string"
        },
        "Number": {
          "description": "The number as identifier of the article",
          "type": "string"
        },
        "Description": {
          "description": "The description of the article",
          "type": "string"
        },
        "BaseType": {
          "description": "The baset ype of the article",
          "enum": [
            "Stock",
            "Action",
            "Material",
            "NotSet"
          ],
          "type": "string"
        },
        "CategoryId": {
          "format": "int32",
          "description": "The category ID of the article",
          "type": "integer"
        },
        "Category": {
          "description": "The article category",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The name of the category",
              "type": "string"
            },
            "ParentId": {
              "format": "int32",
              "description": "The reference to the parent category",
              "type": "integer"
            },
            "Description": {
              "description": "The description of the category",
              "type": "string"
            },
            "Abbreviation": {
              "description": "The short name of the category",
              "type": "string"
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "SalesPrices": {
          "description": "The list of possible sales prices",
          "type": "array",
          "items": {
            "description": "An sales price represents a price of the article which can be used for creating ainvoice.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "Price": {
                "format": "double",
                "description": "The price to sell the article for",
                "type": "number"
              },
              "Currency": {
                "description": "The ISO 4217 code of the currency of the sales price",
                "maxLength": 3,
                "minLength": 0,
                "type": "string"
              },
              "TaxRate": {
                "format": "double",
                "description": "The tax rate of the sales price",
                "type": "number"
              },
              "Amount": {
                "format": "double",
                "description": "The amount for the specific price",
                "type": "number"
              },
              "ArticleId": {
                "format": "int32",
                "description": "The article the price is for",
                "type": "integer"
              },
              "IsDefault": {
                "description": "Mark sales price as default",
                "type": "boolean"
              },
              "ArticleDiscounts": {
                "description": "The possible discounts for the sales price",
                "type": "array"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        },
        "PurchasingPrices": {
          "description": "The list of possible purchasing prices",
          "type": "array",
          "items": {
            "description": "A purchasing price represents a price of the article which can be used for creating a quotation.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "Price": {
                "format": "double",
                "description": "The price to sell the article for",
                "type": "number"
              },
              "Currency": {
                "description": "The ISO 4217 code of the currency of the sales price",
                "maxLength": 3,
                "minLength": 0,
                "type": "string"
              },
              "TaxRate": {
                "format": "double",
                "description": "The tax rate of the sales price",
                "type": "number"
              },
              "Amount": {
                "format": "double",
                "description": "The amount for the specific price",
                "type": "number"
              },
              "ArticleId": {
                "format": "int32",
                "description": "The article the price is for",
                "type": "integer"
              },
              "IsDefault": {
                "description": "Mark sales price as default",
                "type": "boolean"
              },
              "ArticleDiscounts": {
                "description": "The possible discounts for the sales price",
                "type": "array"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        },
        "Stocks": {
          "description": "The list of stocks this article can be stored in",
          "type": "array",
          "items": {
            "description": "Represents the current stock of an article in a specific storage. Articles can have multiple stocks, one for each storage they are located in.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "SafetyStock": {
                "format": "double",
                "description": "The Safety stock (also called buffer stock) is the minimal stock which should always be available",
                "type": "number"
              },
              "MaxStock": {
                "format": "double",
                "description": "The max stock for this article",
                "type": "number"
              },
              "ReorderLevel": {
                "format": "double",
                "description": "The level, where an article should be reorderd",
                "type": "number"
              },
              "CurrentStock": {
                "format": "double",
                "description": "The current stock of the article",
                "type": "number"
              },
              "ArticleId": {
                "format": "int32",
                "description": "The id of the article",
                "type": "integer"
              },
              "Article": {
                "description": "The article the stock belongs to",
                "type": "object"
              },
              "StorageId": {
                "format": "int32",
                "description": "The id of the Storage the article is stored",
                "type": "integer"
              },
              "Storage": {
                "description": "The Storage the article is stored at",
                "type": "object"
              },
              "Transactions": {
                "description": "All transactions on the stock",
                "type": "array"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        },
        "CustomFields": {
          "description": "The customfields associated with this article",
          "type": "array",
          "items": {
            "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
            "required": [
              "Name",
              "Id"
            ],
            "type": "object",
            "properties": {
              "Name": {
                "description": "The name of this custom field",
                "type": "string"
              },
              "Value": {
                "description": "The value of this custom field",
                "type": "string"
              },
              "Type": {
                "description": "The type of this custom field",
                "type": "string"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        },
        "Files": {
          "description": "The files associated to the article",
          "type": "array",
          "items": {
            "description": "A file represents a user upload or HQ-generated PDF documents.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "Name": {
                "description": "The name of the file",
                "type": "string"
              },
              "Size": {
                "format": "double",
                "description": "The size in bytes",
                "type": "number"
              },
              "HasContent": {
                "description": "Returns true if the file has content (was uploaded yet)",
                "type": "boolean"
              },
              "IsDirectory": {
                "description": "Returns true if the file entity is a directory, otherwise false",
                "type": "boolean"
              },
              "DirectoryId": {
                "format": "int32",
                "description": "The id of the parent directory",
                "type": "integer"
              },
              "FileRelations": {
                "description": "List of all relations of a",
                "type": "array"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        },
        "InternalExternalArticle": {
          "description": "The Make or Buy type of this article",
          "enum": [
            "internalArticle",
            "externalArticle",
            "mixedArticle",
            "NotSet"
          ],
          "type": "string"
        },
        "CostCenter1": {
          "description": "The cost center 1 this article is associated with",
          "type": "string"
        },
        "CostCenter2": {
          "description": "The cost center 2 this article is associated with",
          "type": "string"
        },
        "BookingAccount": {
          "description": "The booking account this article is associated with",
          "type": "string"
        },
        "Id": {
          "format": "int32",
          "description": "The unique identifier of this entity",
          "type": "integer"
        },
        "CreatedBy": {
          "format": "int32",
          "description": "The id of the user who created this entity",
          "type": "integer"
        },
        "UpdatedBy": {
          "format": "int32",
          "description": "The id of the last user who modified this entity",
          "type": "integer"
        },
        "CreatedOn": {
          "format": "date-time",
          "description": "The date and time this entity was created, in UTC",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "description": "The last date and time this entity was updated, in UTC",
          "type": "string"
        }
      }
    },
    "ArticleCategory": {
      "description": "An article category represents a type of an article.",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "Name": {
          "description": "The name of the category",
          "type": "string"
        },
        "ParentId": {
          "format": "int32",
          "description": "The reference to the parent category",
          "type": "integer"
        },
        "Description": {
          "description": "The description of the category",
          "type": "string"
        },
        "Abbreviation": {
          "description": "The short name of the category",
          "type": "string"
        },
        "Id": {
          "format": "int32",
          "description": "The unique identifier of this entity",
          "type": "integer"
        },
        "CreatedBy": {
          "format": "int32",
          "description": "The id of the user who created this entity",
          "type": "integer"
        },
        "UpdatedBy": {
          "format": "int32",
          "description": "The id of the last user who modified this entity",
          "type": "integer"
        },
        "CreatedOn": {
          "format": "date-time",
          "description": "The date and time this entity was created, in UTC",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "description": "The last date and time this entity was updated, in UTC",
          "type": "string"
        }
      }
    },
    "ArticleSalesPrice": {
      "description": "An sales price represents a price of the article which can be used for creating ainvoice.",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "Price": {
          "format": "double",
          "description": "The price to sell the article for",
          "type": "number"
        },
        "Currency": {
          "description": "The ISO 4217 code of the currency of the sales price",
          "maxLength": 3,
          "minLength": 0,
          "type": "string"
        },
        "TaxRate": {
          "format": "double",
          "description": "The tax rate of the sales price",
          "type": "number"
        },
        "Amount": {
          "format": "double",
          "description": "The amount for the specific price",
          "type": "number"
        },
        "ArticleId": {
          "format": "int32",
          "description": "The article the price is for",
          "type": "integer"
        },
        "IsDefault": {
          "description": "Mark sales price as default",
          "type": "boolean"
        },
        "ArticleDiscounts": {
          "description": "The possible discounts for the sales price",
          "type": "array",
          "items": {
            "description": "An article discount represents a discount rule on an article when the customer orders a certain threshold quantity.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "Value": {
                "format": "double",
                "description": "The value of the discount",
                "type": "number"
              },
              "Threshold": {
                "format": "double",
                "description": "The threshold to decide if the discount is applied",
                "type": "number"
              },
              "Type": {
                "description": "The type, if its percentige or net value for the threshold decision",
                "type": "string"
              },
              "CompanyId": {
                "format": "int32",
                "description": "If set, the discount is just assigned for a specifc company",
                "type": "integer"
              },
              "ArticleSalesPriceId": {
                "format": "int32",
                "description": "The salesprices, where the discount is assigned to",
                "type": "integer"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        },
        "Id": {
          "format": "int32",
          "description": "The unique identifier of this entity",
          "type": "integer"
        },
        "CreatedBy": {
          "format": "int32",
          "description": "The id of the user who created this entity",
          "type": "integer"
        },
        "UpdatedBy": {
          "format": "int32",
          "description": "The id of the last user who modified this entity",
          "type": "integer"
        },
        "CreatedOn": {
          "format": "date-time",
          "description": "The date and time this entity was created, in UTC",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "description": "The last date and time this entity was updated, in UTC",
          "type": "string"
        }
      }
    },
    "ArticlePurchasingPrice": {
      "description": "A purchasing price represents a price of the article which can be used for creating a quotation.",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "Price": {
          "format": "double",
          "description": "The price to sell the article for",
          "type": "number"
        },
        "Currency": {
          "description": "The ISO 4217 code of the currency of the sales price",
          "maxLength": 3,
          "minLength": 0,
          "type": "string"
        },
        "TaxRate": {
          "format": "double",
          "description": "The tax rate of the sales price",
          "type": "number"
        },
        "Amount": {
          "format": "double",
          "description": "The amount for the specific price",
          "type": "number"
        },
        "ArticleId": {
          "format": "int32",
          "description": "The article the price is for",
          "type": "integer"
        },
        "IsDefault": {
          "description": "Mark sales price as default",
          "type": "boolean"
        },
        "ArticleDiscounts": {
          "description": "The possible discounts for the sales price",
          "type": "array",
          "items": {
            "description": "An article discount represents a discount rule on an article when the customer orders a certain threshold quantity.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "Value": {
                "format": "double",
                "description": "The value of the discount",
                "type": "number"
              },
              "Threshold": {
                "format": "double",
                "description": "The threshold to decide if the discount is applied",
                "type": "number"
              },
              "Type": {
                "description": "The type, if its percentige or net value for the threshold decision",
                "type": "string"
              },
              "CompanyId": {
                "format": "int32",
                "description": "If set, the discount is just assigned for a specifc company",
                "type": "integer"
              },
              "ArticleSalesPriceId": {
                "format": "int32",
                "description": "The salesprices, where the discount is assigned to",
                "type": "integer"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        },
        "Id": {
          "format": "int32",
          "description": "The unique identifier of this entity",
          "type": "integer"
        },
        "CreatedBy": {
          "format": "int32",
          "description": "The id of the user who created this entity",
          "type": "integer"
        },
        "UpdatedBy": {
          "format": "int32",
          "description": "The id of the last user who modified this entity",
          "type": "integer"
        },
        "CreatedOn": {
          "format": "date-time",
          "description": "The date and time this entity was created, in UTC",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "description": "The last date and time this entity was updated, in UTC",
          "type": "string"
        }
      }
    },
    "ArticleStock": {
      "description": "Represents the current stock of an article in a specific storage. Articles can have multiple stocks, one for each storage they are located in.",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "SafetyStock": {
          "format": "double",
          "description": "The Safety stock (also called buffer stock) is the minimal stock which should always be available",
          "type": "number"
        },
        "MaxStock": {
          "format": "double",
          "description": "The max stock for this article",
          "type": "number"
        },
        "ReorderLevel": {
          "format": "double",
          "description": "The level, where an article should be reorderd",
          "type": "number"
        },
        "CurrentStock": {
          "format": "double",
          "description": "The current stock of the article",
          "type": "number"
        },
        "ArticleId": {
          "format": "int32",
          "description": "The id of the article",
          "type": "integer"
        },
        "Article": {
          "description": "The article the stock belongs to",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The name of this article",
              "type": "string"
            },
            "Number": {
              "description": "The number as identifier of the article",
              "type": "string"
            },
            "Description": {
              "description": "The description of the article",
              "type": "string"
            },
            "BaseType": {
              "description": "The baset ype of the article",
              "enum": [
                "Stock",
                "Action",
                "Material",
                "NotSet"
              ],
              "type": "string"
            },
            "CategoryId": {
              "format": "int32",
              "description": "The category ID of the article",
              "type": "integer"
            },
            "Category": {
              "description": "The article category",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "SalesPrices": {
              "description": "The list of possible sales prices",
              "type": "array",
              "items": {
                "description": "An sales price represents a price of the article which can be used for creating ainvoice.",
                "type": "object"
              }
            },
            "PurchasingPrices": {
              "description": "The list of possible purchasing prices",
              "type": "array",
              "items": {
                "description": "A purchasing price represents a price of the article which can be used for creating a quotation.",
                "type": "object"
              }
            },
            "Stocks": {
              "description": "The list of stocks this article can be stored in",
              "type": "array",
              "items": {
                "description": "Represents the current stock of an article in a specific storage. Articles can have multiple stocks, one for each storage they are located in.",
                "type": "object"
              }
            },
            "CustomFields": {
              "description": "The customfields associated with this article",
              "type": "array",
              "items": {
                "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
                "type": "object"
              }
            },
            "Files": {
              "description": "The files associated to the article",
              "type": "array",
              "items": {
                "description": "A file represents a user upload or HQ-generated PDF documents.",
                "type": "object"
              }
            },
            "InternalExternalArticle": {
              "description": "The Make or Buy type of this article",
              "enum": [
                "internalArticle",
                "externalArticle",
                "mixedArticle",
                "NotSet"
              ],
              "type": "string"
            },
            "CostCenter1": {
              "description": "The cost center 1 this article is associated with",
              "type": "string"
            },
            "CostCenter2": {
              "description": "The cost center 2 this article is associated with",
              "type": "string"
            },
            "BookingAccount": {
              "description": "The booking account this article is associated with",
              "type": "string"
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "StorageId": {
          "format": "int32",
          "description": "The id of the Storage the article is stored",
          "type": "integer"
        },
        "Storage": {
          "description": "The Storage the article is stored at",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The name of the storage",
              "type": "string"
            },
            "Number": {
              "description": "The storage number",
              "type": "string"
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "Transactions": {
          "description": "All transactions on the stock",
          "type": "array",
          "items": {
            "description": "Represents a change in an article stock, for example incoming goods or used goods.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "Change": {
                "format": "double",
                "description": "The change of quantity in stock made by this transaction",
                "type": "number"
              },
              "ExecutedOn": {
                "format": "date-time",
                "description": "The execution date of the transaction",
                "type": "string"
              },
              "Type": {
                "description": "The type of the transaction",
                "type": "string"
              },
              "Article": {
                "description": "An article is a stock item that your company sells, for example a digital camera. \r\n            An article can also be a service or activity that your company performs, for example a digital design. \r\n            Articles can be used to create positions on invoices or quotations, among others.",
                "type": "object"
              },
              "ArticleId": {
                "format": "int32",
                "type": "integer"
              },
              "ArticleStockId": {
                "format": "int32",
                "description": "The id of the articlestock",
                "type": "integer"
              },
              "ArticleStock": {
                "description": "The article stock of the transaciton",
                "type": "object"
              },
              "Description": {
                "description": "The description of the transaction",
                "type": "string"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        },
        "Id": {
          "format": "int32",
          "description": "The unique identifier of this entity",
          "type": "integer"
        },
        "CreatedBy": {
          "format": "int32",
          "description": "The id of the user who created this entity",
          "type": "integer"
        },
        "UpdatedBy": {
          "format": "int32",
          "description": "The id of the last user who modified this entity",
          "type": "integer"
        },
        "CreatedOn": {
          "format": "date-time",
          "description": "The date and time this entity was created, in UTC",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "description": "The last date and time this entity was updated, in UTC",
          "type": "string"
        }
      }
    },
    "CustomField": {
      "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
      "required": [
        "Name",
        "Id"
      ],
      "type": "object",
      "properties": {
        "Name": {
          "description": "The name of this custom field",
          "type": "string"
        },
        "Value": {
          "description": "The value of this custom field",
          "type": "string"
        },
        "Type": {
          "description": "The type of this custom field",
          "enum": [
            "Text",
            "TextMultiline",
            "Date",
            "Dropdown",
            "DropdownCheckbox",
            "Boolean",
            "Upload",
            "UserSelection",
            "CompanySelection",
            "ProjectSelection",
            "ResourceSelection",
            "ContactSelection",
            "Link",
            "Float",
            "Integer",
            "Token",
            "NumericText",
            "NotSet"
          ],
          "type": "string"
        },
        "Id": {
          "format": "int32",
          "description": "The unique identifier of this entity",
          "type": "integer"
        },
        "CreatedBy": {
          "format": "int32",
          "description": "The id of the user who created this entity",
          "type": "integer"
        },
        "UpdatedBy": {
          "format": "int32",
          "description": "The id of the last user who modified this entity",
          "type": "integer"
        },
        "CreatedOn": {
          "format": "date-time",
          "description": "The date and time this entity was created, in UTC",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "description": "The last date and time this entity was updated, in UTC",
          "type": "string"
        }
      }
    },
    "HQFile": {
      "description": "A file represents a user upload or HQ-generated PDF documents.",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "Name": {
          "description": "The name of the file",
          "type": "string"
        },
        "Size": {
          "format": "double",
          "description": "The size in bytes",
          "type": "number"
        },
        "HasContent": {
          "description": "Returns true if the file has content (was uploaded yet)",
          "type": "boolean"
        },
        "IsDirectory": {
          "description": "Returns true if the file entity is a directory, otherwise false",
          "type": "boolean"
        },
        "DirectoryId": {
          "format": "int32",
          "description": "The id of the parent directory",
          "type": "integer"
        },
        "FileRelations": {
          "description": "List of all relations of a",
          "type": "array",
          "items": {
            "description": "A file relation represents a link between a file and another entity like a project or article.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "ProjectId": {
                "format": "int32",
                "description": "The id of the project this file belongs to",
                "type": "integer"
              },
              "Project": {
                "description": "The project this file belongs to",
                "type": "object"
              },
              "Article": {
                "description": "The article this file belongs to",
                "type": "object"
              },
              "ArticleId": {
                "format": "int32",
                "description": "The id of the article this files belongs to",
                "type": "integer"
              },
              "DocumentId": {
                "format": "int32",
                "description": "The id of the document this gile belongs to",
                "type": "integer"
              },
              "Document": {
                "description": "The base document information belogs to",
                "type": "object"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        },
        "Id": {
          "format": "int32",
          "description": "The unique identifier of this entity",
          "type": "integer"
        },
        "CreatedBy": {
          "format": "int32",
          "description": "The id of the user who created this entity",
          "type": "integer"
        },
        "UpdatedBy": {
          "format": "int32",
          "description": "The id of the last user who modified this entity",
          "type": "integer"
        },
        "CreatedOn": {
          "format": "date-time",
          "description": "The date and time this entity was created, in UTC",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "description": "The last date and time this entity was updated, in UTC",
          "type": "string"
        }
      }
    },
    "ArticleDiscount": {
      "description": "An article discount represents a discount rule on an article when the customer orders a certain threshold quantity.",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "Value": {
          "format": "double",
          "description": "The value of the discount",
          "type": "number"
        },
        "Threshold": {
          "format": "double",
          "description": "The threshold to decide if the discount is applied",
          "type": "number"
        },
        "Type": {
          "description": "The type, if its percentige or net value for the threshold decision",
          "enum": [
            "Percent",
            "NetValue",
            "NotSet"
          ],
          "type": "string"
        },
        "CompanyId": {
          "format": "int32",
          "description": "If set, the discount is just assigned for a specifc company",
          "type": "integer"
        },
        "ArticleSalesPriceId": {
          "format": "int32",
          "description": "The salesprices, where the discount is assigned to",
          "type": "integer"
        },
        "Id": {
          "format": "int32",
          "description": "The unique identifier of this entity",
          "type": "integer"
        },
        "CreatedBy": {
          "format": "int32",
          "description": "The id of the user who created this entity",
          "type": "integer"
        },
        "UpdatedBy": {
          "format": "int32",
          "description": "The id of the last user who modified this entity",
          "type": "integer"
        },
        "CreatedOn": {
          "format": "date-time",
          "description": "The date and time this entity was created, in UTC",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "description": "The last date and time this entity was updated, in UTC",
          "type": "string"
        }
      }
    },
    "ArticleStockTransaction": {
      "description": "Represents a change in an article stock, for example incoming goods or used goods.",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "Change": {
          "format": "double",
          "description": "The change of quantity in stock made by this transaction",
          "type": "number"
        },
        "ExecutedOn": {
          "format": "date-time",
          "description": "The execution date of the transaction",
          "type": "string"
        },
        "Type": {
          "description": "The type of the transaction",
          "enum": [
            "GoodsIn",
            "GoodsOut",
            "Used",
            "Loss",
            "Broken",
            "Rearrange",
            "Correction"
          ],
          "type": "string"
        },
        "Article": {
          "description": "An article is a stock item that your company sells, for example a digital camera. \r\n            An article can also be a service or activity that your company performs, for example a digital design. \r\n            Articles can be used to create positions on invoices or quotations, among others.",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The name of this article",
              "type": "string"
            },
            "Number": {
              "description": "The number as identifier of the article",
              "type": "string"
            },
            "Description": {
              "description": "The description of the article",
              "type": "string"
            },
            "BaseType": {
              "description": "The baset ype of the article",
              "enum": [
                "Stock",
                "Action",
                "Material",
                "NotSet"
              ],
              "type": "string"
            },
            "CategoryId": {
              "format": "int32",
              "description": "The category ID of the article",
              "type": "integer"
            },
            "Category": {
              "description": "The article category",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "SalesPrices": {
              "description": "The list of possible sales prices",
              "type": "array",
              "items": {
                "description": "An sales price represents a price of the article which can be used for creating ainvoice.",
                "type": "object"
              }
            },
            "PurchasingPrices": {
              "description": "The list of possible purchasing prices",
              "type": "array",
              "items": {
                "description": "A purchasing price represents a price of the article which can be used for creating a quotation.",
                "type": "object"
              }
            },
            "Stocks": {
              "description": "The list of stocks this article can be stored in",
              "type": "array",
              "items": {
                "description": "Represents the current stock of an article in a specific storage. Articles can have multiple stocks, one for each storage they are located in.",
                "type": "object"
              }
            },
            "CustomFields": {
              "description": "The customfields associated with this article",
              "type": "array",
              "items": {
                "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
                "type": "object"
              }
            },
            "Files": {
              "description": "The files associated to the article",
              "type": "array",
              "items": {
                "description": "A file represents a user upload or HQ-generated PDF documents.",
                "type": "object"
              }
            },
            "InternalExternalArticle": {
              "description": "The Make or Buy type of this article",
              "enum": [
                "internalArticle",
                "externalArticle",
                "mixedArticle",
                "NotSet"
              ],
              "type": "string"
            },
            "CostCenter1": {
              "description": "The cost center 1 this article is associated with",
              "type": "string"
            },
            "CostCenter2": {
              "description": "The cost center 2 this article is associated with",
              "type": "string"
            },
            "BookingAccount": {
              "description": "The booking account this article is associated with",
              "type": "string"
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "ArticleId": {
          "format": "int32",
          "type": "integer"
        },
        "ArticleStockId": {
          "format": "int32",
          "description": "The id of the articlestock",
          "type": "integer"
        },
        "ArticleStock": {
          "description": "The article stock of the transaciton",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "SafetyStock": {
              "format": "double",
              "description": "The Safety stock (also called buffer stock) is the minimal stock which should always be available",
              "type": "number"
            },
            "MaxStock": {
              "format": "double",
              "description": "The max stock for this article",
              "type": "number"
            },
            "ReorderLevel": {
              "format": "double",
              "description": "The level, where an article should be reorderd",
              "type": "number"
            },
            "CurrentStock": {
              "format": "double",
              "description": "The current stock of the article",
              "type": "number"
            },
            "ArticleId": {
              "format": "int32",
              "description": "The id of the article",
              "type": "integer"
            },
            "Article": {
              "description": "The article the stock belongs to",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "StorageId": {
              "format": "int32",
              "description": "The id of the Storage the article is stored",
              "type": "integer"
            },
            "Storage": {
              "description": "The Storage the article is stored at",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Transactions": {
              "description": "All transactions on the stock",
              "type": "array",
              "items": {
                "description": "Represents a change in an article stock, for example incoming goods or used goods.",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "Description": {
          "description": "The description of the transaction",
          "type": "string"
        },
        "Id": {
          "format": "int32",
          "description": "The unique identifier of this entity",
          "type": "integer"
        },
        "CreatedBy": {
          "format": "int32",
          "description": "The id of the user who created this entity",
          "type": "integer"
        },
        "UpdatedBy": {
          "format": "int32",
          "description": "The id of the last user who modified this entity",
          "type": "integer"
        },
        "CreatedOn": {
          "format": "date-time",
          "description": "The date and time this entity was created, in UTC",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "description": "The last date and time this entity was updated, in UTC",
          "type": "string"
        }
      }
    },
    "FileRelation": {
      "description": "A file relation represents a link between a file and another entity like a project or article.",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "ProjectId": {
          "format": "int32",
          "description": "The id of the project this file belongs to",
          "type": "integer"
        },
        "Project": {
          "description": "The project this file belongs to",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Number": {
              "description": "The number of the project",
              "type": "string"
            },
            "Name": {
              "description": "The name of the project",
              "type": "string"
            },
            "Status": {
              "description": "The current status description of the project",
              "type": "string"
            },
            "PlannedStartDate": {
              "format": "date-time",
              "description": "The planned start date of the first task of the project",
              "type": "string"
            },
            "PlannedEndDate": {
              "format": "date-time",
              "description": "The planned end date of the last task of the project",
              "type": "string"
            },
            "StartDate": {
              "format": "date-time",
              "description": "The planned start date of the project",
              "type": "string"
            },
            "EndDate": {
              "format": "date-time",
              "description": "The planned end date of the project",
              "type": "string"
            },
            "AworkSyncId": {
              "description": "The Id from the linked awork project",
              "type": "string"
            },
            "Subsystems": {
              "description": "The subsystems this project is associated with",
              "type": "array",
              "items": {
                "description": "A subsystem represents a tenant within a customer's HQ",
                "type": "object"
              }
            },
            "ProjectTemplateId": {
              "format": "int32",
              "description": "The id of the project template",
              "type": "integer"
            },
            "ProjectTemplate": {
              "description": "The template of this project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "ProjectStatusId": {
              "format": "int32",
              "description": "The id of the project status",
              "type": "integer"
            },
            "CompanyId": {
              "format": "int32",
              "description": "The id of the company",
              "type": "integer"
            },
            "LeadId": {
              "format": "int32",
              "description": "The Id of the lead",
              "type": "integer"
            },
            "InvoiceAddressId": {
              "format": "int32",
              "description": "Id of the address for invoices of this project",
              "type": "integer"
            },
            "DeliveryAddressId": {
              "format": "int32",
              "description": "Id of the address for the deliveries of this project",
              "type": "integer"
            },
            "ResponsibleUserId": {
              "format": "int32",
              "description": "The id of the user which is responsible for this (internal) project",
              "type": "integer"
            },
            "ProjectStatus": {
              "description": "The status of the project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Company": {
              "description": "The company this project is associated with",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "ResponsibleUser": {
              "description": "The user which is responsible for this (internal) project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "DeliveryAddress": {
              "description": "The address for delvieries of this project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "InvoiceAddress": {
              "description": "The address for delvieries of this project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Lead": {
              "description": "The lead of the project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "CustomFields": {
              "description": "The custom fields of this project",
              "type": "array",
              "items": {
                "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
                "type": "object"
              }
            },
            "Reportings": {
              "description": "The user reportings of this project",
              "type": "array",
              "items": {
                "description": "A user reporting represents a logged time of a user on a specific task in HQ.",
                "type": "object"
              }
            },
            "Files": {
              "description": "The files of this project",
              "type": "array",
              "items": {
                "description": "A file represents a user upload or HQ-generated PDF documents.",
                "type": "object"
              }
            },
            "Members": {
              "description": "The members of this project",
              "type": "array",
              "items": {
                "description": "A project member links a user to a project. It includes the project role and the charge rates\r\n            for the link.",
                "type": "object"
              }
            },
            "ContactHistories": {
              "description": "Contact histories linked to this project.",
              "type": "array",
              "items": {
                "description": "The contact history represents any contact you had with a contact person. For example, any meeting, phone call or email can be a contact history entry.",
                "type": "object"
              }
            },
            "ContactPersons": {
              "description": "Contact persons linked to this project.",
              "type": "array",
              "items": {
                "description": "A contact person represents a person that works for a company you do business with. A company can have many contact persons.",
                "type": "object"
              }
            },
            "Articles": {
              "description": "All articles linked to the project",
              "type": "array",
              "items": {
                "description": "An article is a stock item that your company sells, for example a digital camera. \r\n            An article can also be a service or activity that your company performs, for example a digital design. \r\n            Articles can be used to create positions on invoices or quotations, among others.",
                "type": "object"
              }
            },
            "ProjectBudgets": {
              "description": "All articles linked to the project",
              "type": "array",
              "items": {
                "description": "The project budget for a project",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "Article": {
          "description": "The article this file belongs to",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The name of this article",
              "type": "string"
            },
            "Number": {
              "description": "The number as identifier of the article",
              "type": "string"
            },
            "Description": {
              "description": "The description of the article",
              "type": "string"
            },
            "BaseType": {
              "description": "The baset ype of the article",
              "enum": [
                "Stock",
                "Action",
                "Material",
                "NotSet"
              ],
              "type": "string"
            },
            "CategoryId": {
              "format": "int32",
              "description": "The category ID of the article",
              "type": "integer"
            },
            "Category": {
              "description": "The article category",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "SalesPrices": {
              "description": "The list of possible sales prices",
              "type": "array",
              "items": {
                "description": "An sales price represents a price of the article which can be used for creating ainvoice.",
                "type": "object"
              }
            },
            "PurchasingPrices": {
              "description": "The list of possible purchasing prices",
              "type": "array",
              "items": {
                "description": "A purchasing price represents a price of the article which can be used for creating a quotation.",
                "type": "object"
              }
            },
            "Stocks": {
              "description": "The list of stocks this article can be stored in",
              "type": "array",
              "items": {
                "description": "Represents the current stock of an article in a specific storage. Articles can have multiple stocks, one for each storage they are located in.",
                "type": "object"
              }
            },
            "CustomFields": {
              "description": "The customfields associated with this article",
              "type": "array",
              "items": {
                "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
                "type": "object"
              }
            },
            "Files": {
              "description": "The files associated to the article",
              "type": "array",
              "items": {
                "description": "A file represents a user upload or HQ-generated PDF documents.",
                "type": "object"
              }
            },
            "InternalExternalArticle": {
              "description": "The Make or Buy type of this article",
              "enum": [
                "internalArticle",
                "externalArticle",
                "mixedArticle",
                "NotSet"
              ],
              "type": "string"
            },
            "CostCenter1": {
              "description": "The cost center 1 this article is associated with",
              "type": "string"
            },
            "CostCenter2": {
              "description": "The cost center 2 this article is associated with",
              "type": "string"
            },
            "BookingAccount": {
              "description": "The booking account this article is associated with",
              "type": "string"
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "ArticleId": {
          "format": "int32",
          "description": "The id of the article this files belongs to",
          "type": "integer"
        },
        "DocumentId": {
          "format": "int32",
          "description": "The id of the document this gile belongs to",
          "type": "integer"
        },
        "Document": {
          "description": "The base document information belogs to",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Files": {
              "description": "The files of this document",
              "type": "array",
              "items": {
                "description": "A file represents a user upload or HQ-generated PDF documents.",
                "type": "object"
              }
            },
            "Type": {
              "description": "The type of the document",
              "enum": [
                "Quotation",
                "Invoice",
                "DeliveryNote",
                "Warning",
                "Reminder",
                "Cancellation",
                "CreditNote",
                "Confirmation",
                "IncomingInvoice",
                "Undefined",
                "Order",
                "PriceInquery",
                "Letter",
                "Minute",
                "Akonto"
              ],
              "type": "string"
            },
            "AddressText": {
              "description": "The receiver address text of the document",
              "type": "string"
            },
            "CompanyAddressId": {
              "format": "int32",
              "description": "The id of the postal address of the receiving company",
              "type": "integer"
            },
            "CompanyAddress": {
              "description": "The postal address of the receiving company",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Subject": {
              "description": "The subject of the document including the placeholders",
              "type": "string"
            },
            "CalculatedSubject": {
              "description": "The calcuated subject of the document.\r\n            The subject includes the final data, without the placeholders.",
              "type": "string"
            },
            "Header": {
              "description": "The header text on the document",
              "type": "string"
            },
            "Footer": {
              "description": "The footer text on the document",
              "type": "string"
            },
            "DocumentTemplateId": {
              "format": "int32",
              "description": "The document template id",
              "type": "integer"
            },
            "Number": {
              "description": "The number of the document, auto generated by the HQ",
              "type": "string"
            },
            "ContactPersonId": {
              "format": "int32",
              "description": "The id of the responsible contact person at the receiving company",
              "type": "integer"
            },
            "ContactPerson": {
              "description": "The responsible contact person at the receiving company",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "CompanyId": {
              "format": "int32",
              "description": "The id of the company which is the receiver of the document",
              "type": "integer"
            },
            "Company": {
              "description": "The company which is the receiver of the document",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "InternalContactPersonId": {
              "format": "int32",
              "description": "The id of the HQ user responsible for this document",
              "type": "integer"
            },
            "InternalContactPerson": {
              "description": "The HQ user repsonsible for this document",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "LeadId": {
              "format": "int32",
              "description": "The id of the lead related to the document",
              "type": "integer"
            },
            "Lead": {
              "description": "The lead related to the document",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "SyncId": {
              "description": "A unique identifier for other sync clients",
              "type": "string"
            },
            "ProjectId": {
              "format": "int32",
              "description": "the id of the project related to the document",
              "type": "integer"
            },
            "Project": {
              "description": "The project related to the document",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Note": {
              "description": "The comment on the document",
              "type": "string"
            },
            "CompanyPurchaseOrderNumber": {
              "description": "The purchase order number on the document",
              "type": "string"
            },
            "Language": {
              "description": "The language of the document as two-letter ISOCode, for example 'DE'",
              "type": "string"
            },
            "DocumentFile": {
              "description": "The generated pdf file",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "DocumentImage": {
              "description": "The generated pdf file, as an image",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "Id": {
          "format": "int32",
          "description": "The unique identifier of this entity",
          "type": "integer"
        },
        "CreatedBy": {
          "format": "int32",
          "description": "The id of the user who created this entity",
          "type": "integer"
        },
        "UpdatedBy": {
          "format": "int32",
          "description": "The id of the last user who modified this entity",
          "type": "integer"
        },
        "CreatedOn": {
          "format": "date-time",
          "description": "The date and time this entity was created, in UTC",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "description": "The last date and time this entity was updated, in UTC",
          "type": "string"
        }
      }
    },
    "Project": {
      "description": "A project represents a service you are performing for a customer, like a job or any other project-based service.",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "Number": {
          "description": "The number of the project",
          "type": "string"
        },
        "Name": {
          "description": "The name of the project",
          "type": "string"
        },
        "Status": {
          "description": "The current status description of the project",
          "type": "string"
        },
        "PlannedStartDate": {
          "format": "date-time",
          "description": "The planned start date of the first task of the project",
          "type": "string"
        },
        "PlannedEndDate": {
          "format": "date-time",
          "description": "The planned end date of the last task of the project",
          "type": "string"
        },
        "StartDate": {
          "format": "date-time",
          "description": "The planned start date of the project",
          "type": "string"
        },
        "EndDate": {
          "format": "date-time",
          "description": "The planned end date of the project",
          "type": "string"
        },
        "AworkSyncId": {
          "description": "The Id from the linked awork project",
          "type": "string"
        },
        "Subsystems": {
          "description": "The subsystems this project is associated with",
          "type": "array",
          "items": {
            "description": "A subsystem represents a tenant within a customer's HQ",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "Name": {
                "description": "The name of the subsystem",
                "type": "string"
              },
              "IsMaster": {
                "description": "Whether this is the master subsystem",
                "type": "boolean"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        },
        "ProjectTemplateId": {
          "format": "int32",
          "description": "The id of the project template",
          "type": "integer"
        },
        "ProjectTemplate": {
          "description": "The template of this project",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The name of the project template",
              "type": "string"
            },
            "IsInternal": {
              "description": "Whether this is an internal project template without a company or with a company",
              "type": "boolean"
            },
            "ProjectStatus": {
              "description": "All project status that are related to the template",
              "type": "array",
              "items": {
                "description": "Represents the status of a project",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "ProjectStatusId": {
          "format": "int32",
          "description": "The id of the project status",
          "type": "integer"
        },
        "CompanyId": {
          "format": "int32",
          "description": "The id of the company",
          "type": "integer"
        },
        "LeadId": {
          "format": "int32",
          "description": "The Id of the lead",
          "type": "integer"
        },
        "InvoiceAddressId": {
          "format": "int32",
          "description": "Id of the address for invoices of this project",
          "type": "integer"
        },
        "DeliveryAddressId": {
          "format": "int32",
          "description": "Id of the address for the deliveries of this project",
          "type": "integer"
        },
        "ResponsibleUserId": {
          "format": "int32",
          "description": "The id of the user which is responsible for this (internal) project",
          "type": "integer"
        },
        "ProjectStatus": {
          "description": "The status of the project",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The name of the project status",
              "type": "string"
            },
            "IsInProgress": {
              "description": "Whether this project is in progress or not",
              "type": "boolean"
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "Company": {
          "description": "The company this project is associated with",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The name of the company",
              "type": "string"
            },
            "IndustrialSector": {
              "description": "The company's industrial sector",
              "type": "string"
            },
            "Description": {
              "description": "A longer description of the company",
              "type": "string"
            },
            "IBAN": {
              "description": "The IBAN of the company",
              "type": "string"
            },
            "BIC": {
              "description": "The BIC of the company",
              "type": "string"
            },
            "DebitorNumber": {
              "format": "int32",
              "description": "The company's debitor number",
              "type": "integer"
            },
            "CreditorNumber": {
              "format": "int32",
              "description": "The company's creditor number",
              "type": "integer"
            },
            "TaxId": {
              "description": "The company's tax id",
              "type": "string"
            },
            "DefaultDeliveryConditionId": {
              "format": "int32",
              "description": "The id of the default delivery condition of this company",
              "type": "integer"
            },
            "DefaultDeliveryCondition": {
              "description": "The default delivery condition of this company",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "DefaultPaymentConditionId": {
              "format": "int32",
              "description": "The id of the default payment condition of this company",
              "type": "integer"
            },
            "DefaultPaymentCondition": {
              "description": "The default payment condition of this company",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "DefaultAddress": {
              "description": "The default address of this company",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Addresses": {
              "description": "All addresses of the company",
              "type": "array",
              "items": {
                "description": "A company address represents one of many addresses of companies.",
                "type": "object"
              }
            },
            "ResponsibleUsers": {
              "description": "The list of the responsible users of this company",
              "type": "array",
              "items": {
                "description": "A user represents a user in your HQ system.",
                "type": "object"
              }
            },
            "CustomFields": {
              "description": "The customfields associated with this company",
              "type": "array",
              "items": {
                "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
                "type": "object"
              }
            },
            "CompanyTypes": {
              "description": "The company types associated with this company",
              "type": "array",
              "items": {
                "description": "This is a connection between a company and a company type.\r\n            A company can have more than one type and can have a different company number for each type.",
                "type": "object"
              }
            },
            "Files": {
              "description": "The files associated with this company",
              "type": "array",
              "items": {
                "description": "A file represents a user upload or HQ-generated PDF documents.",
                "type": "object"
              }
            },
            "Subsystems": {
              "description": "The subsystems this company is associated with",
              "type": "array",
              "items": {
                "description": "A subsystem represents a tenant within a customer's HQ",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "ResponsibleUser": {
          "description": "The user which is responsible for this (internal) project",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "FirstName": {
              "description": "The first name of the user",
              "type": "string"
            },
            "LastName": {
              "description": "The last name of the user",
              "type": "string"
            },
            "UserName": {
              "description": "The user's user name in HQ",
              "type": "string"
            },
            "EMailWork": {
              "description": "The work email of the user",
              "type": "string"
            },
            "Salutation": {
              "description": "The salutation of the user, i.e. Mrs. or Mr.",
              "type": "string"
            },
            "Title": {
              "description": "The professional title of the user",
              "type": "string"
            },
            "EmployeeNumber": {
              "description": "The employee number of the user",
              "type": "string"
            },
            "Department": {
              "description": "The department of the user",
              "type": "string"
            },
            "BirthDate": {
              "format": "date-time",
              "description": "The birth date of the user",
              "type": "string"
            },
            "FederalState": {
              "description": "The federal state of the user",
              "type": "string"
            },
            "Country": {
              "description": "The country of the user",
              "type": "string"
            },
            "BasicLoadInHours": {
              "format": "double",
              "description": "The basic load in hours of the user",
              "type": "number"
            },
            "EntryDate": {
              "format": "date-time",
              "description": "The entry date of the user",
              "type": "string"
            },
            "LeavingDate": {
              "format": "date-time",
              "description": "The leaving date of the user",
              "type": "string"
            },
            "PhoneLandlinePrivate": {
              "description": "The private phone number of the user - landline",
              "type": "string"
            },
            "PhoneLandlineWork": {
              "description": "The work phone number of the user - landline",
              "type": "string"
            },
            "PhoneMobilePrivate": {
              "description": "The private phone number of the user - mobile",
              "type": "string"
            },
            "PhoneMobileWork": {
              "description": "The work phon number of the user - mobile",
              "type": "string"
            },
            "UserWorkingHours": {
              "description": "The custom fields of the user",
              "type": "array",
              "items": {
                "description": "The weekly working hours user",
                "type": "object"
              }
            },
            "CustomFields": {
              "description": "The custom fields of the user",
              "type": "array",
              "items": {
                "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
                "type": "object"
              }
            },
            "UserGroups": {
              "description": "The user groups of the user",
              "type": "array",
              "items": {
                "description": "The user groups a user is in.",
                "type": "object"
              }
            },
            "ResourceGroup": {
              "description": "The resource group of the user",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Absences": {
              "description": "The absences of the user",
              "type": "array",
              "items": {
                "description": "An absence represents a time of absence from work, for example holidays or sickness. \r\n            Absences can be either paid or unpaid.",
                "type": "object"
              }
            },
            "Assignments": {
              "description": "The tasks the user is assigned to",
              "type": "array",
              "items": {
                "description": "The assignment of a user to a task",
                "type": "object"
              }
            },
            "Reportings": {
              "description": "The reportings of this user",
              "type": "array",
              "items": {
                "description": "A user reporting represents a logged time of a user on a specific task in HQ.",
                "type": "object"
              }
            },
            "ProjectMembers": {
              "description": "The allocations of this user to projects",
              "type": "array",
              "items": {
                "description": "A project member links a user to a project. It includes the project role and the charge rates\r\n            for the link.",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "DeliveryAddress": {
          "description": "The address for delvieries of this project",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "City": {
              "description": "The city of this address",
              "type": "string"
            },
            "Street": {
              "description": "The street name of this address",
              "type": "string"
            },
            "HouseNumber": {
              "description": "The house number of this address",
              "type": "string"
            },
            "ZipCode": {
              "description": "The ZIP or Postal Code of this address",
              "type": "string"
            },
            "AddressLine2": {
              "description": "The secondary address line, c/o details, etc.",
              "type": "string"
            },
            "Description": {
              "description": "The description of this address",
              "type": "string"
            },
            "Country": {
              "description": "The ISO 3166-1 alpha-2 country code of this address",
              "type": "string"
            },
            "Phone": {
              "description": "The phone number of this address",
              "type": "string"
            },
            "Fax": {
              "description": "The fax number of this address",
              "type": "string"
            },
            "Email": {
              "description": "The email address of this address",
              "type": "string"
            },
            "Website": {
              "description": "The website of this address",
              "type": "string"
            },
            "IsStandard": {
              "description": "Whether this address is the standard address of a company",
              "type": "boolean"
            },
            "DefaultForDocumentType": {
              "description": "The document type this address should be used as a standard for",
              "enum": [
                "Quotation",
                "Invoice",
                "DeliveryNote",
                "Warning",
                "Reminder",
                "Cancellation",
                "CreditNote",
                "Confirmation",
                "IncomingInvoice",
                "Undefined",
                "Order",
                "PriceInquery",
                "Letter",
                "Minute",
                "Akonto"
              ],
              "type": "string"
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "InvoiceAddress": {
          "description": "The address for delvieries of this project",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "City": {
              "description": "The city of this address",
              "type": "string"
            },
            "Street": {
              "description": "The street name of this address",
              "type": "string"
            },
            "HouseNumber": {
              "description": "The house number of this address",
              "type": "string"
            },
            "ZipCode": {
              "description": "The ZIP or Postal Code of this address",
              "type": "string"
            },
            "AddressLine2": {
              "description": "The secondary address line, c/o details, etc.",
              "type": "string"
            },
            "Description": {
              "description": "The description of this address",
              "type": "string"
            },
            "Country": {
              "description": "The ISO 3166-1 alpha-2 country code of this address",
              "type": "string"
            },
            "Phone": {
              "description": "The phone number of this address",
              "type": "string"
            },
            "Fax": {
              "description": "The fax number of this address",
              "type": "string"
            },
            "Email": {
              "description": "The email address of this address",
              "type": "string"
            },
            "Website": {
              "description": "The website of this address",
              "type": "string"
            },
            "IsStandard": {
              "description": "Whether this address is the standard address of a company",
              "type": "boolean"
            },
            "DefaultForDocumentType": {
              "description": "The document type this address should be used as a standard for",
              "enum": [
                "Quotation",
                "Invoice",
                "DeliveryNote",
                "Warning",
                "Reminder",
                "Cancellation",
                "CreditNote",
                "Confirmation",
                "IncomingInvoice",
                "Undefined",
                "Order",
                "PriceInquery",
                "Letter",
                "Minute",
                "Akonto"
              ],
              "type": "string"
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "Lead": {
          "description": "The lead of the project",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The name of the lead",
              "type": "string"
            },
            "CompanyName": {
              "description": "The name of the company that this lead is assigned to, read-only",
              "type": "string"
            },
            "Number": {
              "description": "The number of the lead",
              "type": "string"
            },
            "Company": {
              "description": "The company this lead belongs to",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Status": {
              "description": "The status of the lead",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "StatusId": {
              "format": "int32",
              "description": "The Id of the status of the lead",
              "type": "integer"
            },
            "CashOn": {
              "format": "date-time",
              "description": "The expected sales date",
              "type": "string"
            },
            "ClosingProbability": {
              "format": "int32",
              "description": "The probability of closing the lead, in percent",
              "type": "integer"
            },
            "Currency": {
              "description": "The ISO 4217 code of the currency of the lead volume",
              "maxLength": 3,
              "minLength": 0,
              "type": "string"
            },
            "Volume": {
              "format": "double",
              "description": "The financial volume when closing the lead",
              "type": "number"
            },
            "CompanyId": {
              "format": "int32",
              "description": "The Id of the company this lead belongs to",
              "type": "integer"
            },
            "CustomFields": {
              "description": "The custom fields of this lead",
              "type": "array",
              "items": {
                "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
                "type": "object"
              }
            },
            "ResponsibleUserId": {
              "format": "int32",
              "description": "The user id of the HQ user responsible for this lead",
              "type": "integer"
            },
            "ResponsibleUser": {
              "description": "The HQ user responsible for this lead",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "SalesCampaigns": {
              "description": "List of all Sales Campaigns for this Lead",
              "type": "array",
              "items": {
                "description": "Represents the status a lead is in",
                "type": "object"
              }
            },
            "ContactPersons": {
              "description": "List of all contact persons for this Lead",
              "type": "array",
              "items": {
                "description": "A contact person represents a person that works for a company you do business with. A company can have many contact persons.",
                "type": "object"
              }
            },
            "Subsystems": {
              "description": "The subsystems this lead is associated with",
              "type": "array",
              "items": {
                "description": "A subsystem represents a tenant within a customer's HQ",
                "type": "object"
              }
            },
            "ProjectId": {
              "format": "int32",
              "description": "The project id of the lead",
              "type": "integer"
            },
            "Project": {
              "description": "The project of the lead",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "CustomFields": {
          "description": "The custom fields of this project",
          "type": "array",
          "items": {
            "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
            "required": [
              "Name",
              "Id"
            ],
            "type": "object",
            "properties": {
              "Name": {
                "description": "The name of this custom field",
                "type": "string"
              },
              "Value": {
                "description": "The value of this custom field",
                "type": "string"
              },
              "Type": {
                "description": "The type of this custom field",
                "type": "string"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        },
        "Reportings": {
          "description": "The user reportings of this project",
          "type": "array",
          "items": {
            "description": "A user reporting represents a logged time of a user on a specific task in HQ.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "Note": {
                "description": "The user-provided note of this reporting",
                "type": "string"
              },
              "Duration": {
                "format": "int64",
                "description": "The reporting duration, in seconds",
                "type": "integer"
              },
              "UserId": {
                "format": "int32",
                "description": "The id of the user this reporting is for",
                "type": "integer"
              },
              "User": {
                "description": "The user this reporting is for",
                "type": "object"
              },
              "ChargeRateValue": {
                "format": "double",
                "description": "The external charge rate value",
                "type": "number"
              },
              "InternalChargeRateValue": {
                "format": "double",
                "description": "The internal charge rate value",
                "type": "number"
              },
              "IsApproved": {
                "description": "Whether this reporting was approved",
                "type": "boolean"
              },
              "StartOn": {
                "format": "date-time",
                "description": "The date of the reporting",
                "type": "string"
              },
              "BreakDuration": {
                "format": "int64",
                "description": "The break duration of this reporting, in seconds",
                "type": "integer"
              },
              "ProjectId": {
                "format": "int32",
                "description": "The id of the project that this reporting belongs to",
                "type": "integer"
              },
              "Project": {
                "description": "The project that this reporting belongs to",
                "type": "object"
              },
              "TaskId": {
                "format": "int32",
                "description": "The id of the task this reporting was created for",
                "type": "integer"
              },
              "Task": {
                "description": "The task this reporting was created for",
                "type": "object"
              },
              "CurrencyInternalChargeRateValue": {
                "description": "The ISO 4217 code of the currency of the internal charge rate value",
                "maxLength": 3,
                "minLength": 0,
                "type": "string"
              },
              "CurrencyChargeRateValue": {
                "description": "The ISO 4217 code of the currency of the external charge rate",
                "maxLength": 3,
                "minLength": 0,
                "type": "string"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        },
        "Files": {
          "description": "The files of this project",
          "type": "array",
          "items": {
            "description": "A file represents a user upload or HQ-generated PDF documents.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "Name": {
                "description": "The name of the file",
                "type": "string"
              },
              "Size": {
                "format": "double",
                "description": "The size in bytes",
                "type": "number"
              },
              "HasContent": {
                "description": "Returns true if the file has content (was uploaded yet)",
                "type": "boolean"
              },
              "IsDirectory": {
                "description": "Returns true if the file entity is a directory, otherwise false",
                "type": "boolean"
              },
              "DirectoryId": {
                "format": "int32",
                "description": "The id of the parent directory",
                "type": "integer"
              },
              "FileRelations": {
                "description": "List of all relations of a",
                "type": "array"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        },
        "Members": {
          "description": "The members of this project",
          "type": "array",
          "items": {
            "description": "A project member links a user to a project. It includes the project role and the charge rates\r\n            for the link.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "UserId": {
                "format": "int32",
                "description": "Id of the User which is working on the project",
                "type": "integer"
              },
              "ProjectRoleId": {
                "format": "int32",
                "description": "Id of the project role with which the user is working on the project",
                "type": "integer"
              },
              "ProjectId": {
                "format": "int32",
                "description": "The id of the linked project",
                "type": "integer"
              },
              "ProjectRole": {
                "description": "The project role with which the user is working on the project",
                "type": "object"
              },
              "Project": {
                "description": "The project this member is working on",
                "type": "object"
              },
              "User": {
                "description": "The User which is working on the project",
                "type": "object"
              },
              "ExternalChargeRateValue": {
                "format": "double",
                "description": "The external rate with which the users time will be charged to the customer",
                "type": "number"
              },
              "ExternalChargeRateCurrency": {
                "description": "The Currency of the external charge rate value",
                "type": "string"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        },
        "ContactHistories": {
          "description": "Contact histories linked to this project.",
          "type": "array",
          "items": {
            "description": "The contact history represents any contact you had with a contact person. For example, any meeting, phone call or email can be a contact history entry.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "ContactOn": {
                "format": "date-time",
                "description": "The date and time the contact was made",
                "type": "string"
              },
              "Content": {
                "description": "The content of the contact entry",
                "type": "string"
              },
              "Subject": {
                "description": "The main subject of the contact",
                "type": "string"
              },
              "ContactType": {
                "description": "How the contact took place, for example 'E-Mail' or 'Meeting'",
                "type": "string"
              },
              "UserId": {
                "format": "int32",
                "description": "The Id of user of your own company who was in contact with the contact person",
                "type": "integer"
              },
              "User": {
                "description": "The user of your own company who was in contact with the contact person",
                "type": "object"
              },
              "ProjectId": {
                "format": "int32",
                "description": "The Id of the project that this contact was about",
                "type": "integer"
              },
              "Project": {
                "description": "The project that this contact was about",
                "type": "object"
              },
              "LeadId": {
                "format": "int32",
                "description": "The Id of the lead that this contact was about",
                "type": "integer"
              },
              "Lead": {
                "description": "The lead that this contact was about",
                "type": "object"
              },
              "CompanyId": {
                "format": "int32",
                "description": "The Id of the company that this contact was about",
                "type": "integer"
              },
              "Company": {
                "description": "The company that this contact was about",
                "type": "object"
              },
              "ContactPersonId": {
                "format": "int32",
                "description": "The Id of the contact person that this contact was with",
                "type": "integer"
              },
              "ContactPerson": {
                "description": "The contact person that this contact was with",
                "type": "object"
              },
              "Files": {
                "description": "The files releated to the contact history",
                "type": "array"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        },
        "ContactPersons": {
          "description": "Contact persons linked to this project.",
          "type": "array",
          "items": {
            "description": "A contact person represents a person that works for a company you do business with. A company can have many contact persons.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "FirstName": {
                "description": "The first name of the contact person",
                "type": "string"
              },
              "LastName": {
                "description": "The last name of the contact person",
                "type": "string"
              },
              "Position": {
                "description": "The position of the contact person",
                "type": "string"
              },
              "CompanyId": {
                "format": "int32",
                "description": "The Id of the company that the contact person belongs to",
                "type": "integer"
              },
              "PhoneLandline": {
                "description": "The landline phone number of the contact person",
                "type": "string"
              },
              "PhoneMobile": {
                "description": "The mobile phone number of the contact person",
                "type": "string"
              },
              "Salutation": {
                "description": "The salutation of the contact person",
                "type": "string"
              },
              "Birthdate": {
                "description": "The birth date of the user",
                "type": "string"
              },
              "SalutationForm": {
                "description": "The salutation form of the contact person. The value can be \"Neutral\", \"Formal\", \"Informal\" or null.",
                "type": "string"
              },
              "Title": {
                "description": "The academic title of the contact person",
                "type": "string"
              },
              "Language": {
                "description": "The preferred contact language of this contact person, in two-letter ISO-Code, for example 'DE'",
                "type": "string"
              },
              "DefaultAddressId": {
                "format": "int32",
                "description": "The id of the default address of this contact person",
                "type": "integer"
              },
              "Addresses": {
                "description": "All addresses of the contact person",
                "type": "array"
              },
              "DefaultAddress": {
                "description": "The default address of this contact person",
                "type": "object"
              },
              "CustomFields": {
                "description": "The customfields associated with this contact person",
                "type": "array"
              },
              "Company": {
                "description": "The company that the contact person belongs to",
                "type": "object"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        },
        "Articles": {
          "description": "All articles linked to the project",
          "type": "array",
          "items": {
            "description": "An article is a stock item that your company sells, for example a digital camera. \r\n            An article can also be a service or activity that your company performs, for example a digital design. \r\n            Articles can be used to create positions on invoices or quotations, among others.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "Name": {
                "description": "The name of this article",
                "type": "string"
              },
              "Number": {
                "description": "The number as identifier of the article",
                "type": "string"
              },
              "Description": {
                "description": "The description of the article",
                "type": "string"
              },
              "BaseType": {
                "description": "The baset ype of the article",
                "type": "string"
              },
              "CategoryId": {
                "format": "int32",
                "description": "The category ID of the article",
                "type": "integer"
              },
              "Category": {
                "description": "The article category",
                "type": "object"
              },
              "SalesPrices": {
                "description": "The list of possible sales prices",
                "type": "array"
              },
              "PurchasingPrices": {
                "description": "The list of possible purchasing prices",
                "type": "array"
              },
              "Stocks": {
                "description": "The list of stocks this article can be stored in",
                "type": "array"
              },
              "CustomFields": {
                "description": "The customfields associated with this article",
                "type": "array"
              },
              "Files": {
                "description": "The files associated to the article",
                "type": "array"
              },
              "InternalExternalArticle": {
                "description": "The Make or Buy type of this article",
                "type": "string"
              },
              "CostCenter1": {
                "description": "The cost center 1 this article is associated with",
                "type": "string"
              },
              "CostCenter2": {
                "description": "The cost center 2 this article is associated with",
                "type": "string"
              },
              "BookingAccount": {
                "description": "The booking account this article is associated with",
                "type": "string"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        },
        "ProjectBudgets": {
          "description": "All articles linked to the project",
          "type": "array",
          "items": {
            "description": "The project budget for a project",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "ProjectId": {
                "format": "int32",
                "type": "integer"
              },
              "FinancesCostTypeId": {
                "format": "int32",
                "type": "integer"
              },
              "Costs": {
                "format": "double",
                "type": "number"
              },
              "Purpose": {
                "type": "string"
              },
              "Currency": {
                "type": "string"
              },
              "FinancesCostType": {
                "description": "The linked cost type. This is only relevant for assigned tasks/reportings. Incoming invoices have their own cost type on position level",
                "type": "object"
              },
              "Project": {
                "description": "The project which the budget belongs to",
                "type": "object"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        },
        "Id": {
          "format": "int32",
          "description": "The unique identifier of this entity",
          "type": "integer"
        },
        "CreatedBy": {
          "format": "int32",
          "description": "The id of the user who created this entity",
          "type": "integer"
        },
        "UpdatedBy": {
          "format": "int32",
          "description": "The id of the last user who modified this entity",
          "type": "integer"
        },
        "CreatedOn": {
          "format": "date-time",
          "description": "The date and time this entity was created, in UTC",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "description": "The last date and time this entity was updated, in UTC",
          "type": "string"
        }
      }
    },
    "Document": {
      "description": "A generic document, used for internal purposes only",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "Files": {
          "description": "The files of this document",
          "type": "array",
          "items": {
            "description": "A file represents a user upload or HQ-generated PDF documents.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "Name": {
                "description": "The name of the file",
                "type": "string"
              },
              "Size": {
                "format": "double",
                "description": "The size in bytes",
                "type": "number"
              },
              "HasContent": {
                "description": "Returns true if the file has content (was uploaded yet)",
                "type": "boolean"
              },
              "IsDirectory": {
                "description": "Returns true if the file entity is a directory, otherwise false",
                "type": "boolean"
              },
              "DirectoryId": {
                "format": "int32",
                "description": "The id of the parent directory",
                "type": "integer"
              },
              "FileRelations": {
                "description": "List of all relations of a",
                "type": "array"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        },
        "Type": {
          "description": "The type of the document",
          "enum": [
            "Quotation",
            "Invoice",
            "DeliveryNote",
            "Warning",
            "Reminder",
            "Cancellation",
            "CreditNote",
            "Confirmation",
            "IncomingInvoice",
            "Undefined",
            "Order",
            "PriceInquery",
            "Letter",
            "Minute",
            "Akonto"
          ],
          "type": "string"
        },
        "AddressText": {
          "description": "The receiver address text of the document",
          "type": "string"
        },
        "CompanyAddressId": {
          "format": "int32",
          "description": "The id of the postal address of the receiving company",
          "type": "integer"
        },
        "CompanyAddress": {
          "description": "The postal address of the receiving company",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "City": {
              "description": "The city of this address",
              "type": "string"
            },
            "Street": {
              "description": "The street name of this address",
              "type": "string"
            },
            "HouseNumber": {
              "description": "The house number of this address",
              "type": "string"
            },
            "ZipCode": {
              "description": "The ZIP or Postal Code of this address",
              "type": "string"
            },
            "AddressLine2": {
              "description": "The secondary address line, c/o details, etc.",
              "type": "string"
            },
            "Description": {
              "description": "The description of this address",
              "type": "string"
            },
            "Country": {
              "description": "The ISO 3166-1 alpha-2 country code of this address",
              "type": "string"
            },
            "Phone": {
              "description": "The phone number of this address",
              "type": "string"
            },
            "Fax": {
              "description": "The fax number of this address",
              "type": "string"
            },
            "Email": {
              "description": "The email address of this address",
              "type": "string"
            },
            "Website": {
              "description": "The website of this address",
              "type": "string"
            },
            "IsStandard": {
              "description": "Whether this address is the standard address of a company",
              "type": "boolean"
            },
            "DefaultForDocumentType": {
              "description": "The document type this address should be used as a standard for",
              "enum": [
                "Quotation",
                "Invoice",
                "DeliveryNote",
                "Warning",
                "Reminder",
                "Cancellation",
                "CreditNote",
                "Confirmation",
                "IncomingInvoice",
                "Undefined",
                "Order",
                "PriceInquery",
                "Letter",
                "Minute",
                "Akonto"
              ],
              "type": "string"
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "Subject": {
          "description": "The subject of the document including the placeholders",
          "type": "string"
        },
        "CalculatedSubject": {
          "description": "The calcuated subject of the document.\r\n            The subject includes the final data, without the placeholders.",
          "type": "string"
        },
        "Header": {
          "description": "The header text on the document",
          "type": "string"
        },
        "Footer": {
          "description": "The footer text on the document",
          "type": "string"
        },
        "DocumentTemplateId": {
          "format": "int32",
          "description": "The document template id",
          "type": "integer"
        },
        "Number": {
          "description": "The number of the document, auto generated by the HQ",
          "type": "string"
        },
        "ContactPersonId": {
          "format": "int32",
          "description": "The id of the responsible contact person at the receiving company",
          "type": "integer"
        },
        "ContactPerson": {
          "description": "The responsible contact person at the receiving company",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "FirstName": {
              "description": "The first name of the contact person",
              "type": "string"
            },
            "LastName": {
              "description": "The last name of the contact person",
              "type": "string"
            },
            "Position": {
              "description": "The position of the contact person",
              "type": "string"
            },
            "CompanyId": {
              "format": "int32",
              "description": "The Id of the company that the contact person belongs to",
              "type": "integer"
            },
            "PhoneLandline": {
              "description": "The landline phone number of the contact person",
              "type": "string"
            },
            "PhoneMobile": {
              "description": "The mobile phone number of the contact person",
              "type": "string"
            },
            "Salutation": {
              "description": "The salutation of the contact person",
              "type": "string"
            },
            "Birthdate": {
              "description": "The birth date of the user",
              "type": "string"
            },
            "SalutationForm": {
              "description": "The salutation form of the contact person. The value can be \"Neutral\", \"Formal\", \"Informal\" or null.",
              "enum": [
                "Formal",
                "Informal",
                "Neutral",
                "NotSet"
              ],
              "type": "string"
            },
            "Title": {
              "description": "The academic title of the contact person",
              "type": "string"
            },
            "Language": {
              "description": "The preferred contact language of this contact person, in two-letter ISO-Code, for example 'DE'",
              "type": "string"
            },
            "DefaultAddressId": {
              "format": "int32",
              "description": "The id of the default address of this contact person",
              "type": "integer"
            },
            "Addresses": {
              "description": "All addresses of the contact person",
              "type": "array",
              "items": {
                "description": "A company address represents one of many addresses of companies.",
                "type": "object"
              }
            },
            "DefaultAddress": {
              "description": "The default address of this contact person",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "CustomFields": {
              "description": "The customfields associated with this contact person",
              "type": "array",
              "items": {
                "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
                "type": "object"
              }
            },
            "Company": {
              "description": "The company that the contact person belongs to",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "CompanyId": {
          "format": "int32",
          "description": "The id of the company which is the receiver of the document",
          "type": "integer"
        },
        "Company": {
          "description": "The company which is the receiver of the document",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The name of the company",
              "type": "string"
            },
            "IndustrialSector": {
              "description": "The company's industrial sector",
              "type": "string"
            },
            "Description": {
              "description": "A longer description of the company",
              "type": "string"
            },
            "IBAN": {
              "description": "The IBAN of the company",
              "type": "string"
            },
            "BIC": {
              "description": "The BIC of the company",
              "type": "string"
            },
            "DebitorNumber": {
              "format": "int32",
              "description": "The company's debitor number",
              "type": "integer"
            },
            "CreditorNumber": {
              "format": "int32",
              "description": "The company's creditor number",
              "type": "integer"
            },
            "TaxId": {
              "description": "The company's tax id",
              "type": "string"
            },
            "DefaultDeliveryConditionId": {
              "format": "int32",
              "description": "The id of the default delivery condition of this company",
              "type": "integer"
            },
            "DefaultDeliveryCondition": {
              "description": "The default delivery condition of this company",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "DefaultPaymentConditionId": {
              "format": "int32",
              "description": "The id of the default payment condition of this company",
              "type": "integer"
            },
            "DefaultPaymentCondition": {
              "description": "The default payment condition of this company",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "DefaultAddress": {
              "description": "The default address of this company",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Addresses": {
              "description": "All addresses of the company",
              "type": "array",
              "items": {
                "description": "A company address represents one of many addresses of companies.",
                "type": "object"
              }
            },
            "ResponsibleUsers": {
              "description": "The list of the responsible users of this company",
              "type": "array",
              "items": {
                "description": "A user represents a user in your HQ system.",
                "type": "object"
              }
            },
            "CustomFields": {
              "description": "The customfields associated with this company",
              "type": "array",
              "items": {
                "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
                "type": "object"
              }
            },
            "CompanyTypes": {
              "description": "The company types associated with this company",
              "type": "array",
              "items": {
                "description": "This is a connection between a company and a company type.\r\n            A company can have more than one type and can have a different company number for each type.",
                "type": "object"
              }
            },
            "Files": {
              "description": "The files associated with this company",
              "type": "array",
              "items": {
                "description": "A file represents a user upload or HQ-generated PDF documents.",
                "type": "object"
              }
            },
            "Subsystems": {
              "description": "The subsystems this company is associated with",
              "type": "array",
              "items": {
                "description": "A subsystem represents a tenant within a customer's HQ",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "InternalContactPersonId": {
          "format": "int32",
          "description": "The id of the HQ user responsible for this document",
          "type": "integer"
        },
        "InternalContactPerson": {
          "description": "The HQ user repsonsible for this document",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "FirstName": {
              "description": "The first name of the user",
              "type": "string"
            },
            "LastName": {
              "description": "The last name of the user",
              "type": "string"
            },
            "UserName": {
              "description": "The user's user name in HQ",
              "type": "string"
            },
            "EMailWork": {
              "description": "The work email of the user",
              "type": "string"
            },
            "Salutation": {
              "description": "The salutation of the user, i.e. Mrs. or Mr.",
              "type": "string"
            },
            "Title": {
              "description": "The professional title of the user",
              "type": "string"
            },
            "EmployeeNumber": {
              "description": "The employee number of the user",
              "type": "string"
            },
            "Department": {
              "description": "The department of the user",
              "type": "string"
            },
            "BirthDate": {
              "format": "date-time",
              "description": "The birth date of the user",
              "type": "string"
            },
            "FederalState": {
              "description": "The federal state of the user",
              "type": "string"
            },
            "Country": {
              "description": "The country of the user",
              "type": "string"
            },
            "BasicLoadInHours": {
              "format": "double",
              "description": "The basic load in hours of the user",
              "type": "number"
            },
            "EntryDate": {
              "format": "date-time",
              "description": "The entry date of the user",
              "type": "string"
            },
            "LeavingDate": {
              "format": "date-time",
              "description": "The leaving date of the user",
              "type": "string"
            },
            "PhoneLandlinePrivate": {
              "description": "The private phone number of the user - landline",
              "type": "string"
            },
            "PhoneLandlineWork": {
              "description": "The work phone number of the user - landline",
              "type": "string"
            },
            "PhoneMobilePrivate": {
              "description": "The private phone number of the user - mobile",
              "type": "string"
            },
            "PhoneMobileWork": {
              "description": "The work phon number of the user - mobile",
              "type": "string"
            },
            "UserWorkingHours": {
              "description": "The custom fields of the user",
              "type": "array",
              "items": {
                "description": "The weekly working hours user",
                "type": "object"
              }
            },
            "CustomFields": {
              "description": "The custom fields of the user",
              "type": "array",
              "items": {
                "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
                "type": "object"
              }
            },
            "UserGroups": {
              "description": "The user groups of the user",
              "type": "array",
              "items": {
                "description": "The user groups a user is in.",
                "type": "object"
              }
            },
            "ResourceGroup": {
              "description": "The resource group of the user",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Absences": {
              "description": "The absences of the user",
              "type": "array",
              "items": {
                "description": "An absence represents a time of absence from work, for example holidays or sickness. \r\n            Absences can be either paid or unpaid.",
                "type": "object"
              }
            },
            "Assignments": {
              "description": "The tasks the user is assigned to",
              "type": "array",
              "items": {
                "description": "The assignment of a user to a task",
                "type": "object"
              }
            },
            "Reportings": {
              "description": "The reportings of this user",
              "type": "array",
              "items": {
                "description": "A user reporting represents a logged time of a user on a specific task in HQ.",
                "type": "object"
              }
            },
            "ProjectMembers": {
              "description": "The allocations of this user to projects",
              "type": "array",
              "items": {
                "description": "A project member links a user to a project. It includes the project role and the charge rates\r\n            for the link.",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "LeadId": {
          "format": "int32",
          "description": "The id of the lead related to the document",
          "type": "integer"
        },
        "Lead": {
          "description": "The lead related to the document",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The name of the lead",
              "type": "string"
            },
            "CompanyName": {
              "description": "The name of the company that this lead is assigned to, read-only",
              "type": "string"
            },
            "Number": {
              "description": "The number of the lead",
              "type": "string"
            },
            "Company": {
              "description": "The company this lead belongs to",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Status": {
              "description": "The status of the lead",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "StatusId": {
              "format": "int32",
              "description": "The Id of the status of the lead",
              "type": "integer"
            },
            "CashOn": {
              "format": "date-time",
              "description": "The expected sales date",
              "type": "string"
            },
            "ClosingProbability": {
              "format": "int32",
              "description": "The probability of closing the lead, in percent",
              "type": "integer"
            },
            "Currency": {
              "description": "The ISO 4217 code of the currency of the lead volume",
              "maxLength": 3,
              "minLength": 0,
              "type": "string"
            },
            "Volume": {
              "format": "double",
              "description": "The financial volume when closing the lead",
              "type": "number"
            },
            "CompanyId": {
              "format": "int32",
              "description": "The Id of the company this lead belongs to",
              "type": "integer"
            },
            "CustomFields": {
              "description": "The custom fields of this lead",
              "type": "array",
              "items": {
                "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
                "type": "object"
              }
            },
            "ResponsibleUserId": {
              "format": "int32",
              "description": "The user id of the HQ user responsible for this lead",
              "type": "integer"
            },
            "ResponsibleUser": {
              "description": "The HQ user responsible for this lead",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "SalesCampaigns": {
              "description": "List of all Sales Campaigns for this Lead",
              "type": "array",
              "items": {
                "description": "Represents the status a lead is in",
                "type": "object"
              }
            },
            "ContactPersons": {
              "description": "List of all contact persons for this Lead",
              "type": "array",
              "items": {
                "description": "A contact person represents a person that works for a company you do business with. A company can have many contact persons.",
                "type": "object"
              }
            },
            "Subsystems": {
              "description": "The subsystems this lead is associated with",
              "type": "array",
              "items": {
                "description": "A subsystem represents a tenant within a customer's HQ",
                "type": "object"
              }
            },
            "ProjectId": {
              "format": "int32",
              "description": "The project id of the lead",
              "type": "integer"
            },
            "Project": {
              "description": "The project of the lead",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "SyncId": {
          "description": "A unique identifier for other sync clients",
          "type": "string"
        },
        "ProjectId": {
          "format": "int32",
          "description": "the id of the project related to the document",
          "type": "integer"
        },
        "Project": {
          "description": "The project related to the document",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Number": {
              "description": "The number of the project",
              "type": "string"
            },
            "Name": {
              "description": "The name of the project",
              "type": "string"
            },
            "Status": {
              "description": "The current status description of the project",
              "type": "string"
            },
            "PlannedStartDate": {
              "format": "date-time",
              "description": "The planned start date of the first task of the project",
              "type": "string"
            },
            "PlannedEndDate": {
              "format": "date-time",
              "description": "The planned end date of the last task of the project",
              "type": "string"
            },
            "StartDate": {
              "format": "date-time",
              "description": "The planned start date of the project",
              "type": "string"
            },
            "EndDate": {
              "format": "date-time",
              "description": "The planned end date of the project",
              "type": "string"
            },
            "AworkSyncId": {
              "description": "The Id from the linked awork project",
              "type": "string"
            },
            "Subsystems": {
              "description": "The subsystems this project is associated with",
              "type": "array",
              "items": {
                "description": "A subsystem represents a tenant within a customer's HQ",
                "type": "object"
              }
            },
            "ProjectTemplateId": {
              "format": "int32",
              "description": "The id of the project template",
              "type": "integer"
            },
            "ProjectTemplate": {
              "description": "The template of this project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "ProjectStatusId": {
              "format": "int32",
              "description": "The id of the project status",
              "type": "integer"
            },
            "CompanyId": {
              "format": "int32",
              "description": "The id of the company",
              "type": "integer"
            },
            "LeadId": {
              "format": "int32",
              "description": "The Id of the lead",
              "type": "integer"
            },
            "InvoiceAddressId": {
              "format": "int32",
              "description": "Id of the address for invoices of this project",
              "type": "integer"
            },
            "DeliveryAddressId": {
              "format": "int32",
              "description": "Id of the address for the deliveries of this project",
              "type": "integer"
            },
            "ResponsibleUserId": {
              "format": "int32",
              "description": "The id of the user which is responsible for this (internal) project",
              "type": "integer"
            },
            "ProjectStatus": {
              "description": "The status of the project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Company": {
              "description": "The company this project is associated with",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "ResponsibleUser": {
              "description": "The user which is responsible for this (internal) project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "DeliveryAddress": {
              "description": "The address for delvieries of this project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "InvoiceAddress": {
              "description": "The address for delvieries of this project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Lead": {
              "description": "The lead of the project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "CustomFields": {
              "description": "The custom fields of this project",
              "type": "array",
              "items": {
                "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
                "type": "object"
              }
            },
            "Reportings": {
              "description": "The user reportings of this project",
              "type": "array",
              "items": {
                "description": "A user reporting represents a logged time of a user on a specific task in HQ.",
                "type": "object"
              }
            },
            "Files": {
              "description": "The files of this project",
              "type": "array",
              "items": {
                "description": "A file represents a user upload or HQ-generated PDF documents.",
                "type": "object"
              }
            },
            "Members": {
              "description": "The members of this project",
              "type": "array",
              "items": {
                "description": "A project member links a user to a project. It includes the project role and the charge rates\r\n            for the link.",
                "type": "object"
              }
            },
            "ContactHistories": {
              "description": "Contact histories linked to this project.",
              "type": "array",
              "items": {
                "description": "The contact history represents any contact you had with a contact person. For example, any meeting, phone call or email can be a contact history entry.",
                "type": "object"
              }
            },
            "ContactPersons": {
              "description": "Contact persons linked to this project.",
              "type": "array",
              "items": {
                "description": "A contact person represents a person that works for a company you do business with. A company can have many contact persons.",
                "type": "object"
              }
            },
            "Articles": {
              "description": "All articles linked to the project",
              "type": "array",
              "items": {
                "description": "An article is a stock item that your company sells, for example a digital camera. \r\n            An article can also be a service or activity that your company performs, for example a digital design. \r\n            Articles can be used to create positions on invoices or quotations, among others.",
                "type": "object"
              }
            },
            "ProjectBudgets": {
              "description": "All articles linked to the project",
              "type": "array",
              "items": {
                "description": "The project budget for a project",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "Note": {
          "description": "The comment on the document",
          "type": "string"
        },
        "CompanyPurchaseOrderNumber": {
          "description": "The purchase order number on the document",
          "type": "string"
        },
        "Language": {
          "description": "The language of the document as two-letter ISOCode, for example 'DE'",
          "type": "string"
        },
        "DocumentFile": {
          "description": "The generated pdf file",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The name of the file",
              "type": "string"
            },
            "Size": {
              "format": "double",
              "description": "The size in bytes",
              "type": "number"
            },
            "HasContent": {
              "description": "Returns true if the file has content (was uploaded yet)",
              "type": "boolean"
            },
            "IsDirectory": {
              "description": "Returns true if the file entity is a directory, otherwise false",
              "type": "boolean"
            },
            "DirectoryId": {
              "format": "int32",
              "description": "The id of the parent directory",
              "type": "integer"
            },
            "FileRelations": {
              "description": "List of all relations of a",
              "type": "array",
              "items": {
                "description": "A file relation represents a link between a file and another entity like a project or article.",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "DocumentImage": {
          "description": "The generated pdf file, as an image",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The name of the file",
              "type": "string"
            },
            "Size": {
              "format": "double",
              "description": "The size in bytes",
              "type": "number"
            },
            "HasContent": {
              "description": "Returns true if the file has content (was uploaded yet)",
              "type": "boolean"
            },
            "IsDirectory": {
              "description": "Returns true if the file entity is a directory, otherwise false",
              "type": "boolean"
            },
            "DirectoryId": {
              "format": "int32",
              "description": "The id of the parent directory",
              "type": "integer"
            },
            "FileRelations": {
              "description": "List of all relations of a",
              "type": "array",
              "items": {
                "description": "A file relation represents a link between a file and another entity like a project or article.",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "Id": {
          "format": "int32",
          "description": "The unique identifier of this entity",
          "type": "integer"
        },
        "CreatedBy": {
          "format": "int32",
          "description": "The id of the user who created this entity",
          "type": "integer"
        },
        "UpdatedBy": {
          "format": "int32",
          "description": "The id of the last user who modified this entity",
          "type": "integer"
        },
        "CreatedOn": {
          "format": "date-time",
          "description": "The date and time this entity was created, in UTC",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "description": "The last date and time this entity was updated, in UTC",
          "type": "string"
        }
      }
    },
    "Subsystem": {
      "description": "A subsystem represents a tenant within a customer's HQ",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "Name": {
          "description": "The name of the subsystem",
          "type": "string"
        },
        "IsMaster": {
          "description": "Whether this is the master subsystem",
          "type": "boolean"
        },
        "Id": {
          "format": "int32",
          "description": "The unique identifier of this entity",
          "type": "integer"
        },
        "CreatedBy": {
          "format": "int32",
          "description": "The id of the user who created this entity",
          "type": "integer"
        },
        "UpdatedBy": {
          "format": "int32",
          "description": "The id of the last user who modified this entity",
          "type": "integer"
        },
        "CreatedOn": {
          "format": "date-time",
          "description": "The date and time this entity was created, in UTC",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "description": "The last date and time this entity was updated, in UTC",
          "type": "string"
        }
      }
    },
    "ProjectTemplate": {
      "description": "A project template defines the default tasks of this project and whether the project is internal or external.",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "Name": {
          "description": "The name of the project template",
          "type": "string"
        },
        "IsInternal": {
          "description": "Whether this is an internal project template without a company or with a company",
          "type": "boolean"
        },
        "ProjectStatus": {
          "description": "All project status that are related to the template",
          "type": "array",
          "items": {
            "description": "Represents the status of a project",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "Name": {
                "description": "The name of the project status",
                "type": "string"
              },
              "IsInProgress": {
                "description": "Whether this project is in progress or not",
                "type": "boolean"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        },
        "Id": {
          "format": "int32",
          "description": "The unique identifier of this entity",
          "type": "integer"
        },
        "CreatedBy": {
          "format": "int32",
          "description": "The id of the user who created this entity",
          "type": "integer"
        },
        "UpdatedBy": {
          "format": "int32",
          "description": "The id of the last user who modified this entity",
          "type": "integer"
        },
        "CreatedOn": {
          "format": "date-time",
          "description": "The date and time this entity was created, in UTC",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "description": "The last date and time this entity was updated, in UTC",
          "type": "string"
        }
      }
    },
    "ProjectStatus": {
      "description": "Represents the status of a project",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "Name": {
          "description": "The name of the project status",
          "type": "string"
        },
        "IsInProgress": {
          "description": "Whether this project is in progress or not",
          "type": "boolean"
        },
        "Id": {
          "format": "int32",
          "description": "The unique identifier of this entity",
          "type": "integer"
        },
        "CreatedBy": {
          "format": "int32",
          "description": "The id of the user who created this entity",
          "type": "integer"
        },
        "UpdatedBy": {
          "format": "int32",
          "description": "The id of the last user who modified this entity",
          "type": "integer"
        },
        "CreatedOn": {
          "format": "date-time",
          "description": "The date and time this entity was created, in UTC",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "description": "The last date and time this entity was updated, in UTC",
          "type": "string"
        }
      }
    },
    "Company": {
      "description": "A company represents any entity you do business with, for example a customer, a supplier or a partner.",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "Name": {
          "description": "The name of the company",
          "type": "string"
        },
        "IndustrialSector": {
          "description": "The company's industrial sector",
          "type": "string"
        },
        "Description": {
          "description": "A longer description of the company",
          "type": "string"
        },
        "IBAN": {
          "description": "The IBAN of the company",
          "type": "string"
        },
        "BIC": {
          "description": "The BIC of the company",
          "type": "string"
        },
        "DebitorNumber": {
          "format": "int32",
          "description": "The company's debitor number",
          "type": "integer"
        },
        "CreditorNumber": {
          "format": "int32",
          "description": "The company's creditor number",
          "type": "integer"
        },
        "TaxId": {
          "description": "The company's tax id",
          "type": "string"
        },
        "DefaultDeliveryConditionId": {
          "format": "int32",
          "description": "The id of the default delivery condition of this company",
          "type": "integer"
        },
        "DefaultDeliveryCondition": {
          "description": "The default delivery condition of this company",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The name of document condition",
              "type": "string"
            },
            "Text": {
              "description": "The text of condition",
              "type": "string"
            },
            "DisplayText": {
              "description": "The text with replaced due days",
              "type": "string"
            },
            "DueInDays": {
              "format": "int32",
              "description": "The payment due date in days",
              "type": "integer"
            },
            "Type": {
              "description": "The type of this condition",
              "enum": [
                "PaymentConditions",
                "DeliveryConditions",
                "NotDefined"
              ],
              "type": "string"
            },
            "WarningDays": {
              "format": "int32",
              "description": "The payment due date in days of a warning document",
              "type": "integer"
            },
            "ReminderDays": {
              "format": "int32",
              "description": "The payment due date in days of a reminder document",
              "type": "integer"
            },
            "Language": {
              "description": "The language of the condition, as two-letter ISO-Code, for example 'DE'",
              "type": "string"
            },
            "DocumentEarlyPayments": {
              "description": "The list of early payment conditions that belong to this document condition (i.e. Skonto)",
              "type": "array",
              "items": {
                "description": "The document early payment entry represents a rule in days before which a discount is granted on an invoice.",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "DefaultPaymentConditionId": {
          "format": "int32",
          "description": "The id of the default payment condition of this company",
          "type": "integer"
        },
        "DefaultPaymentCondition": {
          "description": "The default payment condition of this company",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The name of document condition",
              "type": "string"
            },
            "Text": {
              "description": "The text of condition",
              "type": "string"
            },
            "DisplayText": {
              "description": "The text with replaced due days",
              "type": "string"
            },
            "DueInDays": {
              "format": "int32",
              "description": "The payment due date in days",
              "type": "integer"
            },
            "Type": {
              "description": "The type of this condition",
              "enum": [
                "PaymentConditions",
                "DeliveryConditions",
                "NotDefined"
              ],
              "type": "string"
            },
            "WarningDays": {
              "format": "int32",
              "description": "The payment due date in days of a warning document",
              "type": "integer"
            },
            "ReminderDays": {
              "format": "int32",
              "description": "The payment due date in days of a reminder document",
              "type": "integer"
            },
            "Language": {
              "description": "The language of the condition, as two-letter ISO-Code, for example 'DE'",
              "type": "string"
            },
            "DocumentEarlyPayments": {
              "description": "The list of early payment conditions that belong to this document condition (i.e. Skonto)",
              "type": "array",
              "items": {
                "description": "The document early payment entry represents a rule in days before which a discount is granted on an invoice.",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "DefaultAddress": {
          "description": "The default address of this company",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "City": {
              "description": "The city of this address",
              "type": "string"
            },
            "Street": {
              "description": "The street name of this address",
              "type": "string"
            },
            "HouseNumber": {
              "description": "The house number of this address",
              "type": "string"
            },
            "ZipCode": {
              "description": "The ZIP or Postal Code of this address",
              "type": "string"
            },
            "AddressLine2": {
              "description": "The secondary address line, c/o details, etc.",
              "type": "string"
            },
            "Description": {
              "description": "The description of this address",
              "type": "string"
            },
            "Country": {
              "description": "The ISO 3166-1 alpha-2 country code of this address",
              "type": "string"
            },
            "Phone": {
              "description": "The phone number of this address",
              "type": "string"
            },
            "Fax": {
              "description": "The fax number of this address",
              "type": "string"
            },
            "Email": {
              "description": "The email address of this address",
              "type": "string"
            },
            "Website": {
              "description": "The website of this address",
              "type": "string"
            },
            "IsStandard": {
              "description": "Whether this address is the standard address of a company",
              "type": "boolean"
            },
            "DefaultForDocumentType": {
              "description": "The document type this address should be used as a standard for",
              "enum": [
                "Quotation",
                "Invoice",
                "DeliveryNote",
                "Warning",
                "Reminder",
                "Cancellation",
                "CreditNote",
                "Confirmation",
                "IncomingInvoice",
                "Undefined",
                "Order",
                "PriceInquery",
                "Letter",
                "Minute",
                "Akonto"
              ],
              "type": "string"
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "Addresses": {
          "description": "All addresses of the company",
          "type": "array",
          "items": {
            "description": "A company address represents one of many addresses of companies.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "City": {
                "description": "The city of this address",
                "type": "string"
              },
              "Street": {
                "description": "The street name of this address",
                "type": "string"
              },
              "HouseNumber": {
                "description": "The house number of this address",
                "type": "string"
              },
              "ZipCode": {
                "description": "The ZIP or Postal Code of this address",
                "type": "string"
              },
              "AddressLine2": {
                "description": "The secondary address line, c/o details, etc.",
                "type": "string"
              },
              "Description": {
                "description": "The description of this address",
                "type": "string"
              },
              "Country": {
                "description": "The ISO 3166-1 alpha-2 country code of this address",
                "type": "string"
              },
              "Phone": {
                "description": "The phone number of this address",
                "type": "string"
              },
              "Fax": {
                "description": "The fax number of this address",
                "type": "string"
              },
              "Email": {
                "description": "The email address of this address",
                "type": "string"
              },
              "Website": {
                "description": "The website of this address",
                "type": "string"
              },
              "IsStandard": {
                "description": "Whether this address is the standard address of a company",
                "type": "boolean"
              },
              "DefaultForDocumentType": {
                "description": "The document type this address should be used as a standard for",
                "type": "string"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        },
        "ResponsibleUsers": {
          "description": "The list of the responsible users of this company",
          "type": "array",
          "items": {
            "description": "A user represents a user in your HQ system.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "FirstName": {
                "description": "The first name of the user",
                "type": "string"
              },
              "LastName": {
                "description": "The last name of the user",
                "type": "string"
              },
              "UserName": {
                "description": "The user's user name in HQ",
                "type": "string"
              },
              "EMailWork": {
                "description": "The work email of the user",
                "type": "string"
              },
              "Salutation": {
                "description": "The salutation of the user, i.e. Mrs. or Mr.",
                "type": "string"
              },
              "Title": {
                "description": "The professional title of the user",
                "type": "string"
              },
              "EmployeeNumber": {
                "description": "The employee number of the user",
                "type": "string"
              },
              "Department": {
                "description": "The department of the user",
                "type": "string"
              },
              "BirthDate": {
                "format": "date-time",
                "description": "The birth date of the user",
                "type": "string"
              },
              "FederalState": {
                "description": "The federal state of the user",
                "type": "string"
              },
              "Country": {
                "description": "The country of the user",
                "type": "string"
              },
              "BasicLoadInHours": {
                "format": "double",
                "description": "The basic load in hours of the user",
                "type": "number"
              },
              "EntryDate": {
                "format": "date-time",
                "description": "The entry date of the user",
                "type": "string"
              },
              "LeavingDate": {
                "format": "date-time",
                "description": "The leaving date of the user",
                "type": "string"
              },
              "PhoneLandlinePrivate": {
                "description": "The private phone number of the user - landline",
                "type": "string"
              },
              "PhoneLandlineWork": {
                "description": "The work phone number of the user - landline",
                "type": "string"
              },
              "PhoneMobilePrivate": {
                "description": "The private phone number of the user - mobile",
                "type": "string"
              },
              "PhoneMobileWork": {
                "description": "The work phon number of the user - mobile",
                "type": "string"
              },
              "UserWorkingHours": {
                "description": "The custom fields of the user",
                "type": "array"
              },
              "CustomFields": {
                "description": "The custom fields of the user",
                "type": "array"
              },
              "UserGroups": {
                "description": "The user groups of the user",
                "type": "array"
              },
              "ResourceGroup": {
                "description": "The resource group of the user",
                "type": "object"
              },
              "Absences": {
                "description": "The absences of the user",
                "type": "array"
              },
              "Assignments": {
                "description": "The tasks the user is assigned to",
                "type": "array"
              },
              "Reportings": {
                "description": "The reportings of this user",
                "type": "array"
              },
              "ProjectMembers": {
                "description": "The allocations of this user to projects",
                "type": "array"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        },
        "CustomFields": {
          "description": "The customfields associated with this company",
          "type": "array",
          "items": {
            "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
            "required": [
              "Name",
              "Id"
            ],
            "type": "object",
            "properties": {
              "Name": {
                "description": "The name of this custom field",
                "type": "string"
              },
              "Value": {
                "description": "The value of this custom field",
                "type": "string"
              },
              "Type": {
                "description": "The type of this custom field",
                "type": "string"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        },
        "CompanyTypes": {
          "description": "The company types associated with this company",
          "type": "array",
          "items": {
            "description": "This is a connection between a company and a company type.\r\n            A company can have more than one type and can have a different company number for each type.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "Name": {
                "description": "The name of this company type",
                "type": "string"
              },
              "Number": {
                "description": "The number of the company for this type",
                "type": "string"
              },
              "CompanyId": {
                "format": "int32",
                "description": "The Id of the company",
                "type": "integer"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        },
        "Files": {
          "description": "The files associated with this company",
          "type": "array",
          "items": {
            "description": "A file represents a user upload or HQ-generated PDF documents.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "Name": {
                "description": "The name of the file",
                "type": "string"
              },
              "Size": {
                "format": "double",
                "description": "The size in bytes",
                "type": "number"
              },
              "HasContent": {
                "description": "Returns true if the file has content (was uploaded yet)",
                "type": "boolean"
              },
              "IsDirectory": {
                "description": "Returns true if the file entity is a directory, otherwise false",
                "type": "boolean"
              },
              "DirectoryId": {
                "format": "int32",
                "description": "The id of the parent directory",
                "type": "integer"
              },
              "FileRelations": {
                "description": "List of all relations of a",
                "type": "array"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        },
        "Subsystems": {
          "description": "The subsystems this company is associated with",
          "type": "array",
          "items": {
            "description": "A subsystem represents a tenant within a customer's HQ",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "Name": {
                "description": "The name of the subsystem",
                "type": "string"
              },
              "IsMaster": {
                "description": "Whether this is the master subsystem",
                "type": "boolean"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        },
        "Id": {
          "format": "int32",
          "description": "The unique identifier of this entity",
          "type": "integer"
        },
        "CreatedBy": {
          "format": "int32",
          "description": "The id of the user who created this entity",
          "type": "integer"
        },
        "UpdatedBy": {
          "format": "int32",
          "description": "The id of the last user who modified this entity",
          "type": "integer"
        },
        "CreatedOn": {
          "format": "date-time",
          "description": "The date and time this entity was created, in UTC",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "description": "The last date and time this entity was updated, in UTC",
          "type": "string"
        }
      }
    },
    "User": {
      "description": "A user represents a user in your HQ system.",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "FirstName": {
          "description": "The first name of the user",
          "type": "string"
        },
        "LastName": {
          "description": "The last name of the user",
          "type": "string"
        },
        "UserName": {
          "description": "The user's user name in HQ",
          "type": "string"
        },
        "EMailWork": {
          "description": "The work email of the user",
          "type": "string"
        },
        "Salutation": {
          "description": "The salutation of the user, i.e. Mrs. or Mr.",
          "type": "string"
        },
        "Title": {
          "description": "The professional title of the user",
          "type": "string"
        },
        "EmployeeNumber": {
          "description": "The employee number of the user",
          "type": "string"
        },
        "Department": {
          "description": "The department of the user",
          "type": "string"
        },
        "BirthDate": {
          "format": "date-time",
          "description": "The birth date of the user",
          "type": "string"
        },
        "FederalState": {
          "description": "The federal state of the user",
          "type": "string"
        },
        "Country": {
          "description": "The country of the user",
          "type": "string"
        },
        "BasicLoadInHours": {
          "format": "double",
          "description": "The basic load in hours of the user",
          "type": "number"
        },
        "EntryDate": {
          "format": "date-time",
          "description": "The entry date of the user",
          "type": "string"
        },
        "LeavingDate": {
          "format": "date-time",
          "description": "The leaving date of the user",
          "type": "string"
        },
        "PhoneLandlinePrivate": {
          "description": "The private phone number of the user - landline",
          "type": "string"
        },
        "PhoneLandlineWork": {
          "description": "The work phone number of the user - landline",
          "type": "string"
        },
        "PhoneMobilePrivate": {
          "description": "The private phone number of the user - mobile",
          "type": "string"
        },
        "PhoneMobileWork": {
          "description": "The work phon number of the user - mobile",
          "type": "string"
        },
        "UserWorkingHours": {
          "description": "The custom fields of the user",
          "type": "array",
          "items": {
            "description": "The weekly working hours user",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "Weekday": {
                "description": "The name of the weekday",
                "type": "string"
              },
              "StartTime": {
                "format": "double",
                "description": "The start time of this weekday",
                "type": "number"
              },
              "EndTime": {
                "format": "double",
                "description": "The end time of this weekday",
                "type": "number"
              },
              "Duration": {
                "format": "double",
                "description": "The duration of this weekday",
                "type": "number"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        },
        "CustomFields": {
          "description": "The custom fields of the user",
          "type": "array",
          "items": {
            "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
            "required": [
              "Name",
              "Id"
            ],
            "type": "object",
            "properties": {
              "Name": {
                "description": "The name of this custom field",
                "type": "string"
              },
              "Value": {
                "description": "The value of this custom field",
                "type": "string"
              },
              "Type": {
                "description": "The type of this custom field",
                "type": "string"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        },
        "UserGroups": {
          "description": "The user groups of the user",
          "type": "array",
          "items": {
            "description": "The user groups a user is in.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "Name": {
                "description": "The  name of the user group",
                "type": "string"
              },
              "Description": {
                "description": "The Description of the user group",
                "type": "string"
              },
              "RightLevel": {
                "format": "int32",
                "description": "The right level of the user group",
                "type": "integer"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        },
        "ResourceGroup": {
          "description": "The resource group of the user",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The  name of the resource group",
              "type": "string"
            },
            "Description": {
              "description": "The Description of the resource group",
              "type": "string"
            },
            "IsDefaultGroup": {
              "description": "Is the resource group the default group",
              "type": "boolean"
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "Absences": {
          "description": "The absences of the user",
          "type": "array",
          "items": {
            "description": "An absence represents a time of absence from work, for example holidays or sickness. \r\n            Absences can be either paid or unpaid.",
            "required": [
              "Start",
              "End",
              "UserId",
              "Id"
            ],
            "type": "object",
            "properties": {
              "Start": {
                "format": "date-time",
                "description": "The start date or date time of this absence, depending on the type. In ISO 8601 format.",
                "type": "string"
              },
              "End": {
                "format": "date-time",
                "description": "The end date or date time of this absence, depending on the type. In ISO 8601 format.",
                "type": "string"
              },
              "Type": {
                "description": "The type of this absence",
                "type": "string"
              },
              "Note": {
                "description": "The user-provided note for this absence",
                "type": "string"
              },
              "UserId": {
                "format": "int32",
                "description": "The id of the user this absence is for",
                "type": "integer"
              },
              "User": {
                "description": "The user this absence is for",
                "type": "object"
              },
              "IsApproved": {
                "description": "Whether this absence was approved",
                "type": "boolean"
              },
              "MissedDays": {
                "format": "double",
                "description": "The number of working days missed by this absence. Takes overlapping other absences into account.\r\n            Read-only!\r\n            This value is only applicable for full- and half-day absences (sick leave and vacation)",
                "type": "number"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        },
        "Assignments": {
          "description": "The tasks the user is assigned to",
          "type": "array",
          "items": {
            "description": "The assignment of a user to a task",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "AssignmentUnit": {
                "description": "The type of the assignment value. Percentage not allowed",
                "type": "string"
              },
              "AssignmentValue": {
                "format": "double",
                "description": "The value of the assignment. The value is stored in the unit specified in AssignmentUnit",
                "type": "number"
              },
              "TaskId": {
                "format": "int32",
                "description": "The id of the task the assignment is for",
                "type": "integer"
              },
              "Task": {
                "description": "The task the assignment is for",
                "type": "object"
              },
              "UserId": {
                "format": "int32",
                "description": "The id of the user assigned to the task",
                "type": "integer"
              },
              "User": {
                "description": "The user assigned to the task",
                "type": "object"
              },
              "ResourceId": {
                "format": "int32",
                "description": "The id of the resource assigned to the task",
                "type": "integer"
              },
              "Resource": {
                "description": "The resource assigned to the task",
                "type": "object"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        },
        "Reportings": {
          "description": "The reportings of this user",
          "type": "array",
          "items": {
            "description": "A user reporting represents a logged time of a user on a specific task in HQ.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "Note": {
                "description": "The user-provided note of this reporting",
                "type": "string"
              },
              "Duration": {
                "format": "int64",
                "description": "The reporting duration, in seconds",
                "type": "integer"
              },
              "UserId": {
                "format": "int32",
                "description": "The id of the user this reporting is for",
                "type": "integer"
              },
              "User": {
                "description": "The user this reporting is for",
                "type": "object"
              },
              "ChargeRateValue": {
                "format": "double",
                "description": "The external charge rate value",
                "type": "number"
              },
              "InternalChargeRateValue": {
                "format": "double",
                "description": "The internal charge rate value",
                "type": "number"
              },
              "IsApproved": {
                "description": "Whether this reporting was approved",
                "type": "boolean"
              },
              "StartOn": {
                "format": "date-time",
                "description": "The date of the reporting",
                "type": "string"
              },
              "BreakDuration": {
                "format": "int64",
                "description": "The break duration of this reporting, in seconds",
                "type": "integer"
              },
              "ProjectId": {
                "format": "int32",
                "description": "The id of the project that this reporting belongs to",
                "type": "integer"
              },
              "Project": {
                "description": "The project that this reporting belongs to",
                "type": "object"
              },
              "TaskId": {
                "format": "int32",
                "description": "The id of the task this reporting was created for",
                "type": "integer"
              },
              "Task": {
                "description": "The task this reporting was created for",
                "type": "object"
              },
              "CurrencyInternalChargeRateValue": {
                "description": "The ISO 4217 code of the currency of the internal charge rate value",
                "maxLength": 3,
                "minLength": 0,
                "type": "string"
              },
              "CurrencyChargeRateValue": {
                "description": "The ISO 4217 code of the currency of the external charge rate",
                "maxLength": 3,
                "minLength": 0,
                "type": "string"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        },
        "ProjectMembers": {
          "description": "The allocations of this user to projects",
          "type": "array",
          "items": {
            "description": "A project member links a user to a project. It includes the project role and the charge rates\r\n            for the link.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "UserId": {
                "format": "int32",
                "description": "Id of the User which is working on the project",
                "type": "integer"
              },
              "ProjectRoleId": {
                "format": "int32",
                "description": "Id of the project role with which the user is working on the project",
                "type": "integer"
              },
              "ProjectId": {
                "format": "int32",
                "description": "The id of the linked project",
                "type": "integer"
              },
              "ProjectRole": {
                "description": "The project role with which the user is working on the project",
                "type": "object"
              },
              "Project": {
                "description": "The project this member is working on",
                "type": "object"
              },
              "User": {
                "description": "The User which is working on the project",
                "type": "object"
              },
              "ExternalChargeRateValue": {
                "format": "double",
                "description": "The external rate with which the users time will be charged to the customer",
                "type": "number"
              },
              "ExternalChargeRateCurrency": {
                "description": "The Currency of the external charge rate value",
                "type": "string"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        },
        "Id": {
          "format": "int32",
          "description": "The unique identifier of this entity",
          "type": "integer"
        },
        "CreatedBy": {
          "format": "int32",
          "description": "The id of the user who created this entity",
          "type": "integer"
        },
        "UpdatedBy": {
          "format": "int32",
          "description": "The id of the last user who modified this entity",
          "type": "integer"
        },
        "CreatedOn": {
          "format": "date-time",
          "description": "The date and time this entity was created, in UTC",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "description": "The last date and time this entity was updated, in UTC",
          "type": "string"
        }
      }
    },
    "CompanyAddress": {
      "description": "A company address represents one of many addresses of companies.",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "City": {
          "description": "The city of this address",
          "type": "string"
        },
        "Street": {
          "description": "The street name of this address",
          "type": "string"
        },
        "HouseNumber": {
          "description": "The house number of this address",
          "type": "string"
        },
        "ZipCode": {
          "description": "The ZIP or Postal Code of this address",
          "type": "string"
        },
        "AddressLine2": {
          "description": "The secondary address line, c/o details, etc.",
          "type": "string"
        },
        "Description": {
          "description": "The description of this address",
          "type": "string"
        },
        "Country": {
          "description": "The ISO 3166-1 alpha-2 country code of this address",
          "type": "string"
        },
        "Phone": {
          "description": "The phone number of this address",
          "type": "string"
        },
        "Fax": {
          "description": "The fax number of this address",
          "type": "string"
        },
        "Email": {
          "description": "The email address of this address",
          "type": "string"
        },
        "Website": {
          "description": "The website of this address",
          "type": "string"
        },
        "IsStandard": {
          "description": "Whether this address is the standard address of a company",
          "type": "boolean"
        },
        "DefaultForDocumentType": {
          "description": "The document type this address should be used as a standard for",
          "enum": [
            "Quotation",
            "Invoice",
            "DeliveryNote",
            "Warning",
            "Reminder",
            "Cancellation",
            "CreditNote",
            "Confirmation",
            "IncomingInvoice",
            "Undefined",
            "Order",
            "PriceInquery",
            "Letter",
            "Minute",
            "Akonto"
          ],
          "type": "string"
        },
        "Id": {
          "format": "int32",
          "description": "The unique identifier of this entity",
          "type": "integer"
        },
        "CreatedBy": {
          "format": "int32",
          "description": "The id of the user who created this entity",
          "type": "integer"
        },
        "UpdatedBy": {
          "format": "int32",
          "description": "The id of the last user who modified this entity",
          "type": "integer"
        },
        "CreatedOn": {
          "format": "date-time",
          "description": "The date and time this entity was created, in UTC",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "description": "The last date and time this entity was updated, in UTC",
          "type": "string"
        }
      }
    },
    "Lead": {
      "description": "A lead represents a deal or prospective customer that you are in contact with.",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "Name": {
          "description": "The name of the lead",
          "type": "string"
        },
        "CompanyName": {
          "description": "The name of the company that this lead is assigned to, read-only",
          "type": "string"
        },
        "Number": {
          "description": "The number of the lead",
          "type": "string"
        },
        "Company": {
          "description": "The company this lead belongs to",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The name of the company",
              "type": "string"
            },
            "IndustrialSector": {
              "description": "The company's industrial sector",
              "type": "string"
            },
            "Description": {
              "description": "A longer description of the company",
              "type": "string"
            },
            "IBAN": {
              "description": "The IBAN of the company",
              "type": "string"
            },
            "BIC": {
              "description": "The BIC of the company",
              "type": "string"
            },
            "DebitorNumber": {
              "format": "int32",
              "description": "The company's debitor number",
              "type": "integer"
            },
            "CreditorNumber": {
              "format": "int32",
              "description": "The company's creditor number",
              "type": "integer"
            },
            "TaxId": {
              "description": "The company's tax id",
              "type": "string"
            },
            "DefaultDeliveryConditionId": {
              "format": "int32",
              "description": "The id of the default delivery condition of this company",
              "type": "integer"
            },
            "DefaultDeliveryCondition": {
              "description": "The default delivery condition of this company",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "DefaultPaymentConditionId": {
              "format": "int32",
              "description": "The id of the default payment condition of this company",
              "type": "integer"
            },
            "DefaultPaymentCondition": {
              "description": "The default payment condition of this company",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "DefaultAddress": {
              "description": "The default address of this company",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Addresses": {
              "description": "All addresses of the company",
              "type": "array",
              "items": {
                "description": "A company address represents one of many addresses of companies.",
                "type": "object"
              }
            },
            "ResponsibleUsers": {
              "description": "The list of the responsible users of this company",
              "type": "array",
              "items": {
                "description": "A user represents a user in your HQ system.",
                "type": "object"
              }
            },
            "CustomFields": {
              "description": "The customfields associated with this company",
              "type": "array",
              "items": {
                "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
                "type": "object"
              }
            },
            "CompanyTypes": {
              "description": "The company types associated with this company",
              "type": "array",
              "items": {
                "description": "This is a connection between a company and a company type.\r\n            A company can have more than one type and can have a different company number for each type.",
                "type": "object"
              }
            },
            "Files": {
              "description": "The files associated with this company",
              "type": "array",
              "items": {
                "description": "A file represents a user upload or HQ-generated PDF documents.",
                "type": "object"
              }
            },
            "Subsystems": {
              "description": "The subsystems this company is associated with",
              "type": "array",
              "items": {
                "description": "A subsystem represents a tenant within a customer's HQ",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "Status": {
          "description": "The status of the lead",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The name of the status",
              "type": "string"
            },
            "Type": {
              "description": "Whether this lead status is open, successful or lost",
              "enum": [
                "NotSet",
                "Successful",
                "Unsuccessful",
                "Open"
              ],
              "type": "string"
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "StatusId": {
          "format": "int32",
          "description": "The Id of the status of the lead",
          "type": "integer"
        },
        "CashOn": {
          "format": "date-time",
          "description": "The expected sales date",
          "type": "string"
        },
        "ClosingProbability": {
          "format": "int32",
          "description": "The probability of closing the lead, in percent",
          "type": "integer"
        },
        "Currency": {
          "description": "The ISO 4217 code of the currency of the lead volume",
          "maxLength": 3,
          "minLength": 0,
          "type": "string"
        },
        "Volume": {
          "format": "double",
          "description": "The financial volume when closing the lead",
          "type": "number"
        },
        "CompanyId": {
          "format": "int32",
          "description": "The Id of the company this lead belongs to",
          "type": "integer"
        },
        "CustomFields": {
          "description": "The custom fields of this lead",
          "type": "array",
          "items": {
            "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
            "required": [
              "Name",
              "Id"
            ],
            "type": "object",
            "properties": {
              "Name": {
                "description": "The name of this custom field",
                "type": "string"
              },
              "Value": {
                "description": "The value of this custom field",
                "type": "string"
              },
              "Type": {
                "description": "The type of this custom field",
                "type": "string"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        },
        "ResponsibleUserId": {
          "format": "int32",
          "description": "The user id of the HQ user responsible for this lead",
          "type": "integer"
        },
        "ResponsibleUser": {
          "description": "The HQ user responsible for this lead",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "FirstName": {
              "description": "The first name of the user",
              "type": "string"
            },
            "LastName": {
              "description": "The last name of the user",
              "type": "string"
            },
            "UserName": {
              "description": "The user's user name in HQ",
              "type": "string"
            },
            "EMailWork": {
              "description": "The work email of the user",
              "type": "string"
            },
            "Salutation": {
              "description": "The salutation of the user, i.e. Mrs. or Mr.",
              "type": "string"
            },
            "Title": {
              "description": "The professional title of the user",
              "type": "string"
            },
            "EmployeeNumber": {
              "description": "The employee number of the user",
              "type": "string"
            },
            "Department": {
              "description": "The department of the user",
              "type": "string"
            },
            "BirthDate": {
              "format": "date-time",
              "description": "The birth date of the user",
              "type": "string"
            },
            "FederalState": {
              "description": "The federal state of the user",
              "type": "string"
            },
            "Country": {
              "description": "The country of the user",
              "type": "string"
            },
            "BasicLoadInHours": {
              "format": "double",
              "description": "The basic load in hours of the user",
              "type": "number"
            },
            "EntryDate": {
              "format": "date-time",
              "description": "The entry date of the user",
              "type": "string"
            },
            "LeavingDate": {
              "format": "date-time",
              "description": "The leaving date of the user",
              "type": "string"
            },
            "PhoneLandlinePrivate": {
              "description": "The private phone number of the user - landline",
              "type": "string"
            },
            "PhoneLandlineWork": {
              "description": "The work phone number of the user - landline",
              "type": "string"
            },
            "PhoneMobilePrivate": {
              "description": "The private phone number of the user - mobile",
              "type": "string"
            },
            "PhoneMobileWork": {
              "description": "The work phon number of the user - mobile",
              "type": "string"
            },
            "UserWorkingHours": {
              "description": "The custom fields of the user",
              "type": "array",
              "items": {
                "description": "The weekly working hours user",
                "type": "object"
              }
            },
            "CustomFields": {
              "description": "The custom fields of the user",
              "type": "array",
              "items": {
                "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
                "type": "object"
              }
            },
            "UserGroups": {
              "description": "The user groups of the user",
              "type": "array",
              "items": {
                "description": "The user groups a user is in.",
                "type": "object"
              }
            },
            "ResourceGroup": {
              "description": "The resource group of the user",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Absences": {
              "description": "The absences of the user",
              "type": "array",
              "items": {
                "description": "An absence represents a time of absence from work, for example holidays or sickness. \r\n            Absences can be either paid or unpaid.",
                "type": "object"
              }
            },
            "Assignments": {
              "description": "The tasks the user is assigned to",
              "type": "array",
              "items": {
                "description": "The assignment of a user to a task",
                "type": "object"
              }
            },
            "Reportings": {
              "description": "The reportings of this user",
              "type": "array",
              "items": {
                "description": "A user reporting represents a logged time of a user on a specific task in HQ.",
                "type": "object"
              }
            },
            "ProjectMembers": {
              "description": "The allocations of this user to projects",
              "type": "array",
              "items": {
                "description": "A project member links a user to a project. It includes the project role and the charge rates\r\n            for the link.",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "SalesCampaigns": {
          "description": "List of all Sales Campaigns for this Lead",
          "type": "array",
          "items": {
            "description": "Represents the status a lead is in",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "Name": {
                "description": "The name of the status",
                "type": "string"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        },
        "ContactPersons": {
          "description": "List of all contact persons for this Lead",
          "type": "array",
          "items": {
            "description": "A contact person represents a person that works for a company you do business with. A company can have many contact persons.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "FirstName": {
                "description": "The first name of the contact person",
                "type": "string"
              },
              "LastName": {
                "description": "The last name of the contact person",
                "type": "string"
              },
              "Position": {
                "description": "The position of the contact person",
                "type": "string"
              },
              "CompanyId": {
                "format": "int32",
                "description": "The Id of the company that the contact person belongs to",
                "type": "integer"
              },
              "PhoneLandline": {
                "description": "The landline phone number of the contact person",
                "type": "string"
              },
              "PhoneMobile": {
                "description": "The mobile phone number of the contact person",
                "type": "string"
              },
              "Salutation": {
                "description": "The salutation of the contact person",
                "type": "string"
              },
              "Birthdate": {
                "description": "The birth date of the user",
                "type": "string"
              },
              "SalutationForm": {
                "description": "The salutation form of the contact person. The value can be \"Neutral\", \"Formal\", \"Informal\" or null.",
                "type": "string"
              },
              "Title": {
                "description": "The academic title of the contact person",
                "type": "string"
              },
              "Language": {
                "description": "The preferred contact language of this contact person, in two-letter ISO-Code, for example 'DE'",
                "type": "string"
              },
              "DefaultAddressId": {
                "format": "int32",
                "description": "The id of the default address of this contact person",
                "type": "integer"
              },
              "Addresses": {
                "description": "All addresses of the contact person",
                "type": "array"
              },
              "DefaultAddress": {
                "description": "The default address of this contact person",
                "type": "object"
              },
              "CustomFields": {
                "description": "The customfields associated with this contact person",
                "type": "array"
              },
              "Company": {
                "description": "The company that the contact person belongs to",
                "type": "object"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        },
        "Subsystems": {
          "description": "The subsystems this lead is associated with",
          "type": "array",
          "items": {
            "description": "A subsystem represents a tenant within a customer's HQ",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "Name": {
                "description": "The name of the subsystem",
                "type": "string"
              },
              "IsMaster": {
                "description": "Whether this is the master subsystem",
                "type": "boolean"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        },
        "ProjectId": {
          "format": "int32",
          "description": "The project id of the lead",
          "type": "integer"
        },
        "Project": {
          "description": "The project of the lead",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Number": {
              "description": "The number of the project",
              "type": "string"
            },
            "Name": {
              "description": "The name of the project",
              "type": "string"
            },
            "Status": {
              "description": "The current status description of the project",
              "type": "string"
            },
            "PlannedStartDate": {
              "format": "date-time",
              "description": "The planned start date of the first task of the project",
              "type": "string"
            },
            "PlannedEndDate": {
              "format": "date-time",
              "description": "The planned end date of the last task of the project",
              "type": "string"
            },
            "StartDate": {
              "format": "date-time",
              "description": "The planned start date of the project",
              "type": "string"
            },
            "EndDate": {
              "format": "date-time",
              "description": "The planned end date of the project",
              "type": "string"
            },
            "AworkSyncId": {
              "description": "The Id from the linked awork project",
              "type": "string"
            },
            "Subsystems": {
              "description": "The subsystems this project is associated with",
              "type": "array",
              "items": {
                "description": "A subsystem represents a tenant within a customer's HQ",
                "type": "object"
              }
            },
            "ProjectTemplateId": {
              "format": "int32",
              "description": "The id of the project template",
              "type": "integer"
            },
            "ProjectTemplate": {
              "description": "The template of this project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "ProjectStatusId": {
              "format": "int32",
              "description": "The id of the project status",
              "type": "integer"
            },
            "CompanyId": {
              "format": "int32",
              "description": "The id of the company",
              "type": "integer"
            },
            "LeadId": {
              "format": "int32",
              "description": "The Id of the lead",
              "type": "integer"
            },
            "InvoiceAddressId": {
              "format": "int32",
              "description": "Id of the address for invoices of this project",
              "type": "integer"
            },
            "DeliveryAddressId": {
              "format": "int32",
              "description": "Id of the address for the deliveries of this project",
              "type": "integer"
            },
            "ResponsibleUserId": {
              "format": "int32",
              "description": "The id of the user which is responsible for this (internal) project",
              "type": "integer"
            },
            "ProjectStatus": {
              "description": "The status of the project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Company": {
              "description": "The company this project is associated with",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "ResponsibleUser": {
              "description": "The user which is responsible for this (internal) project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "DeliveryAddress": {
              "description": "The address for delvieries of this project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "InvoiceAddress": {
              "description": "The address for delvieries of this project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Lead": {
              "description": "The lead of the project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "CustomFields": {
              "description": "The custom fields of this project",
              "type": "array",
              "items": {
                "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
                "type": "object"
              }
            },
            "Reportings": {
              "description": "The user reportings of this project",
              "type": "array",
              "items": {
                "description": "A user reporting represents a logged time of a user on a specific task in HQ.",
                "type": "object"
              }
            },
            "Files": {
              "description": "The files of this project",
              "type": "array",
              "items": {
                "description": "A file represents a user upload or HQ-generated PDF documents.",
                "type": "object"
              }
            },
            "Members": {
              "description": "The members of this project",
              "type": "array",
              "items": {
                "description": "A project member links a user to a project. It includes the project role and the charge rates\r\n            for the link.",
                "type": "object"
              }
            },
            "ContactHistories": {
              "description": "Contact histories linked to this project.",
              "type": "array",
              "items": {
                "description": "The contact history represents any contact you had with a contact person. For example, any meeting, phone call or email can be a contact history entry.",
                "type": "object"
              }
            },
            "ContactPersons": {
              "description": "Contact persons linked to this project.",
              "type": "array",
              "items": {
                "description": "A contact person represents a person that works for a company you do business with. A company can have many contact persons.",
                "type": "object"
              }
            },
            "Articles": {
              "description": "All articles linked to the project",
              "type": "array",
              "items": {
                "description": "An article is a stock item that your company sells, for example a digital camera. \r\n            An article can also be a service or activity that your company performs, for example a digital design. \r\n            Articles can be used to create positions on invoices or quotations, among others.",
                "type": "object"
              }
            },
            "ProjectBudgets": {
              "description": "All articles linked to the project",
              "type": "array",
              "items": {
                "description": "The project budget for a project",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "Id": {
          "format": "int32",
          "description": "The unique identifier of this entity",
          "type": "integer"
        },
        "CreatedBy": {
          "format": "int32",
          "description": "The id of the user who created this entity",
          "type": "integer"
        },
        "UpdatedBy": {
          "format": "int32",
          "description": "The id of the last user who modified this entity",
          "type": "integer"
        },
        "CreatedOn": {
          "format": "date-time",
          "description": "The date and time this entity was created, in UTC",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "description": "The last date and time this entity was updated, in UTC",
          "type": "string"
        }
      }
    },
    "UserReporting": {
      "description": "A user reporting represents a logged time of a user on a specific task in HQ.",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "Note": {
          "description": "The user-provided note of this reporting",
          "type": "string"
        },
        "Duration": {
          "format": "int64",
          "description": "The reporting duration, in seconds",
          "type": "integer"
        },
        "UserId": {
          "format": "int32",
          "description": "The id of the user this reporting is for",
          "type": "integer"
        },
        "User": {
          "description": "The user this reporting is for",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "FirstName": {
              "description": "The first name of the user",
              "type": "string"
            },
            "LastName": {
              "description": "The last name of the user",
              "type": "string"
            },
            "UserName": {
              "description": "The user's user name in HQ",
              "type": "string"
            },
            "EMailWork": {
              "description": "The work email of the user",
              "type": "string"
            },
            "Salutation": {
              "description": "The salutation of the user, i.e. Mrs. or Mr.",
              "type": "string"
            },
            "Title": {
              "description": "The professional title of the user",
              "type": "string"
            },
            "EmployeeNumber": {
              "description": "The employee number of the user",
              "type": "string"
            },
            "Department": {
              "description": "The department of the user",
              "type": "string"
            },
            "BirthDate": {
              "format": "date-time",
              "description": "The birth date of the user",
              "type": "string"
            },
            "FederalState": {
              "description": "The federal state of the user",
              "type": "string"
            },
            "Country": {
              "description": "The country of the user",
              "type": "string"
            },
            "BasicLoadInHours": {
              "format": "double",
              "description": "The basic load in hours of the user",
              "type": "number"
            },
            "EntryDate": {
              "format": "date-time",
              "description": "The entry date of the user",
              "type": "string"
            },
            "LeavingDate": {
              "format": "date-time",
              "description": "The leaving date of the user",
              "type": "string"
            },
            "PhoneLandlinePrivate": {
              "description": "The private phone number of the user - landline",
              "type": "string"
            },
            "PhoneLandlineWork": {
              "description": "The work phone number of the user - landline",
              "type": "string"
            },
            "PhoneMobilePrivate": {
              "description": "The private phone number of the user - mobile",
              "type": "string"
            },
            "PhoneMobileWork": {
              "description": "The work phon number of the user - mobile",
              "type": "string"
            },
            "UserWorkingHours": {
              "description": "The custom fields of the user",
              "type": "array",
              "items": {
                "description": "The weekly working hours user",
                "type": "object"
              }
            },
            "CustomFields": {
              "description": "The custom fields of the user",
              "type": "array",
              "items": {
                "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
                "type": "object"
              }
            },
            "UserGroups": {
              "description": "The user groups of the user",
              "type": "array",
              "items": {
                "description": "The user groups a user is in.",
                "type": "object"
              }
            },
            "ResourceGroup": {
              "description": "The resource group of the user",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Absences": {
              "description": "The absences of the user",
              "type": "array",
              "items": {
                "description": "An absence represents a time of absence from work, for example holidays or sickness. \r\n            Absences can be either paid or unpaid.",
                "type": "object"
              }
            },
            "Assignments": {
              "description": "The tasks the user is assigned to",
              "type": "array",
              "items": {
                "description": "The assignment of a user to a task",
                "type": "object"
              }
            },
            "Reportings": {
              "description": "The reportings of this user",
              "type": "array",
              "items": {
                "description": "A user reporting represents a logged time of a user on a specific task in HQ.",
                "type": "object"
              }
            },
            "ProjectMembers": {
              "description": "The allocations of this user to projects",
              "type": "array",
              "items": {
                "description": "A project member links a user to a project. It includes the project role and the charge rates\r\n            for the link.",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "ChargeRateValue": {
          "format": "double",
          "description": "The external charge rate value",
          "type": "number"
        },
        "InternalChargeRateValue": {
          "format": "double",
          "description": "The internal charge rate value",
          "type": "number"
        },
        "IsApproved": {
          "description": "Whether this reporting was approved",
          "type": "boolean"
        },
        "StartOn": {
          "format": "date-time",
          "description": "The date of the reporting",
          "type": "string"
        },
        "BreakDuration": {
          "format": "int64",
          "description": "The break duration of this reporting, in seconds",
          "type": "integer"
        },
        "ProjectId": {
          "format": "int32",
          "description": "The id of the project that this reporting belongs to",
          "type": "integer"
        },
        "Project": {
          "description": "The project that this reporting belongs to",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Number": {
              "description": "The number of the project",
              "type": "string"
            },
            "Name": {
              "description": "The name of the project",
              "type": "string"
            },
            "Status": {
              "description": "The current status description of the project",
              "type": "string"
            },
            "PlannedStartDate": {
              "format": "date-time",
              "description": "The planned start date of the first task of the project",
              "type": "string"
            },
            "PlannedEndDate": {
              "format": "date-time",
              "description": "The planned end date of the last task of the project",
              "type": "string"
            },
            "StartDate": {
              "format": "date-time",
              "description": "The planned start date of the project",
              "type": "string"
            },
            "EndDate": {
              "format": "date-time",
              "description": "The planned end date of the project",
              "type": "string"
            },
            "AworkSyncId": {
              "description": "The Id from the linked awork project",
              "type": "string"
            },
            "Subsystems": {
              "description": "The subsystems this project is associated with",
              "type": "array",
              "items": {
                "description": "A subsystem represents a tenant within a customer's HQ",
                "type": "object"
              }
            },
            "ProjectTemplateId": {
              "format": "int32",
              "description": "The id of the project template",
              "type": "integer"
            },
            "ProjectTemplate": {
              "description": "The template of this project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "ProjectStatusId": {
              "format": "int32",
              "description": "The id of the project status",
              "type": "integer"
            },
            "CompanyId": {
              "format": "int32",
              "description": "The id of the company",
              "type": "integer"
            },
            "LeadId": {
              "format": "int32",
              "description": "The Id of the lead",
              "type": "integer"
            },
            "InvoiceAddressId": {
              "format": "int32",
              "description": "Id of the address for invoices of this project",
              "type": "integer"
            },
            "DeliveryAddressId": {
              "format": "int32",
              "description": "Id of the address for the deliveries of this project",
              "type": "integer"
            },
            "ResponsibleUserId": {
              "format": "int32",
              "description": "The id of the user which is responsible for this (internal) project",
              "type": "integer"
            },
            "ProjectStatus": {
              "description": "The status of the project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Company": {
              "description": "The company this project is associated with",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "ResponsibleUser": {
              "description": "The user which is responsible for this (internal) project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "DeliveryAddress": {
              "description": "The address for delvieries of this project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "InvoiceAddress": {
              "description": "The address for delvieries of this project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Lead": {
              "description": "The lead of the project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "CustomFields": {
              "description": "The custom fields of this project",
              "type": "array",
              "items": {
                "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
                "type": "object"
              }
            },
            "Reportings": {
              "description": "The user reportings of this project",
              "type": "array",
              "items": {
                "description": "A user reporting represents a logged time of a user on a specific task in HQ.",
                "type": "object"
              }
            },
            "Files": {
              "description": "The files of this project",
              "type": "array",
              "items": {
                "description": "A file represents a user upload or HQ-generated PDF documents.",
                "type": "object"
              }
            },
            "Members": {
              "description": "The members of this project",
              "type": "array",
              "items": {
                "description": "A project member links a user to a project. It includes the project role and the charge rates\r\n            for the link.",
                "type": "object"
              }
            },
            "ContactHistories": {
              "description": "Contact histories linked to this project.",
              "type": "array",
              "items": {
                "description": "The contact history represents any contact you had with a contact person. For example, any meeting, phone call or email can be a contact history entry.",
                "type": "object"
              }
            },
            "ContactPersons": {
              "description": "Contact persons linked to this project.",
              "type": "array",
              "items": {
                "description": "A contact person represents a person that works for a company you do business with. A company can have many contact persons.",
                "type": "object"
              }
            },
            "Articles": {
              "description": "All articles linked to the project",
              "type": "array",
              "items": {
                "description": "An article is a stock item that your company sells, for example a digital camera. \r\n            An article can also be a service or activity that your company performs, for example a digital design. \r\n            Articles can be used to create positions on invoices or quotations, among others.",
                "type": "object"
              }
            },
            "ProjectBudgets": {
              "description": "All articles linked to the project",
              "type": "array",
              "items": {
                "description": "The project budget for a project",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "TaskId": {
          "format": "int32",
          "description": "The id of the task this reporting was created for",
          "type": "integer"
        },
        "Task": {
          "description": "The task this reporting was created for",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The name of the task.",
              "type": "string"
            },
            "Assignments": {
              "description": "The assignments of users to a specific task.",
              "type": "array",
              "items": {
                "description": "The assignment of a user to a task",
                "type": "object"
              }
            },
            "Order": {
              "format": "int32",
              "description": "The order of the task within one project.",
              "type": "integer"
            },
            "ParentId": {
              "format": "int32",
              "description": "The Id of the parent task of this task, used for building a hierarchy.",
              "type": "integer"
            },
            "ProjectId": {
              "format": "int32",
              "description": "The Id of the project this task belongs to.",
              "type": "integer"
            },
            "Project": {
              "description": "The project this task belongs to.",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "IsDone": {
              "description": "Whether this task is open or done.",
              "type": "boolean"
            },
            "PlannedEffort": {
              "format": "double",
              "description": "The planned effort, in  hours.",
              "type": "number"
            },
            "PercentDone": {
              "format": "int32",
              "description": "The done value of the task in percent",
              "type": "integer"
            },
            "Description": {
              "description": "The description of the task.",
              "type": "string"
            },
            "StartOn": {
              "format": "date-time",
              "description": "The start time of the task.",
              "type": "string"
            },
            "EndOn": {
              "format": "date-time",
              "description": "The end time of the task.",
              "type": "string"
            },
            "TaskTypeId": {
              "format": "int32",
              "description": "The Id of the task type.",
              "type": "integer"
            },
            "TaskType": {
              "description": "The type of the task.",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "TaskTypeStatusId": {
              "format": "int32",
              "description": "The id of the status of the task.",
              "type": "integer"
            },
            "TaskTypeStatus": {
              "description": "The status of the task.",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Dependencies": {
              "description": "The dependencies to another task.",
              "type": "array",
              "items": {
                "description": "A task dependency represents a dependency between two tasks, where one task needs to be finished before the other can be started.",
                "type": "object"
              }
            },
            "UserReportings": {
              "description": "The reportings of the task",
              "type": "array",
              "items": {
                "description": "A user reporting represents a logged time of a user on a specific task in HQ.",
                "type": "object"
              }
            },
            "IsAppointment": {
              "description": "Checked if the task is a appointment",
              "type": "boolean"
            },
            "SyncId": {
              "description": "The external id of the task for e.g sync clients.",
              "type": "string"
            },
            "Sync": {
              "description": "Whether the task should be synced to the configured sync clients.",
              "type": "boolean"
            },
            "JiraProjectName": {
              "description": "The short name of the linked JIRA project.",
              "type": "string"
            },
            "Remaining": {
              "format": "double",
              "description": "The remainig value of the task in hours.",
              "type": "number"
            },
            "ProjectBudgetId": {
              "format": "int32",
              "description": "The id of the project budget of the task.",
              "type": "integer"
            },
            "ProjectBudget": {
              "description": "The project budget of the task.",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "ChargeType": {
              "description": "The charge type of the task",
              "enum": [
                "Fixed",
                "Variable",
                "Capped",
                "NotChargeable",
                "NotSet"
              ],
              "type": "string"
            },
            "ChargeValue": {
              "format": "double",
              "description": "The charge value of the task",
              "type": "number"
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "CurrencyInternalChargeRateValue": {
          "description": "The ISO 4217 code of the currency of the internal charge rate value",
          "maxLength": 3,
          "minLength": 0,
          "type": "string"
        },
        "CurrencyChargeRateValue": {
          "description": "The ISO 4217 code of the currency of the external charge rate",
          "maxLength": 3,
          "minLength": 0,
          "type": "string"
        },
        "Id": {
          "format": "int32",
          "description": "The unique identifier of this entity",
          "type": "integer"
        },
        "CreatedBy": {
          "format": "int32",
          "description": "The id of the user who created this entity",
          "type": "integer"
        },
        "UpdatedBy": {
          "format": "int32",
          "description": "The id of the last user who modified this entity",
          "type": "integer"
        },
        "CreatedOn": {
          "format": "date-time",
          "description": "The date and time this entity was created, in UTC",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "description": "The last date and time this entity was updated, in UTC",
          "type": "string"
        }
      }
    },
    "ProjectMember": {
      "description": "A project member links a user to a project. It includes the project role and the charge rates\r\n            for the link.",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "UserId": {
          "format": "int32",
          "description": "Id of the User which is working on the project",
          "type": "integer"
        },
        "ProjectRoleId": {
          "format": "int32",
          "description": "Id of the project role with which the user is working on the project",
          "type": "integer"
        },
        "ProjectId": {
          "format": "int32",
          "description": "The id of the linked project",
          "type": "integer"
        },
        "ProjectRole": {
          "description": "The project role with which the user is working on the project",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The name of this project role",
              "type": "string"
            },
            "IsRequired": {
              "description": "Tells if this a required role on projects.",
              "type": "boolean"
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "Project": {
          "description": "The project this member is working on",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Number": {
              "description": "The number of the project",
              "type": "string"
            },
            "Name": {
              "description": "The name of the project",
              "type": "string"
            },
            "Status": {
              "description": "The current status description of the project",
              "type": "string"
            },
            "PlannedStartDate": {
              "format": "date-time",
              "description": "The planned start date of the first task of the project",
              "type": "string"
            },
            "PlannedEndDate": {
              "format": "date-time",
              "description": "The planned end date of the last task of the project",
              "type": "string"
            },
            "StartDate": {
              "format": "date-time",
              "description": "The planned start date of the project",
              "type": "string"
            },
            "EndDate": {
              "format": "date-time",
              "description": "The planned end date of the project",
              "type": "string"
            },
            "AworkSyncId": {
              "description": "The Id from the linked awork project",
              "type": "string"
            },
            "Subsystems": {
              "description": "The subsystems this project is associated with",
              "type": "array",
              "items": {
                "description": "A subsystem represents a tenant within a customer's HQ",
                "type": "object"
              }
            },
            "ProjectTemplateId": {
              "format": "int32",
              "description": "The id of the project template",
              "type": "integer"
            },
            "ProjectTemplate": {
              "description": "The template of this project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "ProjectStatusId": {
              "format": "int32",
              "description": "The id of the project status",
              "type": "integer"
            },
            "CompanyId": {
              "format": "int32",
              "description": "The id of the company",
              "type": "integer"
            },
            "LeadId": {
              "format": "int32",
              "description": "The Id of the lead",
              "type": "integer"
            },
            "InvoiceAddressId": {
              "format": "int32",
              "description": "Id of the address for invoices of this project",
              "type": "integer"
            },
            "DeliveryAddressId": {
              "format": "int32",
              "description": "Id of the address for the deliveries of this project",
              "type": "integer"
            },
            "ResponsibleUserId": {
              "format": "int32",
              "description": "The id of the user which is responsible for this (internal) project",
              "type": "integer"
            },
            "ProjectStatus": {
              "description": "The status of the project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Company": {
              "description": "The company this project is associated with",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "ResponsibleUser": {
              "description": "The user which is responsible for this (internal) project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "DeliveryAddress": {
              "description": "The address for delvieries of this project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "InvoiceAddress": {
              "description": "The address for delvieries of this project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Lead": {
              "description": "The lead of the project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "CustomFields": {
              "description": "The custom fields of this project",
              "type": "array",
              "items": {
                "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
                "type": "object"
              }
            },
            "Reportings": {
              "description": "The user reportings of this project",
              "type": "array",
              "items": {
                "description": "A user reporting represents a logged time of a user on a specific task in HQ.",
                "type": "object"
              }
            },
            "Files": {
              "description": "The files of this project",
              "type": "array",
              "items": {
                "description": "A file represents a user upload or HQ-generated PDF documents.",
                "type": "object"
              }
            },
            "Members": {
              "description": "The members of this project",
              "type": "array",
              "items": {
                "description": "A project member links a user to a project. It includes the project role and the charge rates\r\n            for the link.",
                "type": "object"
              }
            },
            "ContactHistories": {
              "description": "Contact histories linked to this project.",
              "type": "array",
              "items": {
                "description": "The contact history represents any contact you had with a contact person. For example, any meeting, phone call or email can be a contact history entry.",
                "type": "object"
              }
            },
            "ContactPersons": {
              "description": "Contact persons linked to this project.",
              "type": "array",
              "items": {
                "description": "A contact person represents a person that works for a company you do business with. A company can have many contact persons.",
                "type": "object"
              }
            },
            "Articles": {
              "description": "All articles linked to the project",
              "type": "array",
              "items": {
                "description": "An article is a stock item that your company sells, for example a digital camera. \r\n            An article can also be a service or activity that your company performs, for example a digital design. \r\n            Articles can be used to create positions on invoices or quotations, among others.",
                "type": "object"
              }
            },
            "ProjectBudgets": {
              "description": "All articles linked to the project",
              "type": "array",
              "items": {
                "description": "The project budget for a project",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "User": {
          "description": "The User which is working on the project",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "FirstName": {
              "description": "The first name of the user",
              "type": "string"
            },
            "LastName": {
              "description": "The last name of the user",
              "type": "string"
            },
            "UserName": {
              "description": "The user's user name in HQ",
              "type": "string"
            },
            "EMailWork": {
              "description": "The work email of the user",
              "type": "string"
            },
            "Salutation": {
              "description": "The salutation of the user, i.e. Mrs. or Mr.",
              "type": "string"
            },
            "Title": {
              "description": "The professional title of the user",
              "type": "string"
            },
            "EmployeeNumber": {
              "description": "The employee number of the user",
              "type": "string"
            },
            "Department": {
              "description": "The department of the user",
              "type": "string"
            },
            "BirthDate": {
              "format": "date-time",
              "description": "The birth date of the user",
              "type": "string"
            },
            "FederalState": {
              "description": "The federal state of the user",
              "type": "string"
            },
            "Country": {
              "description": "The country of the user",
              "type": "string"
            },
            "BasicLoadInHours": {
              "format": "double",
              "description": "The basic load in hours of the user",
              "type": "number"
            },
            "EntryDate": {
              "format": "date-time",
              "description": "The entry date of the user",
              "type": "string"
            },
            "LeavingDate": {
              "format": "date-time",
              "description": "The leaving date of the user",
              "type": "string"
            },
            "PhoneLandlinePrivate": {
              "description": "The private phone number of the user - landline",
              "type": "string"
            },
            "PhoneLandlineWork": {
              "description": "The work phone number of the user - landline",
              "type": "string"
            },
            "PhoneMobilePrivate": {
              "description": "The private phone number of the user - mobile",
              "type": "string"
            },
            "PhoneMobileWork": {
              "description": "The work phon number of the user - mobile",
              "type": "string"
            },
            "UserWorkingHours": {
              "description": "The custom fields of the user",
              "type": "array",
              "items": {
                "description": "The weekly working hours user",
                "type": "object"
              }
            },
            "CustomFields": {
              "description": "The custom fields of the user",
              "type": "array",
              "items": {
                "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
                "type": "object"
              }
            },
            "UserGroups": {
              "description": "The user groups of the user",
              "type": "array",
              "items": {
                "description": "The user groups a user is in.",
                "type": "object"
              }
            },
            "ResourceGroup": {
              "description": "The resource group of the user",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Absences": {
              "description": "The absences of the user",
              "type": "array",
              "items": {
                "description": "An absence represents a time of absence from work, for example holidays or sickness. \r\n            Absences can be either paid or unpaid.",
                "type": "object"
              }
            },
            "Assignments": {
              "description": "The tasks the user is assigned to",
              "type": "array",
              "items": {
                "description": "The assignment of a user to a task",
                "type": "object"
              }
            },
            "Reportings": {
              "description": "The reportings of this user",
              "type": "array",
              "items": {
                "description": "A user reporting represents a logged time of a user on a specific task in HQ.",
                "type": "object"
              }
            },
            "ProjectMembers": {
              "description": "The allocations of this user to projects",
              "type": "array",
              "items": {
                "description": "A project member links a user to a project. It includes the project role and the charge rates\r\n            for the link.",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "ExternalChargeRateValue": {
          "format": "double",
          "description": "The external rate with which the users time will be charged to the customer",
          "type": "number"
        },
        "ExternalChargeRateCurrency": {
          "description": "The Currency of the external charge rate value",
          "type": "string"
        },
        "Id": {
          "format": "int32",
          "description": "The unique identifier of this entity",
          "type": "integer"
        },
        "CreatedBy": {
          "format": "int32",
          "description": "The id of the user who created this entity",
          "type": "integer"
        },
        "UpdatedBy": {
          "format": "int32",
          "description": "The id of the last user who modified this entity",
          "type": "integer"
        },
        "CreatedOn": {
          "format": "date-time",
          "description": "The date and time this entity was created, in UTC",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "description": "The last date and time this entity was updated, in UTC",
          "type": "string"
        }
      }
    },
    "ContactHistory": {
      "description": "The contact history represents any contact you had with a contact person. For example, any meeting, phone call or email can be a contact history entry.",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "ContactOn": {
          "format": "date-time",
          "description": "The date and time the contact was made",
          "type": "string"
        },
        "Content": {
          "description": "The content of the contact entry",
          "type": "string"
        },
        "Subject": {
          "description": "The main subject of the contact",
          "type": "string"
        },
        "ContactType": {
          "description": "How the contact took place, for example 'E-Mail' or 'Meeting'",
          "type": "string"
        },
        "UserId": {
          "format": "int32",
          "description": "The Id of user of your own company who was in contact with the contact person",
          "type": "integer"
        },
        "User": {
          "description": "The user of your own company who was in contact with the contact person",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "FirstName": {
              "description": "The first name of the user",
              "type": "string"
            },
            "LastName": {
              "description": "The last name of the user",
              "type": "string"
            },
            "UserName": {
              "description": "The user's user name in HQ",
              "type": "string"
            },
            "EMailWork": {
              "description": "The work email of the user",
              "type": "string"
            },
            "Salutation": {
              "description": "The salutation of the user, i.e. Mrs. or Mr.",
              "type": "string"
            },
            "Title": {
              "description": "The professional title of the user",
              "type": "string"
            },
            "EmployeeNumber": {
              "description": "The employee number of the user",
              "type": "string"
            },
            "Department": {
              "description": "The department of the user",
              "type": "string"
            },
            "BirthDate": {
              "format": "date-time",
              "description": "The birth date of the user",
              "type": "string"
            },
            "FederalState": {
              "description": "The federal state of the user",
              "type": "string"
            },
            "Country": {
              "description": "The country of the user",
              "type": "string"
            },
            "BasicLoadInHours": {
              "format": "double",
              "description": "The basic load in hours of the user",
              "type": "number"
            },
            "EntryDate": {
              "format": "date-time",
              "description": "The entry date of the user",
              "type": "string"
            },
            "LeavingDate": {
              "format": "date-time",
              "description": "The leaving date of the user",
              "type": "string"
            },
            "PhoneLandlinePrivate": {
              "description": "The private phone number of the user - landline",
              "type": "string"
            },
            "PhoneLandlineWork": {
              "description": "The work phone number of the user - landline",
              "type": "string"
            },
            "PhoneMobilePrivate": {
              "description": "The private phone number of the user - mobile",
              "type": "string"
            },
            "PhoneMobileWork": {
              "description": "The work phon number of the user - mobile",
              "type": "string"
            },
            "UserWorkingHours": {
              "description": "The custom fields of the user",
              "type": "array",
              "items": {
                "description": "The weekly working hours user",
                "type": "object"
              }
            },
            "CustomFields": {
              "description": "The custom fields of the user",
              "type": "array",
              "items": {
                "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
                "type": "object"
              }
            },
            "UserGroups": {
              "description": "The user groups of the user",
              "type": "array",
              "items": {
                "description": "The user groups a user is in.",
                "type": "object"
              }
            },
            "ResourceGroup": {
              "description": "The resource group of the user",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Absences": {
              "description": "The absences of the user",
              "type": "array",
              "items": {
                "description": "An absence represents a time of absence from work, for example holidays or sickness. \r\n            Absences can be either paid or unpaid.",
                "type": "object"
              }
            },
            "Assignments": {
              "description": "The tasks the user is assigned to",
              "type": "array",
              "items": {
                "description": "The assignment of a user to a task",
                "type": "object"
              }
            },
            "Reportings": {
              "description": "The reportings of this user",
              "type": "array",
              "items": {
                "description": "A user reporting represents a logged time of a user on a specific task in HQ.",
                "type": "object"
              }
            },
            "ProjectMembers": {
              "description": "The allocations of this user to projects",
              "type": "array",
              "items": {
                "description": "A project member links a user to a project. It includes the project role and the charge rates\r\n            for the link.",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "ProjectId": {
          "format": "int32",
          "description": "The Id of the project that this contact was about",
          "type": "integer"
        },
        "Project": {
          "description": "The project that this contact was about",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Number": {
              "description": "The number of the project",
              "type": "string"
            },
            "Name": {
              "description": "The name of the project",
              "type": "string"
            },
            "Status": {
              "description": "The current status description of the project",
              "type": "string"
            },
            "PlannedStartDate": {
              "format": "date-time",
              "description": "The planned start date of the first task of the project",
              "type": "string"
            },
            "PlannedEndDate": {
              "format": "date-time",
              "description": "The planned end date of the last task of the project",
              "type": "string"
            },
            "StartDate": {
              "format": "date-time",
              "description": "The planned start date of the project",
              "type": "string"
            },
            "EndDate": {
              "format": "date-time",
              "description": "The planned end date of the project",
              "type": "string"
            },
            "AworkSyncId": {
              "description": "The Id from the linked awork project",
              "type": "string"
            },
            "Subsystems": {
              "description": "The subsystems this project is associated with",
              "type": "array",
              "items": {
                "description": "A subsystem represents a tenant within a customer's HQ",
                "type": "object"
              }
            },
            "ProjectTemplateId": {
              "format": "int32",
              "description": "The id of the project template",
              "type": "integer"
            },
            "ProjectTemplate": {
              "description": "The template of this project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "ProjectStatusId": {
              "format": "int32",
              "description": "The id of the project status",
              "type": "integer"
            },
            "CompanyId": {
              "format": "int32",
              "description": "The id of the company",
              "type": "integer"
            },
            "LeadId": {
              "format": "int32",
              "description": "The Id of the lead",
              "type": "integer"
            },
            "InvoiceAddressId": {
              "format": "int32",
              "description": "Id of the address for invoices of this project",
              "type": "integer"
            },
            "DeliveryAddressId": {
              "format": "int32",
              "description": "Id of the address for the deliveries of this project",
              "type": "integer"
            },
            "ResponsibleUserId": {
              "format": "int32",
              "description": "The id of the user which is responsible for this (internal) project",
              "type": "integer"
            },
            "ProjectStatus": {
              "description": "The status of the project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Company": {
              "description": "The company this project is associated with",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "ResponsibleUser": {
              "description": "The user which is responsible for this (internal) project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "DeliveryAddress": {
              "description": "The address for delvieries of this project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "InvoiceAddress": {
              "description": "The address for delvieries of this project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Lead": {
              "description": "The lead of the project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "CustomFields": {
              "description": "The custom fields of this project",
              "type": "array",
              "items": {
                "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
                "type": "object"
              }
            },
            "Reportings": {
              "description": "The user reportings of this project",
              "type": "array",
              "items": {
                "description": "A user reporting represents a logged time of a user on a specific task in HQ.",
                "type": "object"
              }
            },
            "Files": {
              "description": "The files of this project",
              "type": "array",
              "items": {
                "description": "A file represents a user upload or HQ-generated PDF documents.",
                "type": "object"
              }
            },
            "Members": {
              "description": "The members of this project",
              "type": "array",
              "items": {
                "description": "A project member links a user to a project. It includes the project role and the charge rates\r\n            for the link.",
                "type": "object"
              }
            },
            "ContactHistories": {
              "description": "Contact histories linked to this project.",
              "type": "array",
              "items": {
                "description": "The contact history represents any contact you had with a contact person. For example, any meeting, phone call or email can be a contact history entry.",
                "type": "object"
              }
            },
            "ContactPersons": {
              "description": "Contact persons linked to this project.",
              "type": "array",
              "items": {
                "description": "A contact person represents a person that works for a company you do business with. A company can have many contact persons.",
                "type": "object"
              }
            },
            "Articles": {
              "description": "All articles linked to the project",
              "type": "array",
              "items": {
                "description": "An article is a stock item that your company sells, for example a digital camera. \r\n            An article can also be a service or activity that your company performs, for example a digital design. \r\n            Articles can be used to create positions on invoices or quotations, among others.",
                "type": "object"
              }
            },
            "ProjectBudgets": {
              "description": "All articles linked to the project",
              "type": "array",
              "items": {
                "description": "The project budget for a project",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "LeadId": {
          "format": "int32",
          "description": "The Id of the lead that this contact was about",
          "type": "integer"
        },
        "Lead": {
          "description": "The lead that this contact was about",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The name of the lead",
              "type": "string"
            },
            "CompanyName": {
              "description": "The name of the company that this lead is assigned to, read-only",
              "type": "string"
            },
            "Number": {
              "description": "The number of the lead",
              "type": "string"
            },
            "Company": {
              "description": "The company this lead belongs to",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Status": {
              "description": "The status of the lead",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "StatusId": {
              "format": "int32",
              "description": "The Id of the status of the lead",
              "type": "integer"
            },
            "CashOn": {
              "format": "date-time",
              "description": "The expected sales date",
              "type": "string"
            },
            "ClosingProbability": {
              "format": "int32",
              "description": "The probability of closing the lead, in percent",
              "type": "integer"
            },
            "Currency": {
              "description": "The ISO 4217 code of the currency of the lead volume",
              "maxLength": 3,
              "minLength": 0,
              "type": "string"
            },
            "Volume": {
              "format": "double",
              "description": "The financial volume when closing the lead",
              "type": "number"
            },
            "CompanyId": {
              "format": "int32",
              "description": "The Id of the company this lead belongs to",
              "type": "integer"
            },
            "CustomFields": {
              "description": "The custom fields of this lead",
              "type": "array",
              "items": {
                "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
                "type": "object"
              }
            },
            "ResponsibleUserId": {
              "format": "int32",
              "description": "The user id of the HQ user responsible for this lead",
              "type": "integer"
            },
            "ResponsibleUser": {
              "description": "The HQ user responsible for this lead",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "SalesCampaigns": {
              "description": "List of all Sales Campaigns for this Lead",
              "type": "array",
              "items": {
                "description": "Represents the status a lead is in",
                "type": "object"
              }
            },
            "ContactPersons": {
              "description": "List of all contact persons for this Lead",
              "type": "array",
              "items": {
                "description": "A contact person represents a person that works for a company you do business with. A company can have many contact persons.",
                "type": "object"
              }
            },
            "Subsystems": {
              "description": "The subsystems this lead is associated with",
              "type": "array",
              "items": {
                "description": "A subsystem represents a tenant within a customer's HQ",
                "type": "object"
              }
            },
            "ProjectId": {
              "format": "int32",
              "description": "The project id of the lead",
              "type": "integer"
            },
            "Project": {
              "description": "The project of the lead",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "CompanyId": {
          "format": "int32",
          "description": "The Id of the company that this contact was about",
          "type": "integer"
        },
        "Company": {
          "description": "The company that this contact was about",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The name of the company",
              "type": "string"
            },
            "IndustrialSector": {
              "description": "The company's industrial sector",
              "type": "string"
            },
            "Description": {
              "description": "A longer description of the company",
              "type": "string"
            },
            "IBAN": {
              "description": "The IBAN of the company",
              "type": "string"
            },
            "BIC": {
              "description": "The BIC of the company",
              "type": "string"
            },
            "DebitorNumber": {
              "format": "int32",
              "description": "The company's debitor number",
              "type": "integer"
            },
            "CreditorNumber": {
              "format": "int32",
              "description": "The company's creditor number",
              "type": "integer"
            },
            "TaxId": {
              "description": "The company's tax id",
              "type": "string"
            },
            "DefaultDeliveryConditionId": {
              "format": "int32",
              "description": "The id of the default delivery condition of this company",
              "type": "integer"
            },
            "DefaultDeliveryCondition": {
              "description": "The default delivery condition of this company",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "DefaultPaymentConditionId": {
              "format": "int32",
              "description": "The id of the default payment condition of this company",
              "type": "integer"
            },
            "DefaultPaymentCondition": {
              "description": "The default payment condition of this company",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "DefaultAddress": {
              "description": "The default address of this company",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Addresses": {
              "description": "All addresses of the company",
              "type": "array",
              "items": {
                "description": "A company address represents one of many addresses of companies.",
                "type": "object"
              }
            },
            "ResponsibleUsers": {
              "description": "The list of the responsible users of this company",
              "type": "array",
              "items": {
                "description": "A user represents a user in your HQ system.",
                "type": "object"
              }
            },
            "CustomFields": {
              "description": "The customfields associated with this company",
              "type": "array",
              "items": {
                "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
                "type": "object"
              }
            },
            "CompanyTypes": {
              "description": "The company types associated with this company",
              "type": "array",
              "items": {
                "description": "This is a connection between a company and a company type.\r\n            A company can have more than one type and can have a different company number for each type.",
                "type": "object"
              }
            },
            "Files": {
              "description": "The files associated with this company",
              "type": "array",
              "items": {
                "description": "A file represents a user upload or HQ-generated PDF documents.",
                "type": "object"
              }
            },
            "Subsystems": {
              "description": "The subsystems this company is associated with",
              "type": "array",
              "items": {
                "description": "A subsystem represents a tenant within a customer's HQ",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "ContactPersonId": {
          "format": "int32",
          "description": "The Id of the contact person that this contact was with",
          "type": "integer"
        },
        "ContactPerson": {
          "description": "The contact person that this contact was with",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "FirstName": {
              "description": "The first name of the contact person",
              "type": "string"
            },
            "LastName": {
              "description": "The last name of the contact person",
              "type": "string"
            },
            "Position": {
              "description": "The position of the contact person",
              "type": "string"
            },
            "CompanyId": {
              "format": "int32",
              "description": "The Id of the company that the contact person belongs to",
              "type": "integer"
            },
            "PhoneLandline": {
              "description": "The landline phone number of the contact person",
              "type": "string"
            },
            "PhoneMobile": {
              "description": "The mobile phone number of the contact person",
              "type": "string"
            },
            "Salutation": {
              "description": "The salutation of the contact person",
              "type": "string"
            },
            "Birthdate": {
              "description": "The birth date of the user",
              "type": "string"
            },
            "SalutationForm": {
              "description": "The salutation form of the contact person. The value can be \"Neutral\", \"Formal\", \"Informal\" or null.",
              "enum": [
                "Formal",
                "Informal",
                "Neutral",
                "NotSet"
              ],
              "type": "string"
            },
            "Title": {
              "description": "The academic title of the contact person",
              "type": "string"
            },
            "Language": {
              "description": "The preferred contact language of this contact person, in two-letter ISO-Code, for example 'DE'",
              "type": "string"
            },
            "DefaultAddressId": {
              "format": "int32",
              "description": "The id of the default address of this contact person",
              "type": "integer"
            },
            "Addresses": {
              "description": "All addresses of the contact person",
              "type": "array",
              "items": {
                "description": "A company address represents one of many addresses of companies.",
                "type": "object"
              }
            },
            "DefaultAddress": {
              "description": "The default address of this contact person",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "CustomFields": {
              "description": "The customfields associated with this contact person",
              "type": "array",
              "items": {
                "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
                "type": "object"
              }
            },
            "Company": {
              "description": "The company that the contact person belongs to",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "Files": {
          "description": "The files releated to the contact history",
          "type": "array",
          "items": {
            "description": "A file represents a user upload or HQ-generated PDF documents.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "Name": {
                "description": "The name of the file",
                "type": "string"
              },
              "Size": {
                "format": "double",
                "description": "The size in bytes",
                "type": "number"
              },
              "HasContent": {
                "description": "Returns true if the file has content (was uploaded yet)",
                "type": "boolean"
              },
              "IsDirectory": {
                "description": "Returns true if the file entity is a directory, otherwise false",
                "type": "boolean"
              },
              "DirectoryId": {
                "format": "int32",
                "description": "The id of the parent directory",
                "type": "integer"
              },
              "FileRelations": {
                "description": "List of all relations of a",
                "type": "array"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        },
        "Id": {
          "format": "int32",
          "description": "The unique identifier of this entity",
          "type": "integer"
        },
        "CreatedBy": {
          "format": "int32",
          "description": "The id of the user who created this entity",
          "type": "integer"
        },
        "UpdatedBy": {
          "format": "int32",
          "description": "The id of the last user who modified this entity",
          "type": "integer"
        },
        "CreatedOn": {
          "format": "date-time",
          "description": "The date and time this entity was created, in UTC",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "description": "The last date and time this entity was updated, in UTC",
          "type": "string"
        }
      }
    },
    "ContactPerson": {
      "description": "A contact person represents a person that works for a company you do business with. A company can have many contact persons.",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "FirstName": {
          "description": "The first name of the contact person",
          "type": "string"
        },
        "LastName": {
          "description": "The last name of the contact person",
          "type": "string"
        },
        "Position": {
          "description": "The position of the contact person",
          "type": "string"
        },
        "CompanyId": {
          "format": "int32",
          "description": "The Id of the company that the contact person belongs to",
          "type": "integer"
        },
        "PhoneLandline": {
          "description": "The landline phone number of the contact person",
          "type": "string"
        },
        "PhoneMobile": {
          "description": "The mobile phone number of the contact person",
          "type": "string"
        },
        "Salutation": {
          "description": "The salutation of the contact person",
          "type": "string"
        },
        "Birthdate": {
          "description": "The birth date of the user",
          "type": "string"
        },
        "SalutationForm": {
          "description": "The salutation form of the contact person. The value can be \"Neutral\", \"Formal\", \"Informal\" or null.",
          "enum": [
            "Formal",
            "Informal",
            "Neutral",
            "NotSet"
          ],
          "type": "string"
        },
        "Title": {
          "description": "The academic title of the contact person",
          "type": "string"
        },
        "Language": {
          "description": "The preferred contact language of this contact person, in two-letter ISO-Code, for example 'DE'",
          "type": "string"
        },
        "DefaultAddressId": {
          "format": "int32",
          "description": "The id of the default address of this contact person",
          "type": "integer"
        },
        "Addresses": {
          "description": "All addresses of the contact person",
          "type": "array",
          "items": {
            "description": "A company address represents one of many addresses of companies.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "City": {
                "description": "The city of this address",
                "type": "string"
              },
              "Street": {
                "description": "The street name of this address",
                "type": "string"
              },
              "HouseNumber": {
                "description": "The house number of this address",
                "type": "string"
              },
              "ZipCode": {
                "description": "The ZIP or Postal Code of this address",
                "type": "string"
              },
              "AddressLine2": {
                "description": "The secondary address line, c/o details, etc.",
                "type": "string"
              },
              "Description": {
                "description": "The description of this address",
                "type": "string"
              },
              "Country": {
                "description": "The ISO 3166-1 alpha-2 country code of this address",
                "type": "string"
              },
              "Phone": {
                "description": "The phone number of this address",
                "type": "string"
              },
              "Fax": {
                "description": "The fax number of this address",
                "type": "string"
              },
              "Email": {
                "description": "The email address of this address",
                "type": "string"
              },
              "Website": {
                "description": "The website of this address",
                "type": "string"
              },
              "IsStandard": {
                "description": "Whether this address is the standard address of a company",
                "type": "boolean"
              },
              "DefaultForDocumentType": {
                "description": "The document type this address should be used as a standard for",
                "type": "string"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        },
        "DefaultAddress": {
          "description": "The default address of this contact person",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "City": {
              "description": "The city of this address",
              "type": "string"
            },
            "Street": {
              "description": "The street name of this address",
              "type": "string"
            },
            "HouseNumber": {
              "description": "The house number of this address",
              "type": "string"
            },
            "ZipCode": {
              "description": "The ZIP or Postal Code of this address",
              "type": "string"
            },
            "AddressLine2": {
              "description": "The secondary address line, c/o details, etc.",
              "type": "string"
            },
            "Description": {
              "description": "The description of this address",
              "type": "string"
            },
            "Country": {
              "description": "The ISO 3166-1 alpha-2 country code of this address",
              "type": "string"
            },
            "Phone": {
              "description": "The phone number of this address",
              "type": "string"
            },
            "Fax": {
              "description": "The fax number of this address",
              "type": "string"
            },
            "Email": {
              "description": "The email address of this address",
              "type": "string"
            },
            "Website": {
              "description": "The website of this address",
              "type": "string"
            },
            "IsStandard": {
              "description": "Whether this address is the standard address of a company",
              "type": "boolean"
            },
            "DefaultForDocumentType": {
              "description": "The document type this address should be used as a standard for",
              "enum": [
                "Quotation",
                "Invoice",
                "DeliveryNote",
                "Warning",
                "Reminder",
                "Cancellation",
                "CreditNote",
                "Confirmation",
                "IncomingInvoice",
                "Undefined",
                "Order",
                "PriceInquery",
                "Letter",
                "Minute",
                "Akonto"
              ],
              "type": "string"
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "CustomFields": {
          "description": "The customfields associated with this contact person",
          "type": "array",
          "items": {
            "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
            "required": [
              "Name",
              "Id"
            ],
            "type": "object",
            "properties": {
              "Name": {
                "description": "The name of this custom field",
                "type": "string"
              },
              "Value": {
                "description": "The value of this custom field",
                "type": "string"
              },
              "Type": {
                "description": "The type of this custom field",
                "type": "string"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        },
        "Company": {
          "description": "The company that the contact person belongs to",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The name of the company",
              "type": "string"
            },
            "IndustrialSector": {
              "description": "The company's industrial sector",
              "type": "string"
            },
            "Description": {
              "description": "A longer description of the company",
              "type": "string"
            },
            "IBAN": {
              "description": "The IBAN of the company",
              "type": "string"
            },
            "BIC": {
              "description": "The BIC of the company",
              "type": "string"
            },
            "DebitorNumber": {
              "format": "int32",
              "description": "The company's debitor number",
              "type": "integer"
            },
            "CreditorNumber": {
              "format": "int32",
              "description": "The company's creditor number",
              "type": "integer"
            },
            "TaxId": {
              "description": "The company's tax id",
              "type": "string"
            },
            "DefaultDeliveryConditionId": {
              "format": "int32",
              "description": "The id of the default delivery condition of this company",
              "type": "integer"
            },
            "DefaultDeliveryCondition": {
              "description": "The default delivery condition of this company",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "DefaultPaymentConditionId": {
              "format": "int32",
              "description": "The id of the default payment condition of this company",
              "type": "integer"
            },
            "DefaultPaymentCondition": {
              "description": "The default payment condition of this company",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "DefaultAddress": {
              "description": "The default address of this company",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Addresses": {
              "description": "All addresses of the company",
              "type": "array",
              "items": {
                "description": "A company address represents one of many addresses of companies.",
                "type": "object"
              }
            },
            "ResponsibleUsers": {
              "description": "The list of the responsible users of this company",
              "type": "array",
              "items": {
                "description": "A user represents a user in your HQ system.",
                "type": "object"
              }
            },
            "CustomFields": {
              "description": "The customfields associated with this company",
              "type": "array",
              "items": {
                "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
                "type": "object"
              }
            },
            "CompanyTypes": {
              "description": "The company types associated with this company",
              "type": "array",
              "items": {
                "description": "This is a connection between a company and a company type.\r\n            A company can have more than one type and can have a different company number for each type.",
                "type": "object"
              }
            },
            "Files": {
              "description": "The files associated with this company",
              "type": "array",
              "items": {
                "description": "A file represents a user upload or HQ-generated PDF documents.",
                "type": "object"
              }
            },
            "Subsystems": {
              "description": "The subsystems this company is associated with",
              "type": "array",
              "items": {
                "description": "A subsystem represents a tenant within a customer's HQ",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "Id": {
          "format": "int32",
          "description": "The unique identifier of this entity",
          "type": "integer"
        },
        "CreatedBy": {
          "format": "int32",
          "description": "The id of the user who created this entity",
          "type": "integer"
        },
        "UpdatedBy": {
          "format": "int32",
          "description": "The id of the last user who modified this entity",
          "type": "integer"
        },
        "CreatedOn": {
          "format": "date-time",
          "description": "The date and time this entity was created, in UTC",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "description": "The last date and time this entity was updated, in UTC",
          "type": "string"
        }
      }
    },
    "ProjectBudget": {
      "description": "The project budget for a project",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "ProjectId": {
          "format": "int32",
          "type": "integer"
        },
        "FinancesCostTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "Costs": {
          "format": "double",
          "type": "number"
        },
        "Purpose": {
          "type": "string"
        },
        "Currency": {
          "type": "string"
        },
        "FinancesCostType": {
          "description": "The linked cost type. This is only relevant for assigned tasks/reportings. Incoming invoices have their own cost type on position level",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The name of the cost type",
              "type": "string"
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "Project": {
          "description": "The project which the budget belongs to",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Number": {
              "description": "The number of the project",
              "type": "string"
            },
            "Name": {
              "description": "The name of the project",
              "type": "string"
            },
            "Status": {
              "description": "The current status description of the project",
              "type": "string"
            },
            "PlannedStartDate": {
              "format": "date-time",
              "description": "The planned start date of the first task of the project",
              "type": "string"
            },
            "PlannedEndDate": {
              "format": "date-time",
              "description": "The planned end date of the last task of the project",
              "type": "string"
            },
            "StartDate": {
              "format": "date-time",
              "description": "The planned start date of the project",
              "type": "string"
            },
            "EndDate": {
              "format": "date-time",
              "description": "The planned end date of the project",
              "type": "string"
            },
            "AworkSyncId": {
              "description": "The Id from the linked awork project",
              "type": "string"
            },
            "Subsystems": {
              "description": "The subsystems this project is associated with",
              "type": "array",
              "items": {
                "description": "A subsystem represents a tenant within a customer's HQ",
                "type": "object"
              }
            },
            "ProjectTemplateId": {
              "format": "int32",
              "description": "The id of the project template",
              "type": "integer"
            },
            "ProjectTemplate": {
              "description": "The template of this project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "ProjectStatusId": {
              "format": "int32",
              "description": "The id of the project status",
              "type": "integer"
            },
            "CompanyId": {
              "format": "int32",
              "description": "The id of the company",
              "type": "integer"
            },
            "LeadId": {
              "format": "int32",
              "description": "The Id of the lead",
              "type": "integer"
            },
            "InvoiceAddressId": {
              "format": "int32",
              "description": "Id of the address for invoices of this project",
              "type": "integer"
            },
            "DeliveryAddressId": {
              "format": "int32",
              "description": "Id of the address for the deliveries of this project",
              "type": "integer"
            },
            "ResponsibleUserId": {
              "format": "int32",
              "description": "The id of the user which is responsible for this (internal) project",
              "type": "integer"
            },
            "ProjectStatus": {
              "description": "The status of the project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Company": {
              "description": "The company this project is associated with",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "ResponsibleUser": {
              "description": "The user which is responsible for this (internal) project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "DeliveryAddress": {
              "description": "The address for delvieries of this project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "InvoiceAddress": {
              "description": "The address for delvieries of this project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Lead": {
              "description": "The lead of the project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "CustomFields": {
              "description": "The custom fields of this project",
              "type": "array",
              "items": {
                "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
                "type": "object"
              }
            },
            "Reportings": {
              "description": "The user reportings of this project",
              "type": "array",
              "items": {
                "description": "A user reporting represents a logged time of a user on a specific task in HQ.",
                "type": "object"
              }
            },
            "Files": {
              "description": "The files of this project",
              "type": "array",
              "items": {
                "description": "A file represents a user upload or HQ-generated PDF documents.",
                "type": "object"
              }
            },
            "Members": {
              "description": "The members of this project",
              "type": "array",
              "items": {
                "description": "A project member links a user to a project. It includes the project role and the charge rates\r\n            for the link.",
                "type": "object"
              }
            },
            "ContactHistories": {
              "description": "Contact histories linked to this project.",
              "type": "array",
              "items": {
                "description": "The contact history represents any contact you had with a contact person. For example, any meeting, phone call or email can be a contact history entry.",
                "type": "object"
              }
            },
            "ContactPersons": {
              "description": "Contact persons linked to this project.",
              "type": "array",
              "items": {
                "description": "A contact person represents a person that works for a company you do business with. A company can have many contact persons.",
                "type": "object"
              }
            },
            "Articles": {
              "description": "All articles linked to the project",
              "type": "array",
              "items": {
                "description": "An article is a stock item that your company sells, for example a digital camera. \r\n            An article can also be a service or activity that your company performs, for example a digital design. \r\n            Articles can be used to create positions on invoices or quotations, among others.",
                "type": "object"
              }
            },
            "ProjectBudgets": {
              "description": "All articles linked to the project",
              "type": "array",
              "items": {
                "description": "The project budget for a project",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "Id": {
          "format": "int32",
          "description": "The unique identifier of this entity",
          "type": "integer"
        },
        "CreatedBy": {
          "format": "int32",
          "description": "The id of the user who created this entity",
          "type": "integer"
        },
        "UpdatedBy": {
          "format": "int32",
          "description": "The id of the last user who modified this entity",
          "type": "integer"
        },
        "CreatedOn": {
          "format": "date-time",
          "description": "The date and time this entity was created, in UTC",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "description": "The last date and time this entity was updated, in UTC",
          "type": "string"
        }
      }
    },
    "DocumentCondition": {
      "description": "A document condition is either a delivery condition or a payment condition. \r\n            These conditions contain information about legal texts and due dates that should be displayed on the document.",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "Name": {
          "description": "The name of document condition",
          "type": "string"
        },
        "Text": {
          "description": "The text of condition",
          "type": "string"
        },
        "DisplayText": {
          "description": "The text with replaced due days",
          "type": "string"
        },
        "DueInDays": {
          "format": "int32",
          "description": "The payment due date in days",
          "type": "integer"
        },
        "Type": {
          "description": "The type of this condition",
          "enum": [
            "PaymentConditions",
            "DeliveryConditions",
            "NotDefined"
          ],
          "type": "string"
        },
        "WarningDays": {
          "format": "int32",
          "description": "The payment due date in days of a warning document",
          "type": "integer"
        },
        "ReminderDays": {
          "format": "int32",
          "description": "The payment due date in days of a reminder document",
          "type": "integer"
        },
        "Language": {
          "description": "The language of the condition, as two-letter ISO-Code, for example 'DE'",
          "type": "string"
        },
        "DocumentEarlyPayments": {
          "description": "The list of early payment conditions that belong to this document condition (i.e. Skonto)",
          "type": "array",
          "items": {
            "description": "The document early payment entry represents a rule in days before which a discount is granted on an invoice.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "CashDiscount": {
                "format": "double",
                "description": "The value of discount granted",
                "type": "number"
              },
              "PaymentPeriod": {
                "format": "int32",
                "description": "The days this early payment discount is valid",
                "type": "integer"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        },
        "Id": {
          "format": "int32",
          "description": "The unique identifier of this entity",
          "type": "integer"
        },
        "CreatedBy": {
          "format": "int32",
          "description": "The id of the user who created this entity",
          "type": "integer"
        },
        "UpdatedBy": {
          "format": "int32",
          "description": "The id of the last user who modified this entity",
          "type": "integer"
        },
        "CreatedOn": {
          "format": "date-time",
          "description": "The date and time this entity was created, in UTC",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "description": "The last date and time this entity was updated, in UTC",
          "type": "string"
        }
      }
    },
    "CompanyTypeOfCompany": {
      "description": "This is a connection between a company and a company type.\r\n            A company can have more than one type and can have a different company number for each type.",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "Name": {
          "description": "The name of this company type",
          "type": "string"
        },
        "Number": {
          "description": "The number of the company for this type",
          "type": "string"
        },
        "CompanyId": {
          "format": "int32",
          "description": "The Id of the company",
          "type": "integer"
        },
        "Id": {
          "format": "int32",
          "description": "The unique identifier of this entity",
          "type": "integer"
        },
        "CreatedBy": {
          "format": "int32",
          "description": "The id of the user who created this entity",
          "type": "integer"
        },
        "UpdatedBy": {
          "format": "int32",
          "description": "The id of the last user who modified this entity",
          "type": "integer"
        },
        "CreatedOn": {
          "format": "date-time",
          "description": "The date and time this entity was created, in UTC",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "description": "The last date and time this entity was updated, in UTC",
          "type": "string"
        }
      }
    },
    "UserWorkingHours": {
      "description": "The weekly working hours user",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "Weekday": {
          "description": "The name of the weekday",
          "enum": [
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday",
            "NotSet"
          ],
          "type": "string"
        },
        "StartTime": {
          "format": "double",
          "description": "The start time of this weekday",
          "type": "number"
        },
        "EndTime": {
          "format": "double",
          "description": "The end time of this weekday",
          "type": "number"
        },
        "Duration": {
          "format": "double",
          "description": "The duration of this weekday",
          "type": "number"
        },
        "Id": {
          "format": "int32",
          "description": "The unique identifier of this entity",
          "type": "integer"
        },
        "CreatedBy": {
          "format": "int32",
          "description": "The id of the user who created this entity",
          "type": "integer"
        },
        "UpdatedBy": {
          "format": "int32",
          "description": "The id of the last user who modified this entity",
          "type": "integer"
        },
        "CreatedOn": {
          "format": "date-time",
          "description": "The date and time this entity was created, in UTC",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "description": "The last date and time this entity was updated, in UTC",
          "type": "string"
        }
      }
    },
    "UserGroup": {
      "description": "The user groups a user is in.",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "Name": {
          "description": "The  name of the user group",
          "type": "string"
        },
        "Description": {
          "description": "The Description of the user group",
          "type": "string"
        },
        "RightLevel": {
          "format": "int32",
          "description": "The right level of the user group",
          "type": "integer"
        },
        "Id": {
          "format": "int32",
          "description": "The unique identifier of this entity",
          "type": "integer"
        },
        "CreatedBy": {
          "format": "int32",
          "description": "The id of the user who created this entity",
          "type": "integer"
        },
        "UpdatedBy": {
          "format": "int32",
          "description": "The id of the last user who modified this entity",
          "type": "integer"
        },
        "CreatedOn": {
          "format": "date-time",
          "description": "The date and time this entity was created, in UTC",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "description": "The last date and time this entity was updated, in UTC",
          "type": "string"
        }
      }
    },
    "ResourceGroup": {
      "description": "The resource group a user is in.",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "Name": {
          "description": "The  name of the resource group",
          "type": "string"
        },
        "Description": {
          "description": "The Description of the resource group",
          "type": "string"
        },
        "IsDefaultGroup": {
          "description": "Is the resource group the default group",
          "type": "boolean"
        },
        "Id": {
          "format": "int32",
          "description": "The unique identifier of this entity",
          "type": "integer"
        },
        "CreatedBy": {
          "format": "int32",
          "description": "The id of the user who created this entity",
          "type": "integer"
        },
        "UpdatedBy": {
          "format": "int32",
          "description": "The id of the last user who modified this entity",
          "type": "integer"
        },
        "CreatedOn": {
          "format": "date-time",
          "description": "The date and time this entity was created, in UTC",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "description": "The last date and time this entity was updated, in UTC",
          "type": "string"
        }
      }
    },
    "UserAbsence": {
      "description": "An absence represents a time of absence from work, for example holidays or sickness. \r\n            Absences can be either paid or unpaid.",
      "required": [
        "Start",
        "End",
        "UserId",
        "Id"
      ],
      "type": "object",
      "properties": {
        "Start": {
          "format": "date-time",
          "description": "The start date or date time of this absence, depending on the type. In ISO 8601 format.",
          "type": "string"
        },
        "End": {
          "format": "date-time",
          "description": "The end date or date time of this absence, depending on the type. In ISO 8601 format.",
          "type": "string"
        },
        "Type": {
          "description": "The type of this absence",
          "enum": [
            "Vacation",
            "PrivateAbsence",
            "CompanyAbsence",
            "SickLeave",
            "SickLeaveUnpaid",
            "OvertimeCompensation",
            "ProfessionalEducation",
            "TradeSchool",
            "SpecialLeave",
            "ParentalLeave",
            "VacationUnpaid",
            "RemoteWork",
            "ChildSick",
            "MaternityLeave"
          ],
          "type": "string"
        },
        "Note": {
          "description": "The user-provided note for this absence",
          "type": "string"
        },
        "UserId": {
          "format": "int32",
          "description": "The id of the user this absence is for",
          "type": "integer"
        },
        "User": {
          "description": "The user this absence is for",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "FirstName": {
              "description": "The first name of the user",
              "type": "string"
            },
            "LastName": {
              "description": "The last name of the user",
              "type": "string"
            },
            "UserName": {
              "description": "The user's user name in HQ",
              "type": "string"
            },
            "EMailWork": {
              "description": "The work email of the user",
              "type": "string"
            },
            "Salutation": {
              "description": "The salutation of the user, i.e. Mrs. or Mr.",
              "type": "string"
            },
            "Title": {
              "description": "The professional title of the user",
              "type": "string"
            },
            "EmployeeNumber": {
              "description": "The employee number of the user",
              "type": "string"
            },
            "Department": {
              "description": "The department of the user",
              "type": "string"
            },
            "BirthDate": {
              "format": "date-time",
              "description": "The birth date of the user",
              "type": "string"
            },
            "FederalState": {
              "description": "The federal state of the user",
              "type": "string"
            },
            "Country": {
              "description": "The country of the user",
              "type": "string"
            },
            "BasicLoadInHours": {
              "format": "double",
              "description": "The basic load in hours of the user",
              "type": "number"
            },
            "EntryDate": {
              "format": "date-time",
              "description": "The entry date of the user",
              "type": "string"
            },
            "LeavingDate": {
              "format": "date-time",
              "description": "The leaving date of the user",
              "type": "string"
            },
            "PhoneLandlinePrivate": {
              "description": "The private phone number of the user - landline",
              "type": "string"
            },
            "PhoneLandlineWork": {
              "description": "The work phone number of the user - landline",
              "type": "string"
            },
            "PhoneMobilePrivate": {
              "description": "The private phone number of the user - mobile",
              "type": "string"
            },
            "PhoneMobileWork": {
              "description": "The work phon number of the user - mobile",
              "type": "string"
            },
            "UserWorkingHours": {
              "description": "The custom fields of the user",
              "type": "array",
              "items": {
                "description": "The weekly working hours user",
                "type": "object"
              }
            },
            "CustomFields": {
              "description": "The custom fields of the user",
              "type": "array",
              "items": {
                "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
                "type": "object"
              }
            },
            "UserGroups": {
              "description": "The user groups of the user",
              "type": "array",
              "items": {
                "description": "The user groups a user is in.",
                "type": "object"
              }
            },
            "ResourceGroup": {
              "description": "The resource group of the user",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Absences": {
              "description": "The absences of the user",
              "type": "array",
              "items": {
                "description": "An absence represents a time of absence from work, for example holidays or sickness. \r\n            Absences can be either paid or unpaid.",
                "type": "object"
              }
            },
            "Assignments": {
              "description": "The tasks the user is assigned to",
              "type": "array",
              "items": {
                "description": "The assignment of a user to a task",
                "type": "object"
              }
            },
            "Reportings": {
              "description": "The reportings of this user",
              "type": "array",
              "items": {
                "description": "A user reporting represents a logged time of a user on a specific task in HQ.",
                "type": "object"
              }
            },
            "ProjectMembers": {
              "description": "The allocations of this user to projects",
              "type": "array",
              "items": {
                "description": "A project member links a user to a project. It includes the project role and the charge rates\r\n            for the link.",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "IsApproved": {
          "description": "Whether this absence was approved",
          "type": "boolean"
        },
        "MissedDays": {
          "format": "double",
          "description": "The number of working days missed by this absence. Takes overlapping other absences into account.\r\n            Read-only!\r\n            This value is only applicable for full- and half-day absences (sick leave and vacation)",
          "type": "number"
        },
        "Id": {
          "format": "int32",
          "description": "The unique identifier of this entity",
          "type": "integer"
        },
        "CreatedBy": {
          "format": "int32",
          "description": "The id of the user who created this entity",
          "type": "integer"
        },
        "UpdatedBy": {
          "format": "int32",
          "description": "The id of the last user who modified this entity",
          "type": "integer"
        },
        "CreatedOn": {
          "format": "date-time",
          "description": "The date and time this entity was created, in UTC",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "description": "The last date and time this entity was updated, in UTC",
          "type": "string"
        }
      }
    },
    "TaskAssignment": {
      "description": "The assignment of a user to a task",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "AssignmentUnit": {
          "description": "The type of the assignment value. Percentage not allowed",
          "enum": [
            "Percent",
            "Hours",
            "Days",
            "Minutes",
            "Weeks",
            "NotSet"
          ],
          "type": "string"
        },
        "AssignmentValue": {
          "format": "double",
          "description": "The value of the assignment. The value is stored in the unit specified in AssignmentUnit",
          "type": "number"
        },
        "TaskId": {
          "format": "int32",
          "description": "The id of the task the assignment is for",
          "type": "integer"
        },
        "Task": {
          "description": "The task the assignment is for",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The name of the task.",
              "type": "string"
            },
            "Assignments": {
              "description": "The assignments of users to a specific task.",
              "type": "array",
              "items": {
                "description": "The assignment of a user to a task",
                "type": "object"
              }
            },
            "Order": {
              "format": "int32",
              "description": "The order of the task within one project.",
              "type": "integer"
            },
            "ParentId": {
              "format": "int32",
              "description": "The Id of the parent task of this task, used for building a hierarchy.",
              "type": "integer"
            },
            "ProjectId": {
              "format": "int32",
              "description": "The Id of the project this task belongs to.",
              "type": "integer"
            },
            "Project": {
              "description": "The project this task belongs to.",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "IsDone": {
              "description": "Whether this task is open or done.",
              "type": "boolean"
            },
            "PlannedEffort": {
              "format": "double",
              "description": "The planned effort, in  hours.",
              "type": "number"
            },
            "PercentDone": {
              "format": "int32",
              "description": "The done value of the task in percent",
              "type": "integer"
            },
            "Description": {
              "description": "The description of the task.",
              "type": "string"
            },
            "StartOn": {
              "format": "date-time",
              "description": "The start time of the task.",
              "type": "string"
            },
            "EndOn": {
              "format": "date-time",
              "description": "The end time of the task.",
              "type": "string"
            },
            "TaskTypeId": {
              "format": "int32",
              "description": "The Id of the task type.",
              "type": "integer"
            },
            "TaskType": {
              "description": "The type of the task.",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "TaskTypeStatusId": {
              "format": "int32",
              "description": "The id of the status of the task.",
              "type": "integer"
            },
            "TaskTypeStatus": {
              "description": "The status of the task.",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Dependencies": {
              "description": "The dependencies to another task.",
              "type": "array",
              "items": {
                "description": "A task dependency represents a dependency between two tasks, where one task needs to be finished before the other can be started.",
                "type": "object"
              }
            },
            "UserReportings": {
              "description": "The reportings of the task",
              "type": "array",
              "items": {
                "description": "A user reporting represents a logged time of a user on a specific task in HQ.",
                "type": "object"
              }
            },
            "IsAppointment": {
              "description": "Checked if the task is a appointment",
              "type": "boolean"
            },
            "SyncId": {
              "description": "The external id of the task for e.g sync clients.",
              "type": "string"
            },
            "Sync": {
              "description": "Whether the task should be synced to the configured sync clients.",
              "type": "boolean"
            },
            "JiraProjectName": {
              "description": "The short name of the linked JIRA project.",
              "type": "string"
            },
            "Remaining": {
              "format": "double",
              "description": "The remainig value of the task in hours.",
              "type": "number"
            },
            "ProjectBudgetId": {
              "format": "int32",
              "description": "The id of the project budget of the task.",
              "type": "integer"
            },
            "ProjectBudget": {
              "description": "The project budget of the task.",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "ChargeType": {
              "description": "The charge type of the task",
              "enum": [
                "Fixed",
                "Variable",
                "Capped",
                "NotChargeable",
                "NotSet"
              ],
              "type": "string"
            },
            "ChargeValue": {
              "format": "double",
              "description": "The charge value of the task",
              "type": "number"
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "UserId": {
          "format": "int32",
          "description": "The id of the user assigned to the task",
          "type": "integer"
        },
        "User": {
          "description": "The user assigned to the task",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "FirstName": {
              "description": "The first name of the user",
              "type": "string"
            },
            "LastName": {
              "description": "The last name of the user",
              "type": "string"
            },
            "UserName": {
              "description": "The user's user name in HQ",
              "type": "string"
            },
            "EMailWork": {
              "description": "The work email of the user",
              "type": "string"
            },
            "Salutation": {
              "description": "The salutation of the user, i.e. Mrs. or Mr.",
              "type": "string"
            },
            "Title": {
              "description": "The professional title of the user",
              "type": "string"
            },
            "EmployeeNumber": {
              "description": "The employee number of the user",
              "type": "string"
            },
            "Department": {
              "description": "The department of the user",
              "type": "string"
            },
            "BirthDate": {
              "format": "date-time",
              "description": "The birth date of the user",
              "type": "string"
            },
            "FederalState": {
              "description": "The federal state of the user",
              "type": "string"
            },
            "Country": {
              "description": "The country of the user",
              "type": "string"
            },
            "BasicLoadInHours": {
              "format": "double",
              "description": "The basic load in hours of the user",
              "type": "number"
            },
            "EntryDate": {
              "format": "date-time",
              "description": "The entry date of the user",
              "type": "string"
            },
            "LeavingDate": {
              "format": "date-time",
              "description": "The leaving date of the user",
              "type": "string"
            },
            "PhoneLandlinePrivate": {
              "description": "The private phone number of the user - landline",
              "type": "string"
            },
            "PhoneLandlineWork": {
              "description": "The work phone number of the user - landline",
              "type": "string"
            },
            "PhoneMobilePrivate": {
              "description": "The private phone number of the user - mobile",
              "type": "string"
            },
            "PhoneMobileWork": {
              "description": "The work phon number of the user - mobile",
              "type": "string"
            },
            "UserWorkingHours": {
              "description": "The custom fields of the user",
              "type": "array",
              "items": {
                "description": "The weekly working hours user",
                "type": "object"
              }
            },
            "CustomFields": {
              "description": "The custom fields of the user",
              "type": "array",
              "items": {
                "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
                "type": "object"
              }
            },
            "UserGroups": {
              "description": "The user groups of the user",
              "type": "array",
              "items": {
                "description": "The user groups a user is in.",
                "type": "object"
              }
            },
            "ResourceGroup": {
              "description": "The resource group of the user",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Absences": {
              "description": "The absences of the user",
              "type": "array",
              "items": {
                "description": "An absence represents a time of absence from work, for example holidays or sickness. \r\n            Absences can be either paid or unpaid.",
                "type": "object"
              }
            },
            "Assignments": {
              "description": "The tasks the user is assigned to",
              "type": "array",
              "items": {
                "description": "The assignment of a user to a task",
                "type": "object"
              }
            },
            "Reportings": {
              "description": "The reportings of this user",
              "type": "array",
              "items": {
                "description": "A user reporting represents a logged time of a user on a specific task in HQ.",
                "type": "object"
              }
            },
            "ProjectMembers": {
              "description": "The allocations of this user to projects",
              "type": "array",
              "items": {
                "description": "A project member links a user to a project. It includes the project role and the charge rates\r\n            for the link.",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "ResourceId": {
          "format": "int32",
          "description": "The id of the resource assigned to the task",
          "type": "integer"
        },
        "Resource": {
          "description": "The resource assigned to the task",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "type": "string"
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "Id": {
          "format": "int32",
          "description": "The unique identifier of this entity",
          "type": "integer"
        },
        "CreatedBy": {
          "format": "int32",
          "description": "The id of the user who created this entity",
          "type": "integer"
        },
        "UpdatedBy": {
          "format": "int32",
          "description": "The id of the last user who modified this entity",
          "type": "integer"
        },
        "CreatedOn": {
          "format": "date-time",
          "description": "The date and time this entity was created, in UTC",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "description": "The last date and time this entity was updated, in UTC",
          "type": "string"
        }
      }
    },
    "LeadStatus": {
      "description": "Represents the status a lead is in",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "Name": {
          "description": "The name of the status",
          "type": "string"
        },
        "Type": {
          "description": "Whether this lead status is open, successful or lost",
          "enum": [
            "NotSet",
            "Successful",
            "Unsuccessful",
            "Open"
          ],
          "type": "string"
        },
        "Id": {
          "format": "int32",
          "description": "The unique identifier of this entity",
          "type": "integer"
        },
        "CreatedBy": {
          "format": "int32",
          "description": "The id of the user who created this entity",
          "type": "integer"
        },
        "UpdatedBy": {
          "format": "int32",
          "description": "The id of the last user who modified this entity",
          "type": "integer"
        },
        "CreatedOn": {
          "format": "date-time",
          "description": "The date and time this entity was created, in UTC",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "description": "The last date and time this entity was updated, in UTC",
          "type": "string"
        }
      }
    },
    "LeadSalesCampaign": {
      "description": "Represents the status a lead is in",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "Name": {
          "description": "The name of the status",
          "type": "string"
        },
        "Id": {
          "format": "int32",
          "description": "The unique identifier of this entity",
          "type": "integer"
        },
        "CreatedBy": {
          "format": "int32",
          "description": "The id of the user who created this entity",
          "type": "integer"
        },
        "UpdatedBy": {
          "format": "int32",
          "description": "The id of the last user who modified this entity",
          "type": "integer"
        },
        "CreatedOn": {
          "format": "date-time",
          "description": "The date and time this entity was created, in UTC",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "description": "The last date and time this entity was updated, in UTC",
          "type": "string"
        }
      }
    },
    "Task": {
      "description": "A task represents a To-Do or other forms of tasks, usually of a project.",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "Name": {
          "description": "The name of the task.",
          "type": "string"
        },
        "Assignments": {
          "description": "The assignments of users to a specific task.",
          "type": "array",
          "items": {
            "description": "The assignment of a user to a task",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "AssignmentUnit": {
                "description": "The type of the assignment value. Percentage not allowed",
                "type": "string"
              },
              "AssignmentValue": {
                "format": "double",
                "description": "The value of the assignment. The value is stored in the unit specified in AssignmentUnit",
                "type": "number"
              },
              "TaskId": {
                "format": "int32",
                "description": "The id of the task the assignment is for",
                "type": "integer"
              },
              "Task": {
                "description": "The task the assignment is for",
                "type": "object"
              },
              "UserId": {
                "format": "int32",
                "description": "The id of the user assigned to the task",
                "type": "integer"
              },
              "User": {
                "description": "The user assigned to the task",
                "type": "object"
              },
              "ResourceId": {
                "format": "int32",
                "description": "The id of the resource assigned to the task",
                "type": "integer"
              },
              "Resource": {
                "description": "The resource assigned to the task",
                "type": "object"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        },
        "Order": {
          "format": "int32",
          "description": "The order of the task within one project.",
          "type": "integer"
        },
        "ParentId": {
          "format": "int32",
          "description": "The Id of the parent task of this task, used for building a hierarchy.",
          "type": "integer"
        },
        "ProjectId": {
          "format": "int32",
          "description": "The Id of the project this task belongs to.",
          "type": "integer"
        },
        "Project": {
          "description": "The project this task belongs to.",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Number": {
              "description": "The number of the project",
              "type": "string"
            },
            "Name": {
              "description": "The name of the project",
              "type": "string"
            },
            "Status": {
              "description": "The current status description of the project",
              "type": "string"
            },
            "PlannedStartDate": {
              "format": "date-time",
              "description": "The planned start date of the first task of the project",
              "type": "string"
            },
            "PlannedEndDate": {
              "format": "date-time",
              "description": "The planned end date of the last task of the project",
              "type": "string"
            },
            "StartDate": {
              "format": "date-time",
              "description": "The planned start date of the project",
              "type": "string"
            },
            "EndDate": {
              "format": "date-time",
              "description": "The planned end date of the project",
              "type": "string"
            },
            "AworkSyncId": {
              "description": "The Id from the linked awork project",
              "type": "string"
            },
            "Subsystems": {
              "description": "The subsystems this project is associated with",
              "type": "array",
              "items": {
                "description": "A subsystem represents a tenant within a customer's HQ",
                "type": "object"
              }
            },
            "ProjectTemplateId": {
              "format": "int32",
              "description": "The id of the project template",
              "type": "integer"
            },
            "ProjectTemplate": {
              "description": "The template of this project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "ProjectStatusId": {
              "format": "int32",
              "description": "The id of the project status",
              "type": "integer"
            },
            "CompanyId": {
              "format": "int32",
              "description": "The id of the company",
              "type": "integer"
            },
            "LeadId": {
              "format": "int32",
              "description": "The Id of the lead",
              "type": "integer"
            },
            "InvoiceAddressId": {
              "format": "int32",
              "description": "Id of the address for invoices of this project",
              "type": "integer"
            },
            "DeliveryAddressId": {
              "format": "int32",
              "description": "Id of the address for the deliveries of this project",
              "type": "integer"
            },
            "ResponsibleUserId": {
              "format": "int32",
              "description": "The id of the user which is responsible for this (internal) project",
              "type": "integer"
            },
            "ProjectStatus": {
              "description": "The status of the project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Company": {
              "description": "The company this project is associated with",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "ResponsibleUser": {
              "description": "The user which is responsible for this (internal) project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "DeliveryAddress": {
              "description": "The address for delvieries of this project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "InvoiceAddress": {
              "description": "The address for delvieries of this project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Lead": {
              "description": "The lead of the project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "CustomFields": {
              "description": "The custom fields of this project",
              "type": "array",
              "items": {
                "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
                "type": "object"
              }
            },
            "Reportings": {
              "description": "The user reportings of this project",
              "type": "array",
              "items": {
                "description": "A user reporting represents a logged time of a user on a specific task in HQ.",
                "type": "object"
              }
            },
            "Files": {
              "description": "The files of this project",
              "type": "array",
              "items": {
                "description": "A file represents a user upload or HQ-generated PDF documents.",
                "type": "object"
              }
            },
            "Members": {
              "description": "The members of this project",
              "type": "array",
              "items": {
                "description": "A project member links a user to a project. It includes the project role and the charge rates\r\n            for the link.",
                "type": "object"
              }
            },
            "ContactHistories": {
              "description": "Contact histories linked to this project.",
              "type": "array",
              "items": {
                "description": "The contact history represents any contact you had with a contact person. For example, any meeting, phone call or email can be a contact history entry.",
                "type": "object"
              }
            },
            "ContactPersons": {
              "description": "Contact persons linked to this project.",
              "type": "array",
              "items": {
                "description": "A contact person represents a person that works for a company you do business with. A company can have many contact persons.",
                "type": "object"
              }
            },
            "Articles": {
              "description": "All articles linked to the project",
              "type": "array",
              "items": {
                "description": "An article is a stock item that your company sells, for example a digital camera. \r\n            An article can also be a service or activity that your company performs, for example a digital design. \r\n            Articles can be used to create positions on invoices or quotations, among others.",
                "type": "object"
              }
            },
            "ProjectBudgets": {
              "description": "All articles linked to the project",
              "type": "array",
              "items": {
                "description": "The project budget for a project",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "IsDone": {
          "description": "Whether this task is open or done.",
          "type": "boolean"
        },
        "PlannedEffort": {
          "format": "double",
          "description": "The planned effort, in  hours.",
          "type": "number"
        },
        "PercentDone": {
          "format": "int32",
          "description": "The done value of the task in percent",
          "type": "integer"
        },
        "Description": {
          "description": "The description of the task.",
          "type": "string"
        },
        "StartOn": {
          "format": "date-time",
          "description": "The start time of the task.",
          "type": "string"
        },
        "EndOn": {
          "format": "date-time",
          "description": "The end time of the task.",
          "type": "string"
        },
        "TaskTypeId": {
          "format": "int32",
          "description": "The Id of the task type.",
          "type": "integer"
        },
        "TaskType": {
          "description": "The type of the task.",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The name of the task type",
              "type": "string"
            },
            "IsDefault": {
              "description": "Whether this is the default task type",
              "type": "boolean"
            },
            "TaskTypeStatus": {
              "description": "The status of the task.",
              "type": "array",
              "items": {
                "description": "Represents a task status which depends on the task type. \r\n            Depending on the task type, the task can be in one of several status.",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "TaskTypeStatusId": {
          "format": "int32",
          "description": "The id of the status of the task.",
          "type": "integer"
        },
        "TaskTypeStatus": {
          "description": "The status of the task.",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "IsFinishedState": {
              "type": "boolean"
            },
            "Name": {
              "description": "The name of the task type status",
              "type": "string"
            },
            "TaskTypeId": {
              "format": "int32",
              "description": "The id of the task type",
              "type": "integer"
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "Dependencies": {
          "description": "The dependencies to another task.",
          "type": "array",
          "items": {
            "description": "A task dependency represents a dependency between two tasks, where one task needs to be finished before the other can be started.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "FromTask": {
                "description": "The task which is the predecessor to the successor task",
                "type": "object"
              },
              "FromTaskId": {
                "format": "int32",
                "description": "The id of the task which is the predecessor to the successor task",
                "type": "integer"
              },
              "ToTask": {
                "description": "The task which is the successor to the predecessor task",
                "type": "object"
              },
              "ToTaskId": {
                "format": "int32",
                "description": "The id of the task which is the successor to the predecessor task",
                "type": "integer"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        },
        "UserReportings": {
          "description": "The reportings of the task",
          "type": "array",
          "items": {
            "description": "A user reporting represents a logged time of a user on a specific task in HQ.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "Note": {
                "description": "The user-provided note of this reporting",
                "type": "string"
              },
              "Duration": {
                "format": "int64",
                "description": "The reporting duration, in seconds",
                "type": "integer"
              },
              "UserId": {
                "format": "int32",
                "description": "The id of the user this reporting is for",
                "type": "integer"
              },
              "User": {
                "description": "The user this reporting is for",
                "type": "object"
              },
              "ChargeRateValue": {
                "format": "double",
                "description": "The external charge rate value",
                "type": "number"
              },
              "InternalChargeRateValue": {
                "format": "double",
                "description": "The internal charge rate value",
                "type": "number"
              },
              "IsApproved": {
                "description": "Whether this reporting was approved",
                "type": "boolean"
              },
              "StartOn": {
                "format": "date-time",
                "description": "The date of the reporting",
                "type": "string"
              },
              "BreakDuration": {
                "format": "int64",
                "description": "The break duration of this reporting, in seconds",
                "type": "integer"
              },
              "ProjectId": {
                "format": "int32",
                "description": "The id of the project that this reporting belongs to",
                "type": "integer"
              },
              "Project": {
                "description": "The project that this reporting belongs to",
                "type": "object"
              },
              "TaskId": {
                "format": "int32",
                "description": "The id of the task this reporting was created for",
                "type": "integer"
              },
              "Task": {
                "description": "The task this reporting was created for",
                "type": "object"
              },
              "CurrencyInternalChargeRateValue": {
                "description": "The ISO 4217 code of the currency of the internal charge rate value",
                "maxLength": 3,
                "minLength": 0,
                "type": "string"
              },
              "CurrencyChargeRateValue": {
                "description": "The ISO 4217 code of the currency of the external charge rate",
                "maxLength": 3,
                "minLength": 0,
                "type": "string"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        },
        "IsAppointment": {
          "description": "Checked if the task is a appointment",
          "type": "boolean"
        },
        "SyncId": {
          "description": "The external id of the task for e.g sync clients.",
          "type": "string"
        },
        "Sync": {
          "description": "Whether the task should be synced to the configured sync clients.",
          "type": "boolean"
        },
        "JiraProjectName": {
          "description": "The short name of the linked JIRA project.",
          "type": "string"
        },
        "Remaining": {
          "format": "double",
          "description": "The remainig value of the task in hours.",
          "type": "number"
        },
        "ProjectBudgetId": {
          "format": "int32",
          "description": "The id of the project budget of the task.",
          "type": "integer"
        },
        "ProjectBudget": {
          "description": "The project budget of the task.",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "ProjectId": {
              "format": "int32",
              "type": "integer"
            },
            "FinancesCostTypeId": {
              "format": "int32",
              "type": "integer"
            },
            "Costs": {
              "format": "double",
              "type": "number"
            },
            "Purpose": {
              "type": "string"
            },
            "Currency": {
              "type": "string"
            },
            "FinancesCostType": {
              "description": "The linked cost type. This is only relevant for assigned tasks/reportings. Incoming invoices have their own cost type on position level",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Project": {
              "description": "The project which the budget belongs to",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "ChargeType": {
          "description": "The charge type of the task",
          "enum": [
            "Fixed",
            "Variable",
            "Capped",
            "NotChargeable",
            "NotSet"
          ],
          "type": "string"
        },
        "ChargeValue": {
          "format": "double",
          "description": "The charge value of the task",
          "type": "number"
        },
        "Id": {
          "format": "int32",
          "description": "The unique identifier of this entity",
          "type": "integer"
        },
        "CreatedBy": {
          "format": "int32",
          "description": "The id of the user who created this entity",
          "type": "integer"
        },
        "UpdatedBy": {
          "format": "int32",
          "description": "The id of the last user who modified this entity",
          "type": "integer"
        },
        "CreatedOn": {
          "format": "date-time",
          "description": "The date and time this entity was created, in UTC",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "description": "The last date and time this entity was updated, in UTC",
          "type": "string"
        }
      }
    },
    "ProjectRole": {
      "description": "A project role defines the responsibilities and permissions of a user on a project\r\n            on which they are a member of.",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "Name": {
          "description": "The name of this project role",
          "type": "string"
        },
        "IsRequired": {
          "description": "Tells if this a required role on projects.",
          "type": "boolean"
        },
        "Id": {
          "format": "int32",
          "description": "The unique identifier of this entity",
          "type": "integer"
        },
        "CreatedBy": {
          "format": "int32",
          "description": "The id of the user who created this entity",
          "type": "integer"
        },
        "UpdatedBy": {
          "format": "int32",
          "description": "The id of the last user who modified this entity",
          "type": "integer"
        },
        "CreatedOn": {
          "format": "date-time",
          "description": "The date and time this entity was created, in UTC",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "description": "The last date and time this entity was updated, in UTC",
          "type": "string"
        }
      }
    },
    "FinancesCostType": {
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "Name": {
          "description": "The name of the cost type",
          "type": "string"
        },
        "Id": {
          "format": "int32",
          "description": "The unique identifier of this entity",
          "type": "integer"
        },
        "CreatedBy": {
          "format": "int32",
          "description": "The id of the user who created this entity",
          "type": "integer"
        },
        "UpdatedBy": {
          "format": "int32",
          "description": "The id of the last user who modified this entity",
          "type": "integer"
        },
        "CreatedOn": {
          "format": "date-time",
          "description": "The date and time this entity was created, in UTC",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "description": "The last date and time this entity was updated, in UTC",
          "type": "string"
        }
      }
    },
    "DocumentEarlyPayment": {
      "description": "The document early payment entry represents a rule in days before which a discount is granted on an invoice.",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "CashDiscount": {
          "format": "double",
          "description": "The value of discount granted",
          "type": "number"
        },
        "PaymentPeriod": {
          "format": "int32",
          "description": "The days this early payment discount is valid",
          "type": "integer"
        },
        "Id": {
          "format": "int32",
          "description": "The unique identifier of this entity",
          "type": "integer"
        },
        "CreatedBy": {
          "format": "int32",
          "description": "The id of the user who created this entity",
          "type": "integer"
        },
        "UpdatedBy": {
          "format": "int32",
          "description": "The id of the last user who modified this entity",
          "type": "integer"
        },
        "CreatedOn": {
          "format": "date-time",
          "description": "The date and time this entity was created, in UTC",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "description": "The last date and time this entity was updated, in UTC",
          "type": "string"
        }
      }
    },
    "Resource": {
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "Id": {
          "format": "int32",
          "description": "The unique identifier of this entity",
          "type": "integer"
        },
        "CreatedBy": {
          "format": "int32",
          "description": "The id of the user who created this entity",
          "type": "integer"
        },
        "UpdatedBy": {
          "format": "int32",
          "description": "The id of the last user who modified this entity",
          "type": "integer"
        },
        "CreatedOn": {
          "format": "date-time",
          "description": "The date and time this entity was created, in UTC",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "description": "The last date and time this entity was updated, in UTC",
          "type": "string"
        }
      }
    },
    "TaskType": {
      "description": "Every task in HQ has a type. This is a task classification and often used for different external invoicing charge rates.",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "Name": {
          "description": "The name of the task type",
          "type": "string"
        },
        "IsDefault": {
          "description": "Whether this is the default task type",
          "type": "boolean"
        },
        "TaskTypeStatus": {
          "description": "The status of the task.",
          "type": "array",
          "items": {
            "description": "Represents a task status which depends on the task type. \r\n            Depending on the task type, the task can be in one of several status.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "IsFinishedState": {
                "type": "boolean"
              },
              "Name": {
                "description": "The name of the task type status",
                "type": "string"
              },
              "TaskTypeId": {
                "format": "int32",
                "description": "The id of the task type",
                "type": "integer"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        },
        "Id": {
          "format": "int32",
          "description": "The unique identifier of this entity",
          "type": "integer"
        },
        "CreatedBy": {
          "format": "int32",
          "description": "The id of the user who created this entity",
          "type": "integer"
        },
        "UpdatedBy": {
          "format": "int32",
          "description": "The id of the last user who modified this entity",
          "type": "integer"
        },
        "CreatedOn": {
          "format": "date-time",
          "description": "The date and time this entity was created, in UTC",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "description": "The last date and time this entity was updated, in UTC",
          "type": "string"
        }
      }
    },
    "TaskTypeStatus": {
      "description": "Represents a task status which depends on the task type. \r\n            Depending on the task type, the task can be in one of several status.",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "IsFinishedState": {
          "type": "boolean"
        },
        "Name": {
          "description": "The name of the task type status",
          "type": "string"
        },
        "TaskTypeId": {
          "format": "int32",
          "description": "The id of the task type",
          "type": "integer"
        },
        "Id": {
          "format": "int32",
          "description": "The unique identifier of this entity",
          "type": "integer"
        },
        "CreatedBy": {
          "format": "int32",
          "description": "The id of the user who created this entity",
          "type": "integer"
        },
        "UpdatedBy": {
          "format": "int32",
          "description": "The id of the last user who modified this entity",
          "type": "integer"
        },
        "CreatedOn": {
          "format": "date-time",
          "description": "The date and time this entity was created, in UTC",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "description": "The last date and time this entity was updated, in UTC",
          "type": "string"
        }
      }
    },
    "TaskDependency": {
      "description": "A task dependency represents a dependency between two tasks, where one task needs to be finished before the other can be started.",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "FromTask": {
          "description": "The task which is the predecessor to the successor task",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The name of the task.",
              "type": "string"
            },
            "Assignments": {
              "description": "The assignments of users to a specific task.",
              "type": "array",
              "items": {
                "description": "The assignment of a user to a task",
                "type": "object"
              }
            },
            "Order": {
              "format": "int32",
              "description": "The order of the task within one project.",
              "type": "integer"
            },
            "ParentId": {
              "format": "int32",
              "description": "The Id of the parent task of this task, used for building a hierarchy.",
              "type": "integer"
            },
            "ProjectId": {
              "format": "int32",
              "description": "The Id of the project this task belongs to.",
              "type": "integer"
            },
            "Project": {
              "description": "The project this task belongs to.",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "IsDone": {
              "description": "Whether this task is open or done.",
              "type": "boolean"
            },
            "PlannedEffort": {
              "format": "double",
              "description": "The planned effort, in  hours.",
              "type": "number"
            },
            "PercentDone": {
              "format": "int32",
              "description": "The done value of the task in percent",
              "type": "integer"
            },
            "Description": {
              "description": "The description of the task.",
              "type": "string"
            },
            "StartOn": {
              "format": "date-time",
              "description": "The start time of the task.",
              "type": "string"
            },
            "EndOn": {
              "format": "date-time",
              "description": "The end time of the task.",
              "type": "string"
            },
            "TaskTypeId": {
              "format": "int32",
              "description": "The Id of the task type.",
              "type": "integer"
            },
            "TaskType": {
              "description": "The type of the task.",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "TaskTypeStatusId": {
              "format": "int32",
              "description": "The id of the status of the task.",
              "type": "integer"
            },
            "TaskTypeStatus": {
              "description": "The status of the task.",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Dependencies": {
              "description": "The dependencies to another task.",
              "type": "array",
              "items": {
                "description": "A task dependency represents a dependency between two tasks, where one task needs to be finished before the other can be started.",
                "type": "object"
              }
            },
            "UserReportings": {
              "description": "The reportings of the task",
              "type": "array",
              "items": {
                "description": "A user reporting represents a logged time of a user on a specific task in HQ.",
                "type": "object"
              }
            },
            "IsAppointment": {
              "description": "Checked if the task is a appointment",
              "type": "boolean"
            },
            "SyncId": {
              "description": "The external id of the task for e.g sync clients.",
              "type": "string"
            },
            "Sync": {
              "description": "Whether the task should be synced to the configured sync clients.",
              "type": "boolean"
            },
            "JiraProjectName": {
              "description": "The short name of the linked JIRA project.",
              "type": "string"
            },
            "Remaining": {
              "format": "double",
              "description": "The remainig value of the task in hours.",
              "type": "number"
            },
            "ProjectBudgetId": {
              "format": "int32",
              "description": "The id of the project budget of the task.",
              "type": "integer"
            },
            "ProjectBudget": {
              "description": "The project budget of the task.",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "ChargeType": {
              "description": "The charge type of the task",
              "enum": [
                "Fixed",
                "Variable",
                "Capped",
                "NotChargeable",
                "NotSet"
              ],
              "type": "string"
            },
            "ChargeValue": {
              "format": "double",
              "description": "The charge value of the task",
              "type": "number"
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "FromTaskId": {
          "format": "int32",
          "description": "The id of the task which is the predecessor to the successor task",
          "type": "integer"
        },
        "ToTask": {
          "description": "The task which is the successor to the predecessor task",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The name of the task.",
              "type": "string"
            },
            "Assignments": {
              "description": "The assignments of users to a specific task.",
              "type": "array",
              "items": {
                "description": "The assignment of a user to a task",
                "type": "object"
              }
            },
            "Order": {
              "format": "int32",
              "description": "The order of the task within one project.",
              "type": "integer"
            },
            "ParentId": {
              "format": "int32",
              "description": "The Id of the parent task of this task, used for building a hierarchy.",
              "type": "integer"
            },
            "ProjectId": {
              "format": "int32",
              "description": "The Id of the project this task belongs to.",
              "type": "integer"
            },
            "Project": {
              "description": "The project this task belongs to.",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "IsDone": {
              "description": "Whether this task is open or done.",
              "type": "boolean"
            },
            "PlannedEffort": {
              "format": "double",
              "description": "The planned effort, in  hours.",
              "type": "number"
            },
            "PercentDone": {
              "format": "int32",
              "description": "The done value of the task in percent",
              "type": "integer"
            },
            "Description": {
              "description": "The description of the task.",
              "type": "string"
            },
            "StartOn": {
              "format": "date-time",
              "description": "The start time of the task.",
              "type": "string"
            },
            "EndOn": {
              "format": "date-time",
              "description": "The end time of the task.",
              "type": "string"
            },
            "TaskTypeId": {
              "format": "int32",
              "description": "The Id of the task type.",
              "type": "integer"
            },
            "TaskType": {
              "description": "The type of the task.",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "TaskTypeStatusId": {
              "format": "int32",
              "description": "The id of the status of the task.",
              "type": "integer"
            },
            "TaskTypeStatus": {
              "description": "The status of the task.",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Dependencies": {
              "description": "The dependencies to another task.",
              "type": "array",
              "items": {
                "description": "A task dependency represents a dependency between two tasks, where one task needs to be finished before the other can be started.",
                "type": "object"
              }
            },
            "UserReportings": {
              "description": "The reportings of the task",
              "type": "array",
              "items": {
                "description": "A user reporting represents a logged time of a user on a specific task in HQ.",
                "type": "object"
              }
            },
            "IsAppointment": {
              "description": "Checked if the task is a appointment",
              "type": "boolean"
            },
            "SyncId": {
              "description": "The external id of the task for e.g sync clients.",
              "type": "string"
            },
            "Sync": {
              "description": "Whether the task should be synced to the configured sync clients.",
              "type": "boolean"
            },
            "JiraProjectName": {
              "description": "The short name of the linked JIRA project.",
              "type": "string"
            },
            "Remaining": {
              "format": "double",
              "description": "The remainig value of the task in hours.",
              "type": "number"
            },
            "ProjectBudgetId": {
              "format": "int32",
              "description": "The id of the project budget of the task.",
              "type": "integer"
            },
            "ProjectBudget": {
              "description": "The project budget of the task.",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "ChargeType": {
              "description": "The charge type of the task",
              "enum": [
                "Fixed",
                "Variable",
                "Capped",
                "NotChargeable",
                "NotSet"
              ],
              "type": "string"
            },
            "ChargeValue": {
              "format": "double",
              "description": "The charge value of the task",
              "type": "number"
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "ToTaskId": {
          "format": "int32",
          "description": "The id of the task which is the successor to the predecessor task",
          "type": "integer"
        },
        "Id": {
          "format": "int32",
          "description": "The unique identifier of this entity",
          "type": "integer"
        },
        "CreatedBy": {
          "format": "int32",
          "description": "The id of the user who created this entity",
          "type": "integer"
        },
        "UpdatedBy": {
          "format": "int32",
          "description": "The id of the last user who modified this entity",
          "type": "integer"
        },
        "CreatedOn": {
          "format": "date-time",
          "description": "The date and time this entity was created, in UTC",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "description": "The last date and time this entity was updated, in UTC",
          "type": "string"
        }
      }
    },
    "ODataResponse[List[ArticleSalesPrice]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "description": "An sales price represents a price of the article which can be used for creating ainvoice.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "Price": {
                "format": "double",
                "description": "The price to sell the article for",
                "type": "number"
              },
              "Currency": {
                "description": "The ISO 4217 code of the currency of the sales price",
                "maxLength": 3,
                "minLength": 0,
                "type": "string"
              },
              "TaxRate": {
                "format": "double",
                "description": "The tax rate of the sales price",
                "type": "number"
              },
              "Amount": {
                "format": "double",
                "description": "The amount for the specific price",
                "type": "number"
              },
              "ArticleId": {
                "format": "int32",
                "description": "The article the price is for",
                "type": "integer"
              },
              "IsDefault": {
                "description": "Mark sales price as default",
                "type": "boolean"
              },
              "ArticleDiscounts": {
                "description": "The possible discounts for the sales price",
                "type": "array"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "ODataResponse[List[ArticleStock]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "description": "Represents the current stock of an article in a specific storage. Articles can have multiple stocks, one for each storage they are located in.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "SafetyStock": {
                "format": "double",
                "description": "The Safety stock (also called buffer stock) is the minimal stock which should always be available",
                "type": "number"
              },
              "MaxStock": {
                "format": "double",
                "description": "The max stock for this article",
                "type": "number"
              },
              "ReorderLevel": {
                "format": "double",
                "description": "The level, where an article should be reorderd",
                "type": "number"
              },
              "CurrentStock": {
                "format": "double",
                "description": "The current stock of the article",
                "type": "number"
              },
              "ArticleId": {
                "format": "int32",
                "description": "The id of the article",
                "type": "integer"
              },
              "Article": {
                "description": "The article the stock belongs to",
                "type": "object"
              },
              "StorageId": {
                "format": "int32",
                "description": "The id of the Storage the article is stored",
                "type": "integer"
              },
              "Storage": {
                "description": "The Storage the article is stored at",
                "type": "object"
              },
              "Transactions": {
                "description": "All transactions on the stock",
                "type": "array"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "ODataResponse[List[ArticleStockTransaction]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "description": "Represents a change in an article stock, for example incoming goods or used goods.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "Change": {
                "format": "double",
                "description": "The change of quantity in stock made by this transaction",
                "type": "number"
              },
              "ExecutedOn": {
                "format": "date-time",
                "description": "The execution date of the transaction",
                "type": "string"
              },
              "Type": {
                "description": "The type of the transaction",
                "type": "string"
              },
              "Article": {
                "description": "An article is a stock item that your company sells, for example a digital camera. \r\n            An article can also be a service or activity that your company performs, for example a digital design. \r\n            Articles can be used to create positions on invoices or quotations, among others.",
                "type": "object"
              },
              "ArticleId": {
                "format": "int32",
                "type": "integer"
              },
              "ArticleStockId": {
                "format": "int32",
                "description": "The id of the articlestock",
                "type": "integer"
              },
              "ArticleStock": {
                "description": "The article stock of the transaciton",
                "type": "object"
              },
              "Description": {
                "description": "The description of the transaction",
                "type": "string"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "ODataResponse[List[CustomField]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
            "required": [
              "Name",
              "Id"
            ],
            "type": "object",
            "properties": {
              "Name": {
                "description": "The name of this custom field",
                "type": "string"
              },
              "Value": {
                "description": "The value of this custom field",
                "type": "string"
              },
              "Type": {
                "description": "The type of this custom field",
                "type": "string"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "AworkWebhook": {
      "type": "object",
      "properties": {
        "entityId": {
          "type": "string"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "eventType": {
          "type": "string"
        },
        "entityLink": {
          "type": "string"
        },
        "traceId": {
          "type": "string"
        }
      }
    },
    "ODataResponse[List[Company]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "description": "A company represents any entity you do business with, for example a customer, a supplier or a partner.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "Name": {
                "description": "The name of the company",
                "type": "string"
              },
              "IndustrialSector": {
                "description": "The company's industrial sector",
                "type": "string"
              },
              "Description": {
                "description": "A longer description of the company",
                "type": "string"
              },
              "IBAN": {
                "description": "The IBAN of the company",
                "type": "string"
              },
              "BIC": {
                "description": "The BIC of the company",
                "type": "string"
              },
              "DebitorNumber": {
                "format": "int32",
                "description": "The company's debitor number",
                "type": "integer"
              },
              "CreditorNumber": {
                "format": "int32",
                "description": "The company's creditor number",
                "type": "integer"
              },
              "TaxId": {
                "description": "The company's tax id",
                "type": "string"
              },
              "DefaultDeliveryConditionId": {
                "format": "int32",
                "description": "The id of the default delivery condition of this company",
                "type": "integer"
              },
              "DefaultDeliveryCondition": {
                "description": "The default delivery condition of this company",
                "type": "object"
              },
              "DefaultPaymentConditionId": {
                "format": "int32",
                "description": "The id of the default payment condition of this company",
                "type": "integer"
              },
              "DefaultPaymentCondition": {
                "description": "The default payment condition of this company",
                "type": "object"
              },
              "DefaultAddress": {
                "description": "The default address of this company",
                "type": "object"
              },
              "Addresses": {
                "description": "All addresses of the company",
                "type": "array"
              },
              "ResponsibleUsers": {
                "description": "The list of the responsible users of this company",
                "type": "array"
              },
              "CustomFields": {
                "description": "The customfields associated with this company",
                "type": "array"
              },
              "CompanyTypes": {
                "description": "The company types associated with this company",
                "type": "array"
              },
              "Files": {
                "description": "The files associated with this company",
                "type": "array"
              },
              "Subsystems": {
                "description": "The subsystems this company is associated with",
                "type": "array"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "ODataResponse[List[CompanyAddress]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "description": "A company address represents one of many addresses of companies.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "City": {
                "description": "The city of this address",
                "type": "string"
              },
              "Street": {
                "description": "The street name of this address",
                "type": "string"
              },
              "HouseNumber": {
                "description": "The house number of this address",
                "type": "string"
              },
              "ZipCode": {
                "description": "The ZIP or Postal Code of this address",
                "type": "string"
              },
              "AddressLine2": {
                "description": "The secondary address line, c/o details, etc.",
                "type": "string"
              },
              "Description": {
                "description": "The description of this address",
                "type": "string"
              },
              "Country": {
                "description": "The ISO 3166-1 alpha-2 country code of this address",
                "type": "string"
              },
              "Phone": {
                "description": "The phone number of this address",
                "type": "string"
              },
              "Fax": {
                "description": "The fax number of this address",
                "type": "string"
              },
              "Email": {
                "description": "The email address of this address",
                "type": "string"
              },
              "Website": {
                "description": "The website of this address",
                "type": "string"
              },
              "IsStandard": {
                "description": "Whether this address is the standard address of a company",
                "type": "boolean"
              },
              "DefaultForDocumentType": {
                "description": "The document type this address should be used as a standard for",
                "type": "string"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "ODataResponse[List[CompanyTypeOfCompany]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "description": "This is a connection between a company and a company type.\r\n            A company can have more than one type and can have a different company number for each type.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "Name": {
                "description": "The name of this company type",
                "type": "string"
              },
              "Number": {
                "description": "The number of the company for this type",
                "type": "string"
              },
              "CompanyId": {
                "format": "int32",
                "description": "The Id of the company",
                "type": "integer"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "ODataResponse[List[CompanyType]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "description": "A company type represents the type of a company, for example 'Customer' or 'Supplier'.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "Name": {
                "description": "The name of this company type",
                "type": "string"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "CompanyType": {
      "description": "A company type represents the type of a company, for example 'Customer' or 'Supplier'.",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "Name": {
          "description": "The name of this company type",
          "type": "string"
        },
        "Id": {
          "format": "int32",
          "description": "The unique identifier of this entity",
          "type": "integer"
        },
        "CreatedBy": {
          "format": "int32",
          "description": "The id of the user who created this entity",
          "type": "integer"
        },
        "UpdatedBy": {
          "format": "int32",
          "description": "The id of the last user who modified this entity",
          "type": "integer"
        },
        "CreatedOn": {
          "format": "date-time",
          "description": "The date and time this entity was created, in UTC",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "description": "The last date and time this entity was updated, in UTC",
          "type": "string"
        }
      }
    },
    "AzureConfig": {
      "description": "This class contains some details about the current Azure configuration and is used to monitor and manage Azure.",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "",
          "type": "integer"
        },
        "AccessToken": {
          "description": "The host name this login config is valid for",
          "type": "string"
        }
      }
    },
    "ODataResponse[List[ConfigSystemEvent]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "description": "A system audit log event",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "PropertyName": {
                "description": "The name of the property that changed",
                "type": "string"
              },
              "EntityId": {
                "format": "int32",
                "description": "The id of the object that changed",
                "type": "integer"
              },
              "OldValue": {
                "description": "The old value of the property",
                "type": "string"
              },
              "NewValue": {
                "description": "The new value of the property",
                "type": "string"
              },
              "Type": {
                "description": "The operation type, for example changed, created or removed",
                "type": "string"
              },
              "DatabaseObject": {
                "description": "The name of the database object that changed",
                "type": "string"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "ConfigSystemEvent": {
      "description": "A system audit log event",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "description": "The name of the property that changed",
          "type": "string"
        },
        "EntityId": {
          "format": "int32",
          "description": "The id of the object that changed",
          "type": "integer"
        },
        "OldValue": {
          "description": "The old value of the property",
          "type": "string"
        },
        "NewValue": {
          "description": "The new value of the property",
          "type": "string"
        },
        "Type": {
          "description": "The operation type, for example changed, created or removed",
          "enum": [
            "EntityCreated",
            "PropertyChanged",
            "EntityDeleted",
            "NotSet"
          ],
          "type": "string"
        },
        "DatabaseObject": {
          "description": "The name of the database object that changed",
          "type": "string"
        },
        "Id": {
          "format": "int32",
          "description": "The unique identifier of this entity",
          "type": "integer"
        },
        "CreatedBy": {
          "format": "int32",
          "description": "The id of the user who created this entity",
          "type": "integer"
        },
        "UpdatedBy": {
          "format": "int32",
          "description": "The id of the last user who modified this entity",
          "type": "integer"
        },
        "CreatedOn": {
          "format": "date-time",
          "description": "The date and time this entity was created, in UTC",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "description": "The last date and time this entity was updated, in UTC",
          "type": "string"
        }
      }
    },
    "HangfireStats": {
      "description": "Hangfire statistics",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "Succeeded": {
          "description": "A stringified object containing the succeeded jobs of the last 24 hours",
          "type": "string"
        },
        "Failed": {
          "description": "A stringified object containing the failed jobs of the last 24 hours",
          "type": "string"
        },
        "ServerCount": {
          "format": "int32",
          "description": "The amount of currently active Hangfire servers",
          "type": "integer"
        },
        "RecurringCount": {
          "format": "int32",
          "description": "The amount of currently scheduled recurring jobs",
          "type": "integer"
        },
        "RetriesCount": {
          "format": "int32",
          "description": "The current amount of jobs in the retry queue",
          "type": "integer"
        },
        "EnqueuedCount": {
          "format": "int32",
          "description": "The current amount of jobs in all queues",
          "type": "integer"
        },
        "SucceededCount": {
          "format": "int32",
          "description": "The total amount of succeeded jobs",
          "type": "integer"
        },
        "FailedCount": {
          "format": "int32",
          "description": "The total amount of failed jobs",
          "type": "integer"
        },
        "Id": {
          "format": "int32",
          "description": "The unique identifier of this entity",
          "type": "integer"
        },
        "CreatedBy": {
          "format": "int32",
          "description": "The id of the user who created this entity",
          "type": "integer"
        },
        "UpdatedBy": {
          "format": "int32",
          "description": "The id of the last user who modified this entity",
          "type": "integer"
        },
        "CreatedOn": {
          "format": "date-time",
          "description": "The date and time this entity was created, in UTC",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "description": "The last date and time this entity was updated, in UTC",
          "type": "string"
        }
      }
    },
    "ODataResponse[List[InternalCompany]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "description": "Represents internal companies that can have different document templates and tax information.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "Name": {
                "description": "The name of the company",
                "type": "string"
              },
              "TaxNumber": {
                "description": "The tax number of the company",
                "type": "string"
              },
              "TaxId": {
                "description": "The tax id of the company",
                "type": "string"
              },
              "IsTaxExempt": {
                "description": "Whether the company is liable to pay taxes",
                "type": "boolean"
              },
              "DefaultAddress": {
                "description": "The default address of the company",
                "type": "object"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "InternalCompany": {
      "description": "Represents internal companies that can have different document templates and tax information.",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "Name": {
          "description": "The name of the company",
          "type": "string"
        },
        "TaxNumber": {
          "description": "The tax number of the company",
          "type": "string"
        },
        "TaxId": {
          "description": "The tax id of the company",
          "type": "string"
        },
        "IsTaxExempt": {
          "description": "Whether the company is liable to pay taxes",
          "type": "boolean"
        },
        "DefaultAddress": {
          "description": "The default address of the company",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "City": {
              "description": "The city of this address",
              "type": "string"
            },
            "Street": {
              "description": "The street name of this address",
              "type": "string"
            },
            "HouseNumber": {
              "description": "The house number of this address",
              "type": "string"
            },
            "ZipCode": {
              "description": "The ZIP or Postal Code of this address",
              "type": "string"
            },
            "AddressLine2": {
              "description": "The secondary address line, c/o details, etc.",
              "type": "string"
            },
            "Description": {
              "description": "The description of this address",
              "type": "string"
            },
            "Country": {
              "description": "The ISO 3166-1 alpha-2 country code of this address",
              "type": "string"
            },
            "Phone": {
              "description": "The phone number of this address",
              "type": "string"
            },
            "Fax": {
              "description": "The fax number of this address",
              "type": "string"
            },
            "Email": {
              "description": "The email address of this address",
              "type": "string"
            },
            "Website": {
              "description": "The website of this address",
              "type": "string"
            },
            "IsStandard": {
              "description": "Whether this address is the standard address of a company",
              "type": "boolean"
            },
            "DefaultForDocumentType": {
              "description": "The document type this address should be used as a standard for",
              "enum": [
                "Quotation",
                "Invoice",
                "DeliveryNote",
                "Warning",
                "Reminder",
                "Cancellation",
                "CreditNote",
                "Confirmation",
                "IncomingInvoice",
                "Undefined",
                "Order",
                "PriceInquery",
                "Letter",
                "Minute",
                "Akonto"
              ],
              "type": "string"
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "Id": {
          "format": "int32",
          "description": "The unique identifier of this entity",
          "type": "integer"
        },
        "CreatedBy": {
          "format": "int32",
          "description": "The id of the user who created this entity",
          "type": "integer"
        },
        "UpdatedBy": {
          "format": "int32",
          "description": "The id of the last user who modified this entity",
          "type": "integer"
        },
        "CreatedOn": {
          "format": "date-time",
          "description": "The date and time this entity was created, in UTC",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "description": "The last date and time this entity was updated, in UTC",
          "type": "string"
        }
      }
    },
    "LoginConfig": {
      "description": "The settings of the system with the specified hostname. This is used for customizing the login screen of the customer's HQ.",
      "type": "object",
      "properties": {
        "Hostname": {
          "description": "The host name this login config is valid for",
          "type": "string"
        },
        "DisplayName": {
          "description": "The display name of the customer's system",
          "type": "string"
        },
        "DisplayImageUrl": {
          "description": "The URL of the login image of the customer's system",
          "type": "string"
        },
        "CustomerId": {
          "format": "int32",
          "description": "The customer's Id",
          "type": "integer"
        }
      }
    },
    "ODataResponse[List[MenuItem]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "description": "Represents an entry in the menu structure of the system for the current users",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "Title": {
                "description": "The displayed title of the menu item",
                "type": "string"
              },
              "Icon": {
                "description": "The displayed icon of the menu item",
                "type": "string"
              },
              "Url": {
                "description": "The URL of the module to load",
                "type": "string"
              },
              "Children": {
                "description": "The sub-menu items",
                "type": "array"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "MenuItem": {
      "description": "Represents an entry in the menu structure of the system for the current users",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "Title": {
          "description": "The displayed title of the menu item",
          "type": "string"
        },
        "Icon": {
          "description": "The displayed icon of the menu item",
          "type": "string"
        },
        "Url": {
          "description": "The URL of the module to load",
          "type": "string"
        },
        "Children": {
          "description": "The sub-menu items",
          "type": "array",
          "items": {
            "description": "Represents an entry in the menu structure of the system for the current users",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "Title": {
                "description": "The displayed title of the menu item",
                "type": "string"
              },
              "Icon": {
                "description": "The displayed icon of the menu item",
                "type": "string"
              },
              "Url": {
                "description": "The URL of the module to load",
                "type": "string"
              },
              "Children": {
                "description": "The sub-menu items",
                "type": "array"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        },
        "Id": {
          "format": "int32",
          "description": "The unique identifier of this entity",
          "type": "integer"
        },
        "CreatedBy": {
          "format": "int32",
          "description": "The id of the user who created this entity",
          "type": "integer"
        },
        "UpdatedBy": {
          "format": "int32",
          "description": "The id of the last user who modified this entity",
          "type": "integer"
        },
        "CreatedOn": {
          "format": "date-time",
          "description": "The date and time this entity was created, in UTC",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "description": "The last date and time this entity was updated, in UTC",
          "type": "string"
        }
      }
    },
    "ODataResponse[List[ResponseTimeLog]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "description": "A response time log represents the time it takes for module to load.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "Url": {
                "description": "The url of the measured time",
                "type": "string"
              },
              "UserName": {
                "description": "The user name of the user of this measurement",
                "type": "string"
              },
              "CustomerName": {
                "description": "The name of the customer the user belongs to",
                "type": "string"
              },
              "CustomerId": {
                "format": "int32",
                "description": "The id of the customer the user belongs to",
                "type": "integer"
              },
              "ResponseTime": {
                "format": "double",
                "description": "The actual response time of the module",
                "type": "number"
              },
              "TimeStamp": {
                "format": "date-time",
                "description": "The time the response time measurement was taken",
                "type": "string"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "ResponseTimeLog": {
      "description": "A response time log represents the time it takes for module to load.",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "Url": {
          "description": "The url of the measured time",
          "type": "string"
        },
        "UserName": {
          "description": "The user name of the user of this measurement",
          "type": "string"
        },
        "CustomerName": {
          "description": "The name of the customer the user belongs to",
          "type": "string"
        },
        "CustomerId": {
          "format": "int32",
          "description": "The id of the customer the user belongs to",
          "type": "integer"
        },
        "ResponseTime": {
          "format": "double",
          "description": "The actual response time of the module",
          "type": "number"
        },
        "TimeStamp": {
          "format": "date-time",
          "description": "The time the response time measurement was taken",
          "type": "string"
        },
        "Id": {
          "format": "int32",
          "description": "The unique identifier of this entity",
          "type": "integer"
        },
        "CreatedBy": {
          "format": "int32",
          "description": "The id of the user who created this entity",
          "type": "integer"
        },
        "UpdatedBy": {
          "format": "int32",
          "description": "The id of the last user who modified this entity",
          "type": "integer"
        },
        "CreatedOn": {
          "format": "date-time",
          "description": "The date and time this entity was created, in UTC",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "description": "The last date and time this entity was updated, in UTC",
          "type": "string"
        }
      }
    },
    "ODataResponse[List[Subsystem]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "description": "A subsystem represents a tenant within a customer's HQ",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "Name": {
                "description": "The name of the subsystem",
                "type": "string"
              },
              "IsMaster": {
                "description": "Whether this is the master subsystem",
                "type": "boolean"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "SystemUrl": {
      "description": "The settings of the system with the specified hostname. This is used for customizing the login screen of the customer's HQ.",
      "type": "object",
      "properties": {
        "Hostname": {
          "description": "The host name this login config is valid for",
          "type": "string"
        },
        "CompanyUrl": {
          "description": "The URL of to get to a company",
          "type": "string"
        },
        "ProjectUrl": {
          "description": "The URL of to get to a project",
          "type": "string"
        },
        "DocumentUrl": {
          "description": "The URL of to get to a document",
          "type": "string"
        }
      }
    },
    "ODataResponse[List[ContactHistory]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "description": "The contact history represents any contact you had with a contact person. For example, any meeting, phone call or email can be a contact history entry.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "ContactOn": {
                "format": "date-time",
                "description": "The date and time the contact was made",
                "type": "string"
              },
              "Content": {
                "description": "The content of the contact entry",
                "type": "string"
              },
              "Subject": {
                "description": "The main subject of the contact",
                "type": "string"
              },
              "ContactType": {
                "description": "How the contact took place, for example 'E-Mail' or 'Meeting'",
                "type": "string"
              },
              "UserId": {
                "format": "int32",
                "description": "The Id of user of your own company who was in contact with the contact person",
                "type": "integer"
              },
              "User": {
                "description": "The user of your own company who was in contact with the contact person",
                "type": "object"
              },
              "ProjectId": {
                "format": "int32",
                "description": "The Id of the project that this contact was about",
                "type": "integer"
              },
              "Project": {
                "description": "The project that this contact was about",
                "type": "object"
              },
              "LeadId": {
                "format": "int32",
                "description": "The Id of the lead that this contact was about",
                "type": "integer"
              },
              "Lead": {
                "description": "The lead that this contact was about",
                "type": "object"
              },
              "CompanyId": {
                "format": "int32",
                "description": "The Id of the company that this contact was about",
                "type": "integer"
              },
              "Company": {
                "description": "The company that this contact was about",
                "type": "object"
              },
              "ContactPersonId": {
                "format": "int32",
                "description": "The Id of the contact person that this contact was with",
                "type": "integer"
              },
              "ContactPerson": {
                "description": "The contact person that this contact was with",
                "type": "object"
              },
              "Files": {
                "description": "The files releated to the contact history",
                "type": "array"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "ODataResponse[List[ContactPerson]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "description": "A contact person represents a person that works for a company you do business with. A company can have many contact persons.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "FirstName": {
                "description": "The first name of the contact person",
                "type": "string"
              },
              "LastName": {
                "description": "The last name of the contact person",
                "type": "string"
              },
              "Position": {
                "description": "The position of the contact person",
                "type": "string"
              },
              "CompanyId": {
                "format": "int32",
                "description": "The Id of the company that the contact person belongs to",
                "type": "integer"
              },
              "PhoneLandline": {
                "description": "The landline phone number of the contact person",
                "type": "string"
              },
              "PhoneMobile": {
                "description": "The mobile phone number of the contact person",
                "type": "string"
              },
              "Salutation": {
                "description": "The salutation of the contact person",
                "type": "string"
              },
              "Birthdate": {
                "description": "The birth date of the user",
                "type": "string"
              },
              "SalutationForm": {
                "description": "The salutation form of the contact person. The value can be \"Neutral\", \"Formal\", \"Informal\" or null.",
                "type": "string"
              },
              "Title": {
                "description": "The academic title of the contact person",
                "type": "string"
              },
              "Language": {
                "description": "The preferred contact language of this contact person, in two-letter ISO-Code, for example 'DE'",
                "type": "string"
              },
              "DefaultAddressId": {
                "format": "int32",
                "description": "The id of the default address of this contact person",
                "type": "integer"
              },
              "Addresses": {
                "description": "All addresses of the contact person",
                "type": "array"
              },
              "DefaultAddress": {
                "description": "The default address of this contact person",
                "type": "object"
              },
              "CustomFields": {
                "description": "The customfields associated with this contact person",
                "type": "array"
              },
              "Company": {
                "description": "The company that the contact person belongs to",
                "type": "object"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "ODataResponse[List[CustomFieldDefinition]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "description": "A custom field definition is a customer-specific value field which extends certain entities.\r\n            Custom field definitions can currently only be created in the HQ, but can be accessed and modified in the API.",
            "required": [
              "Name",
              "TypeText",
              "Id"
            ],
            "type": "object",
            "properties": {
              "Name": {
                "description": "The name of this custom field definition",
                "type": "string"
              },
              "Description": {
                "description": "The description of this custom field definition",
                "type": "string"
              },
              "Order": {
                "format": "int32",
                "description": "The display order of this custom field definition",
                "type": "integer"
              },
              "RightLevelRead": {
                "format": "int32",
                "description": "The required right level to read this custom field",
                "type": "integer"
              },
              "RightLevelWrite": {
                "format": "int32",
                "description": "The required right level to write this custom field",
                "type": "integer"
              },
              "IsRequired": {
                "description": "Whether this is a required field",
                "type": "boolean"
              },
              "TypeText": {
                "description": "The textual representation of the type",
                "type": "string"
              },
              "Category": {
                "description": "The textual representation of the category",
                "type": "string"
              },
              "Options": {
                "description": "A list of selectable options for custom fields of multi-select types",
                "type": "array"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "CustomFieldDefinition": {
      "description": "A custom field definition is a customer-specific value field which extends certain entities.\r\n            Custom field definitions can currently only be created in the HQ, but can be accessed and modified in the API.",
      "required": [
        "Name",
        "TypeText",
        "Id"
      ],
      "type": "object",
      "properties": {
        "Name": {
          "description": "The name of this custom field definition",
          "type": "string"
        },
        "Description": {
          "description": "The description of this custom field definition",
          "type": "string"
        },
        "Order": {
          "format": "int32",
          "description": "The display order of this custom field definition",
          "type": "integer"
        },
        "RightLevelRead": {
          "format": "int32",
          "description": "The required right level to read this custom field",
          "type": "integer"
        },
        "RightLevelWrite": {
          "format": "int32",
          "description": "The required right level to write this custom field",
          "type": "integer"
        },
        "IsRequired": {
          "description": "Whether this is a required field",
          "type": "boolean"
        },
        "TypeText": {
          "description": "The textual representation of the type",
          "type": "string"
        },
        "Category": {
          "description": "The textual representation of the category",
          "enum": [
            "Undefined",
            "Contact",
            "ContactHistory",
            "User",
            "Company",
            "Lead",
            "Article",
            "ArticleVersion",
            "Project",
            "OrganisedEvent",
            "DocumentPosition"
          ],
          "type": "string"
        },
        "Options": {
          "description": "A list of selectable options for custom fields of multi-select types",
          "type": "array",
          "items": {
            "description": "A selectable option of a multi-select custom field definition",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "OptionValue": {
                "description": "The custom field option",
                "type": "string"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        },
        "Id": {
          "format": "int32",
          "description": "The unique identifier of this entity",
          "type": "integer"
        },
        "CreatedBy": {
          "format": "int32",
          "description": "The id of the user who created this entity",
          "type": "integer"
        },
        "UpdatedBy": {
          "format": "int32",
          "description": "The id of the last user who modified this entity",
          "type": "integer"
        },
        "CreatedOn": {
          "format": "date-time",
          "description": "The date and time this entity was created, in UTC",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "description": "The last date and time this entity was updated, in UTC",
          "type": "string"
        }
      }
    },
    "CustomFieldOption": {
      "description": "A selectable option of a multi-select custom field definition",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "OptionValue": {
          "description": "The custom field option",
          "type": "string"
        },
        "Id": {
          "format": "int32",
          "description": "The unique identifier of this entity",
          "type": "integer"
        },
        "CreatedBy": {
          "format": "int32",
          "description": "The id of the user who created this entity",
          "type": "integer"
        },
        "UpdatedBy": {
          "format": "int32",
          "description": "The id of the last user who modified this entity",
          "type": "integer"
        },
        "CreatedOn": {
          "format": "date-time",
          "description": "The date and time this entity was created, in UTC",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "description": "The last date and time this entity was updated, in UTC",
          "type": "string"
        }
      }
    },
    "DemoModel": {
      "required": [
        "Token"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "The id of the demo account",
          "type": "integer"
        },
        "Token": {
          "description": "The token for the api",
          "type": "string"
        },
        "Subdomain": {
          "type": "string"
        },
        "HQCustomerId": {
          "format": "int32",
          "type": "integer"
        },
        "Email": {
          "description": "The Email of the user who registered for demo",
          "type": "string"
        },
        "Firstname": {
          "description": "The firstname of the demo user",
          "type": "string"
        },
        "Lastname": {
          "description": "The lastname of the demo user",
          "type": "string"
        },
        "Company": {
          "description": "the company of the demo user",
          "type": "string"
        },
        "GoogleClientId": {
          "type": "string"
        },
        "GoogleUserId": {
          "type": "string"
        },
        "Password": {
          "type": "string"
        },
        "PhoneNumber": {
          "type": "string"
        },
        "DemoReady": {
          "type": "boolean"
        },
        "DemoCreatedOn": {
          "format": "date-time",
          "type": "string"
        },
        "DemoExpired": {
          "type": "boolean"
        },
        "UserName": {
          "type": "string"
        },
        "Users": {
          "type": "string"
        },
        "Language": {
          "type": "string"
        }
      }
    },
    "ODataResponse[List[CreditNote]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "description": "An invoice represents an outgoing invoice, cancellation or advance payment invoice you send to your customers.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "InvoiceDate": {
                "format": "date-time",
                "description": "The date of this invoice",
                "type": "string"
              },
              "BookingDate": {
                "format": "date-time",
                "description": "The date this invoice was booked",
                "type": "string"
              },
              "Positions": {
                "description": "The positions of this invoice",
                "type": "array"
              },
              "Status": {
                "description": "The status of this credit note",
                "type": "string"
              },
              "CancellationInformation": {
                "description": "The list of cancellations",
                "type": "array"
              },
              "Currency": {
                "description": "The ISO 4217 code of the currency of this document.",
                "maxLength": 3,
                "minLength": 0,
                "type": "string"
              },
              "ExchangeRate": {
                "format": "double",
                "description": "The exchange rate to Euro.\r\n            While the document is in a draft state, the exchange rate reflects the current exchange rate of ECB.\r\n            After the document has been sent, the exchange rate at that date will be returned.",
                "type": "number"
              },
              "DeliveryDate": {
                "format": "date-time",
                "description": "The date of the delivery of the products or services.",
                "type": "string"
              },
              "PaymentConditionId": {
                "format": "int32",
                "description": "The Id of the payment condition.",
                "type": "integer"
              },
              "DeliveryConditionId": {
                "format": "int32",
                "description": "The Id of the delivery condition.",
                "type": "integer"
              },
              "PaymentCondition": {
                "description": "The payment condition that applies to this document",
                "type": "object"
              },
              "DeliveryCondition": {
                "description": "The delivery condition that applies to this document",
                "type": "object"
              },
              "DiscountType": {
                "description": "Whether the document discount is specified as a total or a percentage.",
                "type": "string"
              },
              "Discount": {
                "format": "double",
                "description": "A discount that should be applied to the total sum.\r\n            This is either a total or a percantage value, depending on the DiscountType.",
                "type": "number"
              },
              "Margin": {
                "format": "double",
                "description": "A margin (as a percentage) that should be applied to the total sum.\r\n            This margin will be equally distributed over all positions.",
                "type": "number"
              },
              "TaxOption": {
                "description": "The tax rule that should apply to this document.\r\n            VAT is most commonly used for documents within the same country.",
                "type": "string"
              },
              "ServiceOption": {
                "description": "Whether the positions in this document are a delivery or any other kind of service.",
                "type": "string"
              },
              "NetTotal": {
                "format": "decimal",
                "description": "The net sum of the document. This is calculated considering all positions, position and document margin as well as position and document discount.\r\n            The sum is to be interpreted in the document currency.\r\n            Read-only.",
                "type": "number"
              },
              "GrossTotal": {
                "format": "decimal",
                "description": "The gross sum of the document. This is calculated considering all positions, position taxes, position and document margin as well as position and document discount.\r\n            The sum is to be interpreted in the document currency.\r\n            Read-only.",
                "type": "number"
              },
              "VatTotal": {
                "format": "decimal",
                "description": "The sum of the position VAT.\r\n            The sum is to be interpreted in the document currency.\r\n            Read-only.",
                "type": "number"
              },
              "PaidTotal": {
                "format": "decimal",
                "description": "The sum of received payments for this document.\r\n            The sum is to be interpreted in the document currency.\r\n            Read-only.",
                "type": "number"
              },
              "Type": {
                "description": "The type of the document",
                "type": "string"
              },
              "AddressText": {
                "description": "The receiver address text of the document",
                "type": "string"
              },
              "CompanyAddressId": {
                "format": "int32",
                "description": "The id of the postal address of the receiving company",
                "type": "integer"
              },
              "CompanyAddress": {
                "description": "The postal address of the receiving company",
                "type": "object"
              },
              "Subject": {
                "description": "The subject of the document including the placeholders",
                "type": "string"
              },
              "CalculatedSubject": {
                "description": "The calcuated subject of the document.\r\n            The subject includes the final data, without the placeholders.",
                "type": "string"
              },
              "Header": {
                "description": "The header text on the document",
                "type": "string"
              },
              "Footer": {
                "description": "The footer text on the document",
                "type": "string"
              },
              "DocumentTemplateId": {
                "format": "int32",
                "description": "The document template id",
                "type": "integer"
              },
              "Number": {
                "description": "The number of the document, auto generated by the HQ",
                "type": "string"
              },
              "ContactPersonId": {
                "format": "int32",
                "description": "The id of the responsible contact person at the receiving company",
                "type": "integer"
              },
              "ContactPerson": {
                "description": "The responsible contact person at the receiving company",
                "type": "object"
              },
              "CompanyId": {
                "format": "int32",
                "description": "The id of the company which is the receiver of the document",
                "type": "integer"
              },
              "Company": {
                "description": "The company which is the receiver of the document",
                "type": "object"
              },
              "InternalContactPersonId": {
                "format": "int32",
                "description": "The id of the HQ user responsible for this document",
                "type": "integer"
              },
              "InternalContactPerson": {
                "description": "The HQ user repsonsible for this document",
                "type": "object"
              },
              "LeadId": {
                "format": "int32",
                "description": "The id of the lead related to the document",
                "type": "integer"
              },
              "Lead": {
                "description": "The lead related to the document",
                "type": "object"
              },
              "SyncId": {
                "description": "A unique identifier for other sync clients",
                "type": "string"
              },
              "ProjectId": {
                "format": "int32",
                "description": "the id of the project related to the document",
                "type": "integer"
              },
              "Project": {
                "description": "The project related to the document",
                "type": "object"
              },
              "Note": {
                "description": "The comment on the document",
                "type": "string"
              },
              "CompanyPurchaseOrderNumber": {
                "description": "The purchase order number on the document",
                "type": "string"
              },
              "Language": {
                "description": "The language of the document as two-letter ISOCode, for example 'DE'",
                "type": "string"
              },
              "DocumentFile": {
                "description": "The generated pdf file",
                "type": "object"
              },
              "DocumentImage": {
                "description": "The generated pdf file, as an image",
                "type": "object"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "CreditNote": {
      "description": "An invoice represents an outgoing invoice, cancellation or advance payment invoice you send to your customers.",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "InvoiceDate": {
          "format": "date-time",
          "description": "The date of this invoice",
          "type": "string"
        },
        "BookingDate": {
          "format": "date-time",
          "description": "The date this invoice was booked",
          "type": "string"
        },
        "Positions": {
          "description": "The positions of this invoice",
          "type": "array",
          "items": {
            "description": "A document position represents a position on a quotation or invoice.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "IsOptional": {
                "description": "Whether this position is optional. Only valid in quotations.",
                "type": "boolean"
              },
              "Tax": {
                "format": "double",
                "description": "The position tax rate, for example 19%",
                "type": "number"
              },
              "Price": {
                "format": "decimal",
                "description": "The position price, in the currency of the document",
                "type": "number"
              },
              "Discount": {
                "format": "double",
                "description": "The percentage discount that should be applied to this position sum",
                "type": "number"
              },
              "Margin": {
                "format": "double",
                "description": "The margin that should be applied to this position sum",
                "type": "number"
              },
              "ExcludeFromEarlyPayment": {
                "description": "Whether this position should be excluded from early payment discount calculations",
                "type": "boolean"
              },
              "TotalPrice": {
                "format": "double",
                "description": "The total price under consideration of margin and discount",
                "type": "number"
              },
              "TotalUnitPrice": {
                "format": "double",
                "description": "The total unit price under consideration of margin and discount",
                "type": "number"
              },
              "TotalVat": {
                "format": "double",
                "description": "The total VAT of this position under consideration of margin and discount",
                "type": "number"
              },
              "UserReportings": {
                "description": "The user reportings which have been billed with this document position",
                "type": "array"
              },
              "Interval": {
                "description": "The interval of the recurrence.",
                "type": "string"
              },
              "Text": {
                "description": "The position text, as HTML",
                "type": "string"
              },
              "Unit": {
                "description": "The position unit",
                "type": "string"
              },
              "Type": {
                "description": "The type of this position",
                "type": "string"
              },
              "Order": {
                "format": "int32",
                "description": "The order of this position in the document",
                "type": "integer"
              },
              "ArticleId": {
                "format": "int32",
                "description": "The Id of the article that is associated with this position",
                "type": "integer"
              },
              "ProjectId": {
                "format": "int32",
                "description": "The Id Of the Project",
                "type": "integer"
              },
              "Article": {
                "description": "The article that is associated with this position",
                "type": "object"
              },
              "Amount": {
                "format": "double",
                "description": "The amount of this position in this document",
                "type": "number"
              },
              "ProjectBudgetId": {
                "format": "int32",
                "description": "The Id of the project budget",
                "type": "integer"
              },
              "CostTypeId": {
                "format": "int32",
                "description": "The if of the costType",
                "type": "integer"
              },
              "BookingAccount": {
                "description": "The booking account this position is associated with",
                "type": "string"
              },
              "CostCenter1": {
                "description": "The cost center 1 this position is associated with",
                "type": "string"
              },
              "CostCenter2": {
                "description": "The cost center 2 this position is associated with",
                "type": "string"
              },
              "CustomFields": {
                "description": "The custom fields of this document position",
                "type": "array"
              },
              "DocumentId": {
                "format": "int32",
                "description": "The Id of the document the position belongs to",
                "type": "integer"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        },
        "Status": {
          "description": "The status of this credit note",
          "enum": [
            "Draft",
            "WaitingForReview",
            "Sent",
            "PartlyPaid",
            "CompletelyPaid",
            "Canceled",
            "WaitingForApproval",
            "Approved"
          ],
          "type": "string"
        },
        "CancellationInformation": {
          "description": "The list of cancellations",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "Id": {
                "format": "int32",
                "type": "integer"
              },
              "Number": {
                "type": "string"
              }
            }
          }
        },
        "Currency": {
          "description": "The ISO 4217 code of the currency of this document.",
          "maxLength": 3,
          "minLength": 0,
          "type": "string"
        },
        "ExchangeRate": {
          "format": "double",
          "description": "The exchange rate to Euro.\r\n            While the document is in a draft state, the exchange rate reflects the current exchange rate of ECB.\r\n            After the document has been sent, the exchange rate at that date will be returned.",
          "type": "number"
        },
        "DeliveryDate": {
          "format": "date-time",
          "description": "The date of the delivery of the products or services.",
          "type": "string"
        },
        "PaymentConditionId": {
          "format": "int32",
          "description": "The Id of the payment condition.",
          "type": "integer"
        },
        "DeliveryConditionId": {
          "format": "int32",
          "description": "The Id of the delivery condition.",
          "type": "integer"
        },
        "PaymentCondition": {
          "description": "The payment condition that applies to this document",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The name of document condition",
              "type": "string"
            },
            "Text": {
              "description": "The text of condition",
              "type": "string"
            },
            "DisplayText": {
              "description": "The text with replaced due days",
              "type": "string"
            },
            "DueInDays": {
              "format": "int32",
              "description": "The payment due date in days",
              "type": "integer"
            },
            "Type": {
              "description": "The type of this condition",
              "enum": [
                "PaymentConditions",
                "DeliveryConditions",
                "NotDefined"
              ],
              "type": "string"
            },
            "WarningDays": {
              "format": "int32",
              "description": "The payment due date in days of a warning document",
              "type": "integer"
            },
            "ReminderDays": {
              "format": "int32",
              "description": "The payment due date in days of a reminder document",
              "type": "integer"
            },
            "Language": {
              "description": "The language of the condition, as two-letter ISO-Code, for example 'DE'",
              "type": "string"
            },
            "DocumentEarlyPayments": {
              "description": "The list of early payment conditions that belong to this document condition (i.e. Skonto)",
              "type": "array",
              "items": {
                "description": "The document early payment entry represents a rule in days before which a discount is granted on an invoice.",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "DeliveryCondition": {
          "description": "The delivery condition that applies to this document",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The name of document condition",
              "type": "string"
            },
            "Text": {
              "description": "The text of condition",
              "type": "string"
            },
            "DisplayText": {
              "description": "The text with replaced due days",
              "type": "string"
            },
            "DueInDays": {
              "format": "int32",
              "description": "The payment due date in days",
              "type": "integer"
            },
            "Type": {
              "description": "The type of this condition",
              "enum": [
                "PaymentConditions",
                "DeliveryConditions",
                "NotDefined"
              ],
              "type": "string"
            },
            "WarningDays": {
              "format": "int32",
              "description": "The payment due date in days of a warning document",
              "type": "integer"
            },
            "ReminderDays": {
              "format": "int32",
              "description": "The payment due date in days of a reminder document",
              "type": "integer"
            },
            "Language": {
              "description": "The language of the condition, as two-letter ISO-Code, for example 'DE'",
              "type": "string"
            },
            "DocumentEarlyPayments": {
              "description": "The list of early payment conditions that belong to this document condition (i.e. Skonto)",
              "type": "array",
              "items": {
                "description": "The document early payment entry represents a rule in days before which a discount is granted on an invoice.",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "DiscountType": {
          "description": "Whether the document discount is specified as a total or a percentage.",
          "enum": [
            "Percent",
            "NetValue",
            "NotSet"
          ],
          "type": "string"
        },
        "Discount": {
          "format": "double",
          "description": "A discount that should be applied to the total sum.\r\n            This is either a total or a percantage value, depending on the DiscountType.",
          "type": "number"
        },
        "Margin": {
          "format": "double",
          "description": "A margin (as a percentage) that should be applied to the total sum.\r\n            This margin will be equally distributed over all positions.",
          "type": "number"
        },
        "TaxOption": {
          "description": "The tax rule that should apply to this document.\r\n            VAT is most commonly used for documents within the same country.",
          "enum": [
            "VatApplicable",
            "FreeThirdCountryTerritory",
            "FreeEuropeanUnionWithVatId",
            "FreeEuropeanUnionNoVatId",
            "Inverse",
            "IntraCommunityDelivery",
            "ExportDelivery",
            "FreeOther",
            "FreeYouthSupport"
          ],
          "type": "string"
        },
        "ServiceOption": {
          "description": "Whether the positions in this document are a delivery or any other kind of service.",
          "enum": [
            "None",
            "Delivery",
            "Service",
            "DeliveryAndService"
          ],
          "type": "string"
        },
        "NetTotal": {
          "format": "decimal",
          "description": "The net sum of the document. This is calculated considering all positions, position and document margin as well as position and document discount.\r\n            The sum is to be interpreted in the document currency.\r\n            Read-only.",
          "type": "number"
        },
        "GrossTotal": {
          "format": "decimal",
          "description": "The gross sum of the document. This is calculated considering all positions, position taxes, position and document margin as well as position and document discount.\r\n            The sum is to be interpreted in the document currency.\r\n            Read-only.",
          "type": "number"
        },
        "VatTotal": {
          "format": "decimal",
          "description": "The sum of the position VAT.\r\n            The sum is to be interpreted in the document currency.\r\n            Read-only.",
          "type": "number"
        },
        "PaidTotal": {
          "format": "decimal",
          "description": "The sum of received payments for this document.\r\n            The sum is to be interpreted in the document currency.\r\n            Read-only.",
          "type": "number"
        },
        "Type": {
          "description": "The type of the document",
          "enum": [
            "Quotation",
            "Invoice",
            "DeliveryNote",
            "Warning",
            "Reminder",
            "Cancellation",
            "CreditNote",
            "Confirmation",
            "IncomingInvoice",
            "Undefined",
            "Order",
            "PriceInquery",
            "Letter",
            "Minute",
            "Akonto"
          ],
          "type": "string"
        },
        "AddressText": {
          "description": "The receiver address text of the document",
          "type": "string"
        },
        "CompanyAddressId": {
          "format": "int32",
          "description": "The id of the postal address of the receiving company",
          "type": "integer"
        },
        "CompanyAddress": {
          "description": "The postal address of the receiving company",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "City": {
              "description": "The city of this address",
              "type": "string"
            },
            "Street": {
              "description": "The street name of this address",
              "type": "string"
            },
            "HouseNumber": {
              "description": "The house number of this address",
              "type": "string"
            },
            "ZipCode": {
              "description": "The ZIP or Postal Code of this address",
              "type": "string"
            },
            "AddressLine2": {
              "description": "The secondary address line, c/o details, etc.",
              "type": "string"
            },
            "Description": {
              "description": "The description of this address",
              "type": "string"
            },
            "Country": {
              "description": "The ISO 3166-1 alpha-2 country code of this address",
              "type": "string"
            },
            "Phone": {
              "description": "The phone number of this address",
              "type": "string"
            },
            "Fax": {
              "description": "The fax number of this address",
              "type": "string"
            },
            "Email": {
              "description": "The email address of this address",
              "type": "string"
            },
            "Website": {
              "description": "The website of this address",
              "type": "string"
            },
            "IsStandard": {
              "description": "Whether this address is the standard address of a company",
              "type": "boolean"
            },
            "DefaultForDocumentType": {
              "description": "The document type this address should be used as a standard for",
              "enum": [
                "Quotation",
                "Invoice",
                "DeliveryNote",
                "Warning",
                "Reminder",
                "Cancellation",
                "CreditNote",
                "Confirmation",
                "IncomingInvoice",
                "Undefined",
                "Order",
                "PriceInquery",
                "Letter",
                "Minute",
                "Akonto"
              ],
              "type": "string"
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "Subject": {
          "description": "The subject of the document including the placeholders",
          "type": "string"
        },
        "CalculatedSubject": {
          "description": "The calcuated subject of the document.\r\n            The subject includes the final data, without the placeholders.",
          "type": "string"
        },
        "Header": {
          "description": "The header text on the document",
          "type": "string"
        },
        "Footer": {
          "description": "The footer text on the document",
          "type": "string"
        },
        "DocumentTemplateId": {
          "format": "int32",
          "description": "The document template id",
          "type": "integer"
        },
        "Number": {
          "description": "The number of the document, auto generated by the HQ",
          "type": "string"
        },
        "ContactPersonId": {
          "format": "int32",
          "description": "The id of the responsible contact person at the receiving company",
          "type": "integer"
        },
        "ContactPerson": {
          "description": "The responsible contact person at the receiving company",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "FirstName": {
              "description": "The first name of the contact person",
              "type": "string"
            },
            "LastName": {
              "description": "The last name of the contact person",
              "type": "string"
            },
            "Position": {
              "description": "The position of the contact person",
              "type": "string"
            },
            "CompanyId": {
              "format": "int32",
              "description": "The Id of the company that the contact person belongs to",
              "type": "integer"
            },
            "PhoneLandline": {
              "description": "The landline phone number of the contact person",
              "type": "string"
            },
            "PhoneMobile": {
              "description": "The mobile phone number of the contact person",
              "type": "string"
            },
            "Salutation": {
              "description": "The salutation of the contact person",
              "type": "string"
            },
            "Birthdate": {
              "description": "The birth date of the user",
              "type": "string"
            },
            "SalutationForm": {
              "description": "The salutation form of the contact person. The value can be \"Neutral\", \"Formal\", \"Informal\" or null.",
              "enum": [
                "Formal",
                "Informal",
                "Neutral",
                "NotSet"
              ],
              "type": "string"
            },
            "Title": {
              "description": "The academic title of the contact person",
              "type": "string"
            },
            "Language": {
              "description": "The preferred contact language of this contact person, in two-letter ISO-Code, for example 'DE'",
              "type": "string"
            },
            "DefaultAddressId": {
              "format": "int32",
              "description": "The id of the default address of this contact person",
              "type": "integer"
            },
            "Addresses": {
              "description": "All addresses of the contact person",
              "type": "array",
              "items": {
                "description": "A company address represents one of many addresses of companies.",
                "type": "object"
              }
            },
            "DefaultAddress": {
              "description": "The default address of this contact person",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "CustomFields": {
              "description": "The customfields associated with this contact person",
              "type": "array",
              "items": {
                "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
                "type": "object"
              }
            },
            "Company": {
              "description": "The company that the contact person belongs to",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "CompanyId": {
          "format": "int32",
          "description": "The id of the company which is the receiver of the document",
          "type": "integer"
        },
        "Company": {
          "description": "The company which is the receiver of the document",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The name of the company",
              "type": "string"
            },
            "IndustrialSector": {
              "description": "The company's industrial sector",
              "type": "string"
            },
            "Description": {
              "description": "A longer description of the company",
              "type": "string"
            },
            "IBAN": {
              "description": "The IBAN of the company",
              "type": "string"
            },
            "BIC": {
              "description": "The BIC of the company",
              "type": "string"
            },
            "DebitorNumber": {
              "format": "int32",
              "description": "The company's debitor number",
              "type": "integer"
            },
            "CreditorNumber": {
              "format": "int32",
              "description": "The company's creditor number",
              "type": "integer"
            },
            "TaxId": {
              "description": "The company's tax id",
              "type": "string"
            },
            "DefaultDeliveryConditionId": {
              "format": "int32",
              "description": "The id of the default delivery condition of this company",
              "type": "integer"
            },
            "DefaultDeliveryCondition": {
              "description": "The default delivery condition of this company",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "DefaultPaymentConditionId": {
              "format": "int32",
              "description": "The id of the default payment condition of this company",
              "type": "integer"
            },
            "DefaultPaymentCondition": {
              "description": "The default payment condition of this company",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "DefaultAddress": {
              "description": "The default address of this company",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Addresses": {
              "description": "All addresses of the company",
              "type": "array",
              "items": {
                "description": "A company address represents one of many addresses of companies.",
                "type": "object"
              }
            },
            "ResponsibleUsers": {
              "description": "The list of the responsible users of this company",
              "type": "array",
              "items": {
                "description": "A user represents a user in your HQ system.",
                "type": "object"
              }
            },
            "CustomFields": {
              "description": "The customfields associated with this company",
              "type": "array",
              "items": {
                "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
                "type": "object"
              }
            },
            "CompanyTypes": {
              "description": "The company types associated with this company",
              "type": "array",
              "items": {
                "description": "This is a connection between a company and a company type.\r\n            A company can have more than one type and can have a different company number for each type.",
                "type": "object"
              }
            },
            "Files": {
              "description": "The files associated with this company",
              "type": "array",
              "items": {
                "description": "A file represents a user upload or HQ-generated PDF documents.",
                "type": "object"
              }
            },
            "Subsystems": {
              "description": "The subsystems this company is associated with",
              "type": "array",
              "items": {
                "description": "A subsystem represents a tenant within a customer's HQ",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "InternalContactPersonId": {
          "format": "int32",
          "description": "The id of the HQ user responsible for this document",
          "type": "integer"
        },
        "InternalContactPerson": {
          "description": "The HQ user repsonsible for this document",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "FirstName": {
              "description": "The first name of the user",
              "type": "string"
            },
            "LastName": {
              "description": "The last name of the user",
              "type": "string"
            },
            "UserName": {
              "description": "The user's user name in HQ",
              "type": "string"
            },
            "EMailWork": {
              "description": "The work email of the user",
              "type": "string"
            },
            "Salutation": {
              "description": "The salutation of the user, i.e. Mrs. or Mr.",
              "type": "string"
            },
            "Title": {
              "description": "The professional title of the user",
              "type": "string"
            },
            "EmployeeNumber": {
              "description": "The employee number of the user",
              "type": "string"
            },
            "Department": {
              "description": "The department of the user",
              "type": "string"
            },
            "BirthDate": {
              "format": "date-time",
              "description": "The birth date of the user",
              "type": "string"
            },
            "FederalState": {
              "description": "The federal state of the user",
              "type": "string"
            },
            "Country": {
              "description": "The country of the user",
              "type": "string"
            },
            "BasicLoadInHours": {
              "format": "double",
              "description": "The basic load in hours of the user",
              "type": "number"
            },
            "EntryDate": {
              "format": "date-time",
              "description": "The entry date of the user",
              "type": "string"
            },
            "LeavingDate": {
              "format": "date-time",
              "description": "The leaving date of the user",
              "type": "string"
            },
            "PhoneLandlinePrivate": {
              "description": "The private phone number of the user - landline",
              "type": "string"
            },
            "PhoneLandlineWork": {
              "description": "The work phone number of the user - landline",
              "type": "string"
            },
            "PhoneMobilePrivate": {
              "description": "The private phone number of the user - mobile",
              "type": "string"
            },
            "PhoneMobileWork": {
              "description": "The work phon number of the user - mobile",
              "type": "string"
            },
            "UserWorkingHours": {
              "description": "The custom fields of the user",
              "type": "array",
              "items": {
                "description": "The weekly working hours user",
                "type": "object"
              }
            },
            "CustomFields": {
              "description": "The custom fields of the user",
              "type": "array",
              "items": {
                "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
                "type": "object"
              }
            },
            "UserGroups": {
              "description": "The user groups of the user",
              "type": "array",
              "items": {
                "description": "The user groups a user is in.",
                "type": "object"
              }
            },
            "ResourceGroup": {
              "description": "The resource group of the user",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Absences": {
              "description": "The absences of the user",
              "type": "array",
              "items": {
                "description": "An absence represents a time of absence from work, for example holidays or sickness. \r\n            Absences can be either paid or unpaid.",
                "type": "object"
              }
            },
            "Assignments": {
              "description": "The tasks the user is assigned to",
              "type": "array",
              "items": {
                "description": "The assignment of a user to a task",
                "type": "object"
              }
            },
            "Reportings": {
              "description": "The reportings of this user",
              "type": "array",
              "items": {
                "description": "A user reporting represents a logged time of a user on a specific task in HQ.",
                "type": "object"
              }
            },
            "ProjectMembers": {
              "description": "The allocations of this user to projects",
              "type": "array",
              "items": {
                "description": "A project member links a user to a project. It includes the project role and the charge rates\r\n            for the link.",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "LeadId": {
          "format": "int32",
          "description": "The id of the lead related to the document",
          "type": "integer"
        },
        "Lead": {
          "description": "The lead related to the document",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The name of the lead",
              "type": "string"
            },
            "CompanyName": {
              "description": "The name of the company that this lead is assigned to, read-only",
              "type": "string"
            },
            "Number": {
              "description": "The number of the lead",
              "type": "string"
            },
            "Company": {
              "description": "The company this lead belongs to",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Status": {
              "description": "The status of the lead",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "StatusId": {
              "format": "int32",
              "description": "The Id of the status of the lead",
              "type": "integer"
            },
            "CashOn": {
              "format": "date-time",
              "description": "The expected sales date",
              "type": "string"
            },
            "ClosingProbability": {
              "format": "int32",
              "description": "The probability of closing the lead, in percent",
              "type": "integer"
            },
            "Currency": {
              "description": "The ISO 4217 code of the currency of the lead volume",
              "maxLength": 3,
              "minLength": 0,
              "type": "string"
            },
            "Volume": {
              "format": "double",
              "description": "The financial volume when closing the lead",
              "type": "number"
            },
            "CompanyId": {
              "format": "int32",
              "description": "The Id of the company this lead belongs to",
              "type": "integer"
            },
            "CustomFields": {
              "description": "The custom fields of this lead",
              "type": "array",
              "items": {
                "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
                "type": "object"
              }
            },
            "ResponsibleUserId": {
              "format": "int32",
              "description": "The user id of the HQ user responsible for this lead",
              "type": "integer"
            },
            "ResponsibleUser": {
              "description": "The HQ user responsible for this lead",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "SalesCampaigns": {
              "description": "List of all Sales Campaigns for this Lead",
              "type": "array",
              "items": {
                "description": "Represents the status a lead is in",
                "type": "object"
              }
            },
            "ContactPersons": {
              "description": "List of all contact persons for this Lead",
              "type": "array",
              "items": {
                "description": "A contact person represents a person that works for a company you do business with. A company can have many contact persons.",
                "type": "object"
              }
            },
            "Subsystems": {
              "description": "The subsystems this lead is associated with",
              "type": "array",
              "items": {
                "description": "A subsystem represents a tenant within a customer's HQ",
                "type": "object"
              }
            },
            "ProjectId": {
              "format": "int32",
              "description": "The project id of the lead",
              "type": "integer"
            },
            "Project": {
              "description": "The project of the lead",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "SyncId": {
          "description": "A unique identifier for other sync clients",
          "type": "string"
        },
        "ProjectId": {
          "format": "int32",
          "description": "the id of the project related to the document",
          "type": "integer"
        },
        "Project": {
          "description": "The project related to the document",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Number": {
              "description": "The number of the project",
              "type": "string"
            },
            "Name": {
              "description": "The name of the project",
              "type": "string"
            },
            "Status": {
              "description": "The current status description of the project",
              "type": "string"
            },
            "PlannedStartDate": {
              "format": "date-time",
              "description": "The planned start date of the first task of the project",
              "type": "string"
            },
            "PlannedEndDate": {
              "format": "date-time",
              "description": "The planned end date of the last task of the project",
              "type": "string"
            },
            "StartDate": {
              "format": "date-time",
              "description": "The planned start date of the project",
              "type": "string"
            },
            "EndDate": {
              "format": "date-time",
              "description": "The planned end date of the project",
              "type": "string"
            },
            "AworkSyncId": {
              "description": "The Id from the linked awork project",
              "type": "string"
            },
            "Subsystems": {
              "description": "The subsystems this project is associated with",
              "type": "array",
              "items": {
                "description": "A subsystem represents a tenant within a customer's HQ",
                "type": "object"
              }
            },
            "ProjectTemplateId": {
              "format": "int32",
              "description": "The id of the project template",
              "type": "integer"
            },
            "ProjectTemplate": {
              "description": "The template of this project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "ProjectStatusId": {
              "format": "int32",
              "description": "The id of the project status",
              "type": "integer"
            },
            "CompanyId": {
              "format": "int32",
              "description": "The id of the company",
              "type": "integer"
            },
            "LeadId": {
              "format": "int32",
              "description": "The Id of the lead",
              "type": "integer"
            },
            "InvoiceAddressId": {
              "format": "int32",
              "description": "Id of the address for invoices of this project",
              "type": "integer"
            },
            "DeliveryAddressId": {
              "format": "int32",
              "description": "Id of the address for the deliveries of this project",
              "type": "integer"
            },
            "ResponsibleUserId": {
              "format": "int32",
              "description": "The id of the user which is responsible for this (internal) project",
              "type": "integer"
            },
            "ProjectStatus": {
              "description": "The status of the project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Company": {
              "description": "The company this project is associated with",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "ResponsibleUser": {
              "description": "The user which is responsible for this (internal) project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "DeliveryAddress": {
              "description": "The address for delvieries of this project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "InvoiceAddress": {
              "description": "The address for delvieries of this project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Lead": {
              "description": "The lead of the project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "CustomFields": {
              "description": "The custom fields of this project",
              "type": "array",
              "items": {
                "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
                "type": "object"
              }
            },
            "Reportings": {
              "description": "The user reportings of this project",
              "type": "array",
              "items": {
                "description": "A user reporting represents a logged time of a user on a specific task in HQ.",
                "type": "object"
              }
            },
            "Files": {
              "description": "The files of this project",
              "type": "array",
              "items": {
                "description": "A file represents a user upload or HQ-generated PDF documents.",
                "type": "object"
              }
            },
            "Members": {
              "description": "The members of this project",
              "type": "array",
              "items": {
                "description": "A project member links a user to a project. It includes the project role and the charge rates\r\n            for the link.",
                "type": "object"
              }
            },
            "ContactHistories": {
              "description": "Contact histories linked to this project.",
              "type": "array",
              "items": {
                "description": "The contact history represents any contact you had with a contact person. For example, any meeting, phone call or email can be a contact history entry.",
                "type": "object"
              }
            },
            "ContactPersons": {
              "description": "Contact persons linked to this project.",
              "type": "array",
              "items": {
                "description": "A contact person represents a person that works for a company you do business with. A company can have many contact persons.",
                "type": "object"
              }
            },
            "Articles": {
              "description": "All articles linked to the project",
              "type": "array",
              "items": {
                "description": "An article is a stock item that your company sells, for example a digital camera. \r\n            An article can also be a service or activity that your company performs, for example a digital design. \r\n            Articles can be used to create positions on invoices or quotations, among others.",
                "type": "object"
              }
            },
            "ProjectBudgets": {
              "description": "All articles linked to the project",
              "type": "array",
              "items": {
                "description": "The project budget for a project",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "Note": {
          "description": "The comment on the document",
          "type": "string"
        },
        "CompanyPurchaseOrderNumber": {
          "description": "The purchase order number on the document",
          "type": "string"
        },
        "Language": {
          "description": "The language of the document as two-letter ISOCode, for example 'DE'",
          "type": "string"
        },
        "DocumentFile": {
          "description": "The generated pdf file",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The name of the file",
              "type": "string"
            },
            "Size": {
              "format": "double",
              "description": "The size in bytes",
              "type": "number"
            },
            "HasContent": {
              "description": "Returns true if the file has content (was uploaded yet)",
              "type": "boolean"
            },
            "IsDirectory": {
              "description": "Returns true if the file entity is a directory, otherwise false",
              "type": "boolean"
            },
            "DirectoryId": {
              "format": "int32",
              "description": "The id of the parent directory",
              "type": "integer"
            },
            "FileRelations": {
              "description": "List of all relations of a",
              "type": "array",
              "items": {
                "description": "A file relation represents a link between a file and another entity like a project or article.",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "DocumentImage": {
          "description": "The generated pdf file, as an image",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The name of the file",
              "type": "string"
            },
            "Size": {
              "format": "double",
              "description": "The size in bytes",
              "type": "number"
            },
            "HasContent": {
              "description": "Returns true if the file has content (was uploaded yet)",
              "type": "boolean"
            },
            "IsDirectory": {
              "description": "Returns true if the file entity is a directory, otherwise false",
              "type": "boolean"
            },
            "DirectoryId": {
              "format": "int32",
              "description": "The id of the parent directory",
              "type": "integer"
            },
            "FileRelations": {
              "description": "List of all relations of a",
              "type": "array",
              "items": {
                "description": "A file relation represents a link between a file and another entity like a project or article.",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "Id": {
          "format": "int32",
          "description": "The unique identifier of this entity",
          "type": "integer"
        },
        "CreatedBy": {
          "format": "int32",
          "description": "The id of the user who created this entity",
          "type": "integer"
        },
        "UpdatedBy": {
          "format": "int32",
          "description": "The id of the last user who modified this entity",
          "type": "integer"
        },
        "CreatedOn": {
          "format": "date-time",
          "description": "The date and time this entity was created, in UTC",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "description": "The last date and time this entity was updated, in UTC",
          "type": "string"
        }
      }
    },
    "DocumentPosition": {
      "description": "A document position represents a position on a quotation or invoice.",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "IsOptional": {
          "description": "Whether this position is optional. Only valid in quotations.",
          "type": "boolean"
        },
        "Tax": {
          "format": "double",
          "description": "The position tax rate, for example 19%",
          "type": "number"
        },
        "Price": {
          "format": "decimal",
          "description": "The position price, in the currency of the document",
          "type": "number"
        },
        "Discount": {
          "format": "double",
          "description": "The percentage discount that should be applied to this position sum",
          "type": "number"
        },
        "Margin": {
          "format": "double",
          "description": "The margin that should be applied to this position sum",
          "type": "number"
        },
        "ExcludeFromEarlyPayment": {
          "description": "Whether this position should be excluded from early payment discount calculations",
          "type": "boolean"
        },
        "TotalPrice": {
          "format": "double",
          "description": "The total price under consideration of margin and discount",
          "type": "number"
        },
        "TotalUnitPrice": {
          "format": "double",
          "description": "The total unit price under consideration of margin and discount",
          "type": "number"
        },
        "TotalVat": {
          "format": "double",
          "description": "The total VAT of this position under consideration of margin and discount",
          "type": "number"
        },
        "UserReportings": {
          "description": "The user reportings which have been billed with this document position",
          "type": "array",
          "items": {
            "description": "A user reporting represents a logged time of a user on a specific task in HQ.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "Note": {
                "description": "The user-provided note of this reporting",
                "type": "string"
              },
              "Duration": {
                "format": "int64",
                "description": "The reporting duration, in seconds",
                "type": "integer"
              },
              "UserId": {
                "format": "int32",
                "description": "The id of the user this reporting is for",
                "type": "integer"
              },
              "User": {
                "description": "The user this reporting is for",
                "type": "object"
              },
              "ChargeRateValue": {
                "format": "double",
                "description": "The external charge rate value",
                "type": "number"
              },
              "InternalChargeRateValue": {
                "format": "double",
                "description": "The internal charge rate value",
                "type": "number"
              },
              "IsApproved": {
                "description": "Whether this reporting was approved",
                "type": "boolean"
              },
              "StartOn": {
                "format": "date-time",
                "description": "The date of the reporting",
                "type": "string"
              },
              "BreakDuration": {
                "format": "int64",
                "description": "The break duration of this reporting, in seconds",
                "type": "integer"
              },
              "ProjectId": {
                "format": "int32",
                "description": "The id of the project that this reporting belongs to",
                "type": "integer"
              },
              "Project": {
                "description": "The project that this reporting belongs to",
                "type": "object"
              },
              "TaskId": {
                "format": "int32",
                "description": "The id of the task this reporting was created for",
                "type": "integer"
              },
              "Task": {
                "description": "The task this reporting was created for",
                "type": "object"
              },
              "CurrencyInternalChargeRateValue": {
                "description": "The ISO 4217 code of the currency of the internal charge rate value",
                "maxLength": 3,
                "minLength": 0,
                "type": "string"
              },
              "CurrencyChargeRateValue": {
                "description": "The ISO 4217 code of the currency of the external charge rate",
                "maxLength": 3,
                "minLength": 0,
                "type": "string"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        },
        "Interval": {
          "description": "The interval of the recurrence.",
          "enum": [
            "Once",
            "Annually",
            "HalfAnnually",
            "QuarterAnnually",
            "Monthly",
            "Weekly",
            "TwoYears",
            "ThreeYears",
            "FourYears",
            "FiveYears",
            "Fortnightly"
          ],
          "type": "string"
        },
        "Text": {
          "description": "The position text, as HTML",
          "type": "string"
        },
        "Unit": {
          "description": "The position unit",
          "type": "string"
        },
        "Type": {
          "description": "The type of this position",
          "enum": [
            "Article",
            "Freetext",
            "OpenPosition",
            "UserReporting",
            "ProjectInvoice",
            "ProjectArticle",
            "ProjectPlan",
            "Subtotal",
            "PositionGroup",
            "GroupHeader",
            "Textline"
          ],
          "type": "string"
        },
        "Order": {
          "format": "int32",
          "description": "The order of this position in the document",
          "type": "integer"
        },
        "ArticleId": {
          "format": "int32",
          "description": "The Id of the article that is associated with this position",
          "type": "integer"
        },
        "ProjectId": {
          "format": "int32",
          "description": "The Id Of the Project",
          "type": "integer"
        },
        "Article": {
          "description": "The article that is associated with this position",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The name of this article",
              "type": "string"
            },
            "Number": {
              "description": "The number as identifier of the article",
              "type": "string"
            },
            "Description": {
              "description": "The description of the article",
              "type": "string"
            },
            "BaseType": {
              "description": "The baset ype of the article",
              "enum": [
                "Stock",
                "Action",
                "Material",
                "NotSet"
              ],
              "type": "string"
            },
            "CategoryId": {
              "format": "int32",
              "description": "The category ID of the article",
              "type": "integer"
            },
            "Category": {
              "description": "The article category",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "SalesPrices": {
              "description": "The list of possible sales prices",
              "type": "array",
              "items": {
                "description": "An sales price represents a price of the article which can be used for creating ainvoice.",
                "type": "object"
              }
            },
            "PurchasingPrices": {
              "description": "The list of possible purchasing prices",
              "type": "array",
              "items": {
                "description": "A purchasing price represents a price of the article which can be used for creating a quotation.",
                "type": "object"
              }
            },
            "Stocks": {
              "description": "The list of stocks this article can be stored in",
              "type": "array",
              "items": {
                "description": "Represents the current stock of an article in a specific storage. Articles can have multiple stocks, one for each storage they are located in.",
                "type": "object"
              }
            },
            "CustomFields": {
              "description": "The customfields associated with this article",
              "type": "array",
              "items": {
                "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
                "type": "object"
              }
            },
            "Files": {
              "description": "The files associated to the article",
              "type": "array",
              "items": {
                "description": "A file represents a user upload or HQ-generated PDF documents.",
                "type": "object"
              }
            },
            "InternalExternalArticle": {
              "description": "The Make or Buy type of this article",
              "enum": [
                "internalArticle",
                "externalArticle",
                "mixedArticle",
                "NotSet"
              ],
              "type": "string"
            },
            "CostCenter1": {
              "description": "The cost center 1 this article is associated with",
              "type": "string"
            },
            "CostCenter2": {
              "description": "The cost center 2 this article is associated with",
              "type": "string"
            },
            "BookingAccount": {
              "description": "The booking account this article is associated with",
              "type": "string"
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "Amount": {
          "format": "double",
          "description": "The amount of this position in this document",
          "type": "number"
        },
        "ProjectBudgetId": {
          "format": "int32",
          "description": "The Id of the project budget",
          "type": "integer"
        },
        "CostTypeId": {
          "format": "int32",
          "description": "The if of the costType",
          "type": "integer"
        },
        "BookingAccount": {
          "description": "The booking account this position is associated with",
          "type": "string"
        },
        "CostCenter1": {
          "description": "The cost center 1 this position is associated with",
          "type": "string"
        },
        "CostCenter2": {
          "description": "The cost center 2 this position is associated with",
          "type": "string"
        },
        "CustomFields": {
          "description": "The custom fields of this document position",
          "type": "array",
          "items": {
            "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
            "required": [
              "Name",
              "Id"
            ],
            "type": "object",
            "properties": {
              "Name": {
                "description": "The name of this custom field",
                "type": "string"
              },
              "Value": {
                "description": "The value of this custom field",
                "type": "string"
              },
              "Type": {
                "description": "The type of this custom field",
                "type": "string"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        },
        "DocumentId": {
          "format": "int32",
          "description": "The Id of the document the position belongs to",
          "type": "integer"
        },
        "Id": {
          "format": "int32",
          "description": "The unique identifier of this entity",
          "type": "integer"
        },
        "CreatedBy": {
          "format": "int32",
          "description": "The id of the user who created this entity",
          "type": "integer"
        },
        "UpdatedBy": {
          "format": "int32",
          "description": "The id of the last user who modified this entity",
          "type": "integer"
        },
        "CreatedOn": {
          "format": "date-time",
          "description": "The date and time this entity was created, in UTC",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "description": "The last date and time this entity was updated, in UTC",
          "type": "string"
        }
      }
    },
    "CancellationInformation": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "Number": {
          "type": "string"
        }
      }
    },
    "ODataResponse[List[Byte]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        }
      }
    },
    "ODataResponse[List[DeliveryNote]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "description": "A delivery note represents a document you send to your customers on a delivery.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "DocumentDate": {
                "format": "date-time",
                "description": "The date of this delivery note",
                "type": "string"
              },
              "DeliveryDate": {
                "format": "date-time",
                "description": "The payment due date of this delivery note",
                "type": "string"
              },
              "Status": {
                "description": "The status of this delivery note",
                "type": "string"
              },
              "PaymentConditionId": {
                "format": "int32",
                "description": "The Id of the payment condition.",
                "type": "integer"
              },
              "DeliveryConditionId": {
                "format": "int32",
                "description": "The Id of the delivery condition.",
                "type": "integer"
              },
              "PaymentCondition": {
                "description": "The payment condition that applies to this document",
                "type": "object"
              },
              "DeliveryCondition": {
                "description": "The delivery condition that applies to this document",
                "type": "object"
              },
              "Positions": {
                "description": "The positions of this delivery note",
                "type": "array"
              },
              "Type": {
                "description": "The type of the document",
                "type": "string"
              },
              "AddressText": {
                "description": "The receiver address text of the document",
                "type": "string"
              },
              "CompanyAddressId": {
                "format": "int32",
                "description": "The id of the postal address of the receiving company",
                "type": "integer"
              },
              "CompanyAddress": {
                "description": "The postal address of the receiving company",
                "type": "object"
              },
              "Subject": {
                "description": "The subject of the document including the placeholders",
                "type": "string"
              },
              "CalculatedSubject": {
                "description": "The calcuated subject of the document.\r\n            The subject includes the final data, without the placeholders.",
                "type": "string"
              },
              "Header": {
                "description": "The header text on the document",
                "type": "string"
              },
              "Footer": {
                "description": "The footer text on the document",
                "type": "string"
              },
              "DocumentTemplateId": {
                "format": "int32",
                "description": "The document template id",
                "type": "integer"
              },
              "Number": {
                "description": "The number of the document, auto generated by the HQ",
                "type": "string"
              },
              "ContactPersonId": {
                "format": "int32",
                "description": "The id of the responsible contact person at the receiving company",
                "type": "integer"
              },
              "ContactPerson": {
                "description": "The responsible contact person at the receiving company",
                "type": "object"
              },
              "CompanyId": {
                "format": "int32",
                "description": "The id of the company which is the receiver of the document",
                "type": "integer"
              },
              "Company": {
                "description": "The company which is the receiver of the document",
                "type": "object"
              },
              "InternalContactPersonId": {
                "format": "int32",
                "description": "The id of the HQ user responsible for this document",
                "type": "integer"
              },
              "InternalContactPerson": {
                "description": "The HQ user repsonsible for this document",
                "type": "object"
              },
              "LeadId": {
                "format": "int32",
                "description": "The id of the lead related to the document",
                "type": "integer"
              },
              "Lead": {
                "description": "The lead related to the document",
                "type": "object"
              },
              "SyncId": {
                "description": "A unique identifier for other sync clients",
                "type": "string"
              },
              "ProjectId": {
                "format": "int32",
                "description": "the id of the project related to the document",
                "type": "integer"
              },
              "Project": {
                "description": "The project related to the document",
                "type": "object"
              },
              "Note": {
                "description": "The comment on the document",
                "type": "string"
              },
              "CompanyPurchaseOrderNumber": {
                "description": "The purchase order number on the document",
                "type": "string"
              },
              "Language": {
                "description": "The language of the document as two-letter ISOCode, for example 'DE'",
                "type": "string"
              },
              "DocumentFile": {
                "description": "The generated pdf file",
                "type": "object"
              },
              "DocumentImage": {
                "description": "The generated pdf file, as an image",
                "type": "object"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "DeliveryNote": {
      "description": "A delivery note represents a document you send to your customers on a delivery.",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "DocumentDate": {
          "format": "date-time",
          "description": "The date of this delivery note",
          "type": "string"
        },
        "DeliveryDate": {
          "format": "date-time",
          "description": "The payment due date of this delivery note",
          "type": "string"
        },
        "Status": {
          "description": "The status of this delivery note",
          "enum": [
            "Draft",
            "WaitingForReview",
            "Sent",
            "PartlyPaid",
            "CompletelyPaid",
            "Canceled",
            "WaitingForApproval",
            "Approved"
          ],
          "type": "string"
        },
        "PaymentConditionId": {
          "format": "int32",
          "description": "The Id of the payment condition.",
          "type": "integer"
        },
        "DeliveryConditionId": {
          "format": "int32",
          "description": "The Id of the delivery condition.",
          "type": "integer"
        },
        "PaymentCondition": {
          "description": "The payment condition that applies to this document",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The name of document condition",
              "type": "string"
            },
            "Text": {
              "description": "The text of condition",
              "type": "string"
            },
            "DisplayText": {
              "description": "The text with replaced due days",
              "type": "string"
            },
            "DueInDays": {
              "format": "int32",
              "description": "The payment due date in days",
              "type": "integer"
            },
            "Type": {
              "description": "The type of this condition",
              "enum": [
                "PaymentConditions",
                "DeliveryConditions",
                "NotDefined"
              ],
              "type": "string"
            },
            "WarningDays": {
              "format": "int32",
              "description": "The payment due date in days of a warning document",
              "type": "integer"
            },
            "ReminderDays": {
              "format": "int32",
              "description": "The payment due date in days of a reminder document",
              "type": "integer"
            },
            "Language": {
              "description": "The language of the condition, as two-letter ISO-Code, for example 'DE'",
              "type": "string"
            },
            "DocumentEarlyPayments": {
              "description": "The list of early payment conditions that belong to this document condition (i.e. Skonto)",
              "type": "array",
              "items": {
                "description": "The document early payment entry represents a rule in days before which a discount is granted on an invoice.",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "DeliveryCondition": {
          "description": "The delivery condition that applies to this document",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The name of document condition",
              "type": "string"
            },
            "Text": {
              "description": "The text of condition",
              "type": "string"
            },
            "DisplayText": {
              "description": "The text with replaced due days",
              "type": "string"
            },
            "DueInDays": {
              "format": "int32",
              "description": "The payment due date in days",
              "type": "integer"
            },
            "Type": {
              "description": "The type of this condition",
              "enum": [
                "PaymentConditions",
                "DeliveryConditions",
                "NotDefined"
              ],
              "type": "string"
            },
            "WarningDays": {
              "format": "int32",
              "description": "The payment due date in days of a warning document",
              "type": "integer"
            },
            "ReminderDays": {
              "format": "int32",
              "description": "The payment due date in days of a reminder document",
              "type": "integer"
            },
            "Language": {
              "description": "The language of the condition, as two-letter ISO-Code, for example 'DE'",
              "type": "string"
            },
            "DocumentEarlyPayments": {
              "description": "The list of early payment conditions that belong to this document condition (i.e. Skonto)",
              "type": "array",
              "items": {
                "description": "The document early payment entry represents a rule in days before which a discount is granted on an invoice.",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "Positions": {
          "description": "The positions of this delivery note",
          "type": "array",
          "items": {
            "description": "A document position represents a position on a quotation or invoice.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "Text": {
                "description": "The position text, as HTML",
                "type": "string"
              },
              "Unit": {
                "description": "The position unit",
                "type": "string"
              },
              "Type": {
                "description": "The type of this position",
                "type": "string"
              },
              "Order": {
                "format": "int32",
                "description": "The order of this position in the document",
                "type": "integer"
              },
              "ArticleId": {
                "format": "int32",
                "description": "The Id of the article that is associated with this position",
                "type": "integer"
              },
              "ProjectId": {
                "format": "int32",
                "description": "The Id Of the Project",
                "type": "integer"
              },
              "Article": {
                "description": "The article that is associated with this position",
                "type": "object"
              },
              "Amount": {
                "format": "double",
                "description": "The amount of this position in this document",
                "type": "number"
              },
              "ProjectBudgetId": {
                "format": "int32",
                "description": "The Id of the project budget",
                "type": "integer"
              },
              "CostTypeId": {
                "format": "int32",
                "description": "The if of the costType",
                "type": "integer"
              },
              "BookingAccount": {
                "description": "The booking account this position is associated with",
                "type": "string"
              },
              "CostCenter1": {
                "description": "The cost center 1 this position is associated with",
                "type": "string"
              },
              "CostCenter2": {
                "description": "The cost center 2 this position is associated with",
                "type": "string"
              },
              "CustomFields": {
                "description": "The custom fields of this document position",
                "type": "array"
              },
              "DocumentId": {
                "format": "int32",
                "description": "The Id of the document the position belongs to",
                "type": "integer"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        },
        "Type": {
          "description": "The type of the document",
          "enum": [
            "Quotation",
            "Invoice",
            "DeliveryNote",
            "Warning",
            "Reminder",
            "Cancellation",
            "CreditNote",
            "Confirmation",
            "IncomingInvoice",
            "Undefined",
            "Order",
            "PriceInquery",
            "Letter",
            "Minute",
            "Akonto"
          ],
          "type": "string"
        },
        "AddressText": {
          "description": "The receiver address text of the document",
          "type": "string"
        },
        "CompanyAddressId": {
          "format": "int32",
          "description": "The id of the postal address of the receiving company",
          "type": "integer"
        },
        "CompanyAddress": {
          "description": "The postal address of the receiving company",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "City": {
              "description": "The city of this address",
              "type": "string"
            },
            "Street": {
              "description": "The street name of this address",
              "type": "string"
            },
            "HouseNumber": {
              "description": "The house number of this address",
              "type": "string"
            },
            "ZipCode": {
              "description": "The ZIP or Postal Code of this address",
              "type": "string"
            },
            "AddressLine2": {
              "description": "The secondary address line, c/o details, etc.",
              "type": "string"
            },
            "Description": {
              "description": "The description of this address",
              "type": "string"
            },
            "Country": {
              "description": "The ISO 3166-1 alpha-2 country code of this address",
              "type": "string"
            },
            "Phone": {
              "description": "The phone number of this address",
              "type": "string"
            },
            "Fax": {
              "description": "The fax number of this address",
              "type": "string"
            },
            "Email": {
              "description": "The email address of this address",
              "type": "string"
            },
            "Website": {
              "description": "The website of this address",
              "type": "string"
            },
            "IsStandard": {
              "description": "Whether this address is the standard address of a company",
              "type": "boolean"
            },
            "DefaultForDocumentType": {
              "description": "The document type this address should be used as a standard for",
              "enum": [
                "Quotation",
                "Invoice",
                "DeliveryNote",
                "Warning",
                "Reminder",
                "Cancellation",
                "CreditNote",
                "Confirmation",
                "IncomingInvoice",
                "Undefined",
                "Order",
                "PriceInquery",
                "Letter",
                "Minute",
                "Akonto"
              ],
              "type": "string"
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "Subject": {
          "description": "The subject of the document including the placeholders",
          "type": "string"
        },
        "CalculatedSubject": {
          "description": "The calcuated subject of the document.\r\n            The subject includes the final data, without the placeholders.",
          "type": "string"
        },
        "Header": {
          "description": "The header text on the document",
          "type": "string"
        },
        "Footer": {
          "description": "The footer text on the document",
          "type": "string"
        },
        "DocumentTemplateId": {
          "format": "int32",
          "description": "The document template id",
          "type": "integer"
        },
        "Number": {
          "description": "The number of the document, auto generated by the HQ",
          "type": "string"
        },
        "ContactPersonId": {
          "format": "int32",
          "description": "The id of the responsible contact person at the receiving company",
          "type": "integer"
        },
        "ContactPerson": {
          "description": "The responsible contact person at the receiving company",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "FirstName": {
              "description": "The first name of the contact person",
              "type": "string"
            },
            "LastName": {
              "description": "The last name of the contact person",
              "type": "string"
            },
            "Position": {
              "description": "The position of the contact person",
              "type": "string"
            },
            "CompanyId": {
              "format": "int32",
              "description": "The Id of the company that the contact person belongs to",
              "type": "integer"
            },
            "PhoneLandline": {
              "description": "The landline phone number of the contact person",
              "type": "string"
            },
            "PhoneMobile": {
              "description": "The mobile phone number of the contact person",
              "type": "string"
            },
            "Salutation": {
              "description": "The salutation of the contact person",
              "type": "string"
            },
            "Birthdate": {
              "description": "The birth date of the user",
              "type": "string"
            },
            "SalutationForm": {
              "description": "The salutation form of the contact person. The value can be \"Neutral\", \"Formal\", \"Informal\" or null.",
              "enum": [
                "Formal",
                "Informal",
                "Neutral",
                "NotSet"
              ],
              "type": "string"
            },
            "Title": {
              "description": "The academic title of the contact person",
              "type": "string"
            },
            "Language": {
              "description": "The preferred contact language of this contact person, in two-letter ISO-Code, for example 'DE'",
              "type": "string"
            },
            "DefaultAddressId": {
              "format": "int32",
              "description": "The id of the default address of this contact person",
              "type": "integer"
            },
            "Addresses": {
              "description": "All addresses of the contact person",
              "type": "array",
              "items": {
                "description": "A company address represents one of many addresses of companies.",
                "type": "object"
              }
            },
            "DefaultAddress": {
              "description": "The default address of this contact person",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "CustomFields": {
              "description": "The customfields associated with this contact person",
              "type": "array",
              "items": {
                "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
                "type": "object"
              }
            },
            "Company": {
              "description": "The company that the contact person belongs to",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "CompanyId": {
          "format": "int32",
          "description": "The id of the company which is the receiver of the document",
          "type": "integer"
        },
        "Company": {
          "description": "The company which is the receiver of the document",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The name of the company",
              "type": "string"
            },
            "IndustrialSector": {
              "description": "The company's industrial sector",
              "type": "string"
            },
            "Description": {
              "description": "A longer description of the company",
              "type": "string"
            },
            "IBAN": {
              "description": "The IBAN of the company",
              "type": "string"
            },
            "BIC": {
              "description": "The BIC of the company",
              "type": "string"
            },
            "DebitorNumber": {
              "format": "int32",
              "description": "The company's debitor number",
              "type": "integer"
            },
            "CreditorNumber": {
              "format": "int32",
              "description": "The company's creditor number",
              "type": "integer"
            },
            "TaxId": {
              "description": "The company's tax id",
              "type": "string"
            },
            "DefaultDeliveryConditionId": {
              "format": "int32",
              "description": "The id of the default delivery condition of this company",
              "type": "integer"
            },
            "DefaultDeliveryCondition": {
              "description": "The default delivery condition of this company",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "DefaultPaymentConditionId": {
              "format": "int32",
              "description": "The id of the default payment condition of this company",
              "type": "integer"
            },
            "DefaultPaymentCondition": {
              "description": "The default payment condition of this company",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "DefaultAddress": {
              "description": "The default address of this company",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Addresses": {
              "description": "All addresses of the company",
              "type": "array",
              "items": {
                "description": "A company address represents one of many addresses of companies.",
                "type": "object"
              }
            },
            "ResponsibleUsers": {
              "description": "The list of the responsible users of this company",
              "type": "array",
              "items": {
                "description": "A user represents a user in your HQ system.",
                "type": "object"
              }
            },
            "CustomFields": {
              "description": "The customfields associated with this company",
              "type": "array",
              "items": {
                "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
                "type": "object"
              }
            },
            "CompanyTypes": {
              "description": "The company types associated with this company",
              "type": "array",
              "items": {
                "description": "This is a connection between a company and a company type.\r\n            A company can have more than one type and can have a different company number for each type.",
                "type": "object"
              }
            },
            "Files": {
              "description": "The files associated with this company",
              "type": "array",
              "items": {
                "description": "A file represents a user upload or HQ-generated PDF documents.",
                "type": "object"
              }
            },
            "Subsystems": {
              "description": "The subsystems this company is associated with",
              "type": "array",
              "items": {
                "description": "A subsystem represents a tenant within a customer's HQ",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "InternalContactPersonId": {
          "format": "int32",
          "description": "The id of the HQ user responsible for this document",
          "type": "integer"
        },
        "InternalContactPerson": {
          "description": "The HQ user repsonsible for this document",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "FirstName": {
              "description": "The first name of the user",
              "type": "string"
            },
            "LastName": {
              "description": "The last name of the user",
              "type": "string"
            },
            "UserName": {
              "description": "The user's user name in HQ",
              "type": "string"
            },
            "EMailWork": {
              "description": "The work email of the user",
              "type": "string"
            },
            "Salutation": {
              "description": "The salutation of the user, i.e. Mrs. or Mr.",
              "type": "string"
            },
            "Title": {
              "description": "The professional title of the user",
              "type": "string"
            },
            "EmployeeNumber": {
              "description": "The employee number of the user",
              "type": "string"
            },
            "Department": {
              "description": "The department of the user",
              "type": "string"
            },
            "BirthDate": {
              "format": "date-time",
              "description": "The birth date of the user",
              "type": "string"
            },
            "FederalState": {
              "description": "The federal state of the user",
              "type": "string"
            },
            "Country": {
              "description": "The country of the user",
              "type": "string"
            },
            "BasicLoadInHours": {
              "format": "double",
              "description": "The basic load in hours of the user",
              "type": "number"
            },
            "EntryDate": {
              "format": "date-time",
              "description": "The entry date of the user",
              "type": "string"
            },
            "LeavingDate": {
              "format": "date-time",
              "description": "The leaving date of the user",
              "type": "string"
            },
            "PhoneLandlinePrivate": {
              "description": "The private phone number of the user - landline",
              "type": "string"
            },
            "PhoneLandlineWork": {
              "description": "The work phone number of the user - landline",
              "type": "string"
            },
            "PhoneMobilePrivate": {
              "description": "The private phone number of the user - mobile",
              "type": "string"
            },
            "PhoneMobileWork": {
              "description": "The work phon number of the user - mobile",
              "type": "string"
            },
            "UserWorkingHours": {
              "description": "The custom fields of the user",
              "type": "array",
              "items": {
                "description": "The weekly working hours user",
                "type": "object"
              }
            },
            "CustomFields": {
              "description": "The custom fields of the user",
              "type": "array",
              "items": {
                "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
                "type": "object"
              }
            },
            "UserGroups": {
              "description": "The user groups of the user",
              "type": "array",
              "items": {
                "description": "The user groups a user is in.",
                "type": "object"
              }
            },
            "ResourceGroup": {
              "description": "The resource group of the user",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Absences": {
              "description": "The absences of the user",
              "type": "array",
              "items": {
                "description": "An absence represents a time of absence from work, for example holidays or sickness. \r\n            Absences can be either paid or unpaid.",
                "type": "object"
              }
            },
            "Assignments": {
              "description": "The tasks the user is assigned to",
              "type": "array",
              "items": {
                "description": "The assignment of a user to a task",
                "type": "object"
              }
            },
            "Reportings": {
              "description": "The reportings of this user",
              "type": "array",
              "items": {
                "description": "A user reporting represents a logged time of a user on a specific task in HQ.",
                "type": "object"
              }
            },
            "ProjectMembers": {
              "description": "The allocations of this user to projects",
              "type": "array",
              "items": {
                "description": "A project member links a user to a project. It includes the project role and the charge rates\r\n            for the link.",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "LeadId": {
          "format": "int32",
          "description": "The id of the lead related to the document",
          "type": "integer"
        },
        "Lead": {
          "description": "The lead related to the document",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The name of the lead",
              "type": "string"
            },
            "CompanyName": {
              "description": "The name of the company that this lead is assigned to, read-only",
              "type": "string"
            },
            "Number": {
              "description": "The number of the lead",
              "type": "string"
            },
            "Company": {
              "description": "The company this lead belongs to",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Status": {
              "description": "The status of the lead",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "StatusId": {
              "format": "int32",
              "description": "The Id of the status of the lead",
              "type": "integer"
            },
            "CashOn": {
              "format": "date-time",
              "description": "The expected sales date",
              "type": "string"
            },
            "ClosingProbability": {
              "format": "int32",
              "description": "The probability of closing the lead, in percent",
              "type": "integer"
            },
            "Currency": {
              "description": "The ISO 4217 code of the currency of the lead volume",
              "maxLength": 3,
              "minLength": 0,
              "type": "string"
            },
            "Volume": {
              "format": "double",
              "description": "The financial volume when closing the lead",
              "type": "number"
            },
            "CompanyId": {
              "format": "int32",
              "description": "The Id of the company this lead belongs to",
              "type": "integer"
            },
            "CustomFields": {
              "description": "The custom fields of this lead",
              "type": "array",
              "items": {
                "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
                "type": "object"
              }
            },
            "ResponsibleUserId": {
              "format": "int32",
              "description": "The user id of the HQ user responsible for this lead",
              "type": "integer"
            },
            "ResponsibleUser": {
              "description": "The HQ user responsible for this lead",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "SalesCampaigns": {
              "description": "List of all Sales Campaigns for this Lead",
              "type": "array",
              "items": {
                "description": "Represents the status a lead is in",
                "type": "object"
              }
            },
            "ContactPersons": {
              "description": "List of all contact persons for this Lead",
              "type": "array",
              "items": {
                "description": "A contact person represents a person that works for a company you do business with. A company can have many contact persons.",
                "type": "object"
              }
            },
            "Subsystems": {
              "description": "The subsystems this lead is associated with",
              "type": "array",
              "items": {
                "description": "A subsystem represents a tenant within a customer's HQ",
                "type": "object"
              }
            },
            "ProjectId": {
              "format": "int32",
              "description": "The project id of the lead",
              "type": "integer"
            },
            "Project": {
              "description": "The project of the lead",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "SyncId": {
          "description": "A unique identifier for other sync clients",
          "type": "string"
        },
        "ProjectId": {
          "format": "int32",
          "description": "the id of the project related to the document",
          "type": "integer"
        },
        "Project": {
          "description": "The project related to the document",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Number": {
              "description": "The number of the project",
              "type": "string"
            },
            "Name": {
              "description": "The name of the project",
              "type": "string"
            },
            "Status": {
              "description": "The current status description of the project",
              "type": "string"
            },
            "PlannedStartDate": {
              "format": "date-time",
              "description": "The planned start date of the first task of the project",
              "type": "string"
            },
            "PlannedEndDate": {
              "format": "date-time",
              "description": "The planned end date of the last task of the project",
              "type": "string"
            },
            "StartDate": {
              "format": "date-time",
              "description": "The planned start date of the project",
              "type": "string"
            },
            "EndDate": {
              "format": "date-time",
              "description": "The planned end date of the project",
              "type": "string"
            },
            "AworkSyncId": {
              "description": "The Id from the linked awork project",
              "type": "string"
            },
            "Subsystems": {
              "description": "The subsystems this project is associated with",
              "type": "array",
              "items": {
                "description": "A subsystem represents a tenant within a customer's HQ",
                "type": "object"
              }
            },
            "ProjectTemplateId": {
              "format": "int32",
              "description": "The id of the project template",
              "type": "integer"
            },
            "ProjectTemplate": {
              "description": "The template of this project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "ProjectStatusId": {
              "format": "int32",
              "description": "The id of the project status",
              "type": "integer"
            },
            "CompanyId": {
              "format": "int32",
              "description": "The id of the company",
              "type": "integer"
            },
            "LeadId": {
              "format": "int32",
              "description": "The Id of the lead",
              "type": "integer"
            },
            "InvoiceAddressId": {
              "format": "int32",
              "description": "Id of the address for invoices of this project",
              "type": "integer"
            },
            "DeliveryAddressId": {
              "format": "int32",
              "description": "Id of the address for the deliveries of this project",
              "type": "integer"
            },
            "ResponsibleUserId": {
              "format": "int32",
              "description": "The id of the user which is responsible for this (internal) project",
              "type": "integer"
            },
            "ProjectStatus": {
              "description": "The status of the project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Company": {
              "description": "The company this project is associated with",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "ResponsibleUser": {
              "description": "The user which is responsible for this (internal) project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "DeliveryAddress": {
              "description": "The address for delvieries of this project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "InvoiceAddress": {
              "description": "The address for delvieries of this project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Lead": {
              "description": "The lead of the project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "CustomFields": {
              "description": "The custom fields of this project",
              "type": "array",
              "items": {
                "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
                "type": "object"
              }
            },
            "Reportings": {
              "description": "The user reportings of this project",
              "type": "array",
              "items": {
                "description": "A user reporting represents a logged time of a user on a specific task in HQ.",
                "type": "object"
              }
            },
            "Files": {
              "description": "The files of this project",
              "type": "array",
              "items": {
                "description": "A file represents a user upload or HQ-generated PDF documents.",
                "type": "object"
              }
            },
            "Members": {
              "description": "The members of this project",
              "type": "array",
              "items": {
                "description": "A project member links a user to a project. It includes the project role and the charge rates\r\n            for the link.",
                "type": "object"
              }
            },
            "ContactHistories": {
              "description": "Contact histories linked to this project.",
              "type": "array",
              "items": {
                "description": "The contact history represents any contact you had with a contact person. For example, any meeting, phone call or email can be a contact history entry.",
                "type": "object"
              }
            },
            "ContactPersons": {
              "description": "Contact persons linked to this project.",
              "type": "array",
              "items": {
                "description": "A contact person represents a person that works for a company you do business with. A company can have many contact persons.",
                "type": "object"
              }
            },
            "Articles": {
              "description": "All articles linked to the project",
              "type": "array",
              "items": {
                "description": "An article is a stock item that your company sells, for example a digital camera. \r\n            An article can also be a service or activity that your company performs, for example a digital design. \r\n            Articles can be used to create positions on invoices or quotations, among others.",
                "type": "object"
              }
            },
            "ProjectBudgets": {
              "description": "All articles linked to the project",
              "type": "array",
              "items": {
                "description": "The project budget for a project",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "Note": {
          "description": "The comment on the document",
          "type": "string"
        },
        "CompanyPurchaseOrderNumber": {
          "description": "The purchase order number on the document",
          "type": "string"
        },
        "Language": {
          "description": "The language of the document as two-letter ISOCode, for example 'DE'",
          "type": "string"
        },
        "DocumentFile": {
          "description": "The generated pdf file",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The name of the file",
              "type": "string"
            },
            "Size": {
              "format": "double",
              "description": "The size in bytes",
              "type": "number"
            },
            "HasContent": {
              "description": "Returns true if the file has content (was uploaded yet)",
              "type": "boolean"
            },
            "IsDirectory": {
              "description": "Returns true if the file entity is a directory, otherwise false",
              "type": "boolean"
            },
            "DirectoryId": {
              "format": "int32",
              "description": "The id of the parent directory",
              "type": "integer"
            },
            "FileRelations": {
              "description": "List of all relations of a",
              "type": "array",
              "items": {
                "description": "A file relation represents a link between a file and another entity like a project or article.",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "DocumentImage": {
          "description": "The generated pdf file, as an image",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The name of the file",
              "type": "string"
            },
            "Size": {
              "format": "double",
              "description": "The size in bytes",
              "type": "number"
            },
            "HasContent": {
              "description": "Returns true if the file has content (was uploaded yet)",
              "type": "boolean"
            },
            "IsDirectory": {
              "description": "Returns true if the file entity is a directory, otherwise false",
              "type": "boolean"
            },
            "DirectoryId": {
              "format": "int32",
              "description": "The id of the parent directory",
              "type": "integer"
            },
            "FileRelations": {
              "description": "List of all relations of a",
              "type": "array",
              "items": {
                "description": "A file relation represents a link between a file and another entity like a project or article.",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "Id": {
          "format": "int32",
          "description": "The unique identifier of this entity",
          "type": "integer"
        },
        "CreatedBy": {
          "format": "int32",
          "description": "The id of the user who created this entity",
          "type": "integer"
        },
        "UpdatedBy": {
          "format": "int32",
          "description": "The id of the last user who modified this entity",
          "type": "integer"
        },
        "CreatedOn": {
          "format": "date-time",
          "description": "The date and time this entity was created, in UTC",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "description": "The last date and time this entity was updated, in UTC",
          "type": "string"
        }
      }
    },
    "BaseDocumentPosition": {
      "description": "A document position represents a position on a quotation or invoice.",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "Text": {
          "description": "The position text, as HTML",
          "type": "string"
        },
        "Unit": {
          "description": "The position unit",
          "type": "string"
        },
        "Type": {
          "description": "The type of this position",
          "enum": [
            "Article",
            "Freetext",
            "OpenPosition",
            "UserReporting",
            "ProjectInvoice",
            "ProjectArticle",
            "ProjectPlan",
            "Subtotal",
            "PositionGroup",
            "GroupHeader",
            "Textline"
          ],
          "type": "string"
        },
        "Order": {
          "format": "int32",
          "description": "The order of this position in the document",
          "type": "integer"
        },
        "ArticleId": {
          "format": "int32",
          "description": "The Id of the article that is associated with this position",
          "type": "integer"
        },
        "ProjectId": {
          "format": "int32",
          "description": "The Id Of the Project",
          "type": "integer"
        },
        "Article": {
          "description": "The article that is associated with this position",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The name of this article",
              "type": "string"
            },
            "Number": {
              "description": "The number as identifier of the article",
              "type": "string"
            },
            "Description": {
              "description": "The description of the article",
              "type": "string"
            },
            "BaseType": {
              "description": "The baset ype of the article",
              "enum": [
                "Stock",
                "Action",
                "Material",
                "NotSet"
              ],
              "type": "string"
            },
            "CategoryId": {
              "format": "int32",
              "description": "The category ID of the article",
              "type": "integer"
            },
            "Category": {
              "description": "The article category",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "SalesPrices": {
              "description": "The list of possible sales prices",
              "type": "array",
              "items": {
                "description": "An sales price represents a price of the article which can be used for creating ainvoice.",
                "type": "object"
              }
            },
            "PurchasingPrices": {
              "description": "The list of possible purchasing prices",
              "type": "array",
              "items": {
                "description": "A purchasing price represents a price of the article which can be used for creating a quotation.",
                "type": "object"
              }
            },
            "Stocks": {
              "description": "The list of stocks this article can be stored in",
              "type": "array",
              "items": {
                "description": "Represents the current stock of an article in a specific storage. Articles can have multiple stocks, one for each storage they are located in.",
                "type": "object"
              }
            },
            "CustomFields": {
              "description": "The customfields associated with this article",
              "type": "array",
              "items": {
                "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
                "type": "object"
              }
            },
            "Files": {
              "description": "The files associated to the article",
              "type": "array",
              "items": {
                "description": "A file represents a user upload or HQ-generated PDF documents.",
                "type": "object"
              }
            },
            "InternalExternalArticle": {
              "description": "The Make or Buy type of this article",
              "enum": [
                "internalArticle",
                "externalArticle",
                "mixedArticle",
                "NotSet"
              ],
              "type": "string"
            },
            "CostCenter1": {
              "description": "The cost center 1 this article is associated with",
              "type": "string"
            },
            "CostCenter2": {
              "description": "The cost center 2 this article is associated with",
              "type": "string"
            },
            "BookingAccount": {
              "description": "The booking account this article is associated with",
              "type": "string"
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "Amount": {
          "format": "double",
          "description": "The amount of this position in this document",
          "type": "number"
        },
        "ProjectBudgetId": {
          "format": "int32",
          "description": "The Id of the project budget",
          "type": "integer"
        },
        "CostTypeId": {
          "format": "int32",
          "description": "The if of the costType",
          "type": "integer"
        },
        "BookingAccount": {
          "description": "The booking account this position is associated with",
          "type": "string"
        },
        "CostCenter1": {
          "description": "The cost center 1 this position is associated with",
          "type": "string"
        },
        "CostCenter2": {
          "description": "The cost center 2 this position is associated with",
          "type": "string"
        },
        "CustomFields": {
          "description": "The custom fields of this document position",
          "type": "array",
          "items": {
            "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
            "required": [
              "Name",
              "Id"
            ],
            "type": "object",
            "properties": {
              "Name": {
                "description": "The name of this custom field",
                "type": "string"
              },
              "Value": {
                "description": "The value of this custom field",
                "type": "string"
              },
              "Type": {
                "description": "The type of this custom field",
                "type": "string"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        },
        "DocumentId": {
          "format": "int32",
          "description": "The Id of the document the position belongs to",
          "type": "integer"
        },
        "Id": {
          "format": "int32",
          "description": "The unique identifier of this entity",
          "type": "integer"
        },
        "CreatedBy": {
          "format": "int32",
          "description": "The id of the user who created this entity",
          "type": "integer"
        },
        "UpdatedBy": {
          "format": "int32",
          "description": "The id of the last user who modified this entity",
          "type": "integer"
        },
        "CreatedOn": {
          "format": "date-time",
          "description": "The date and time this entity was created, in UTC",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "description": "The last date and time this entity was updated, in UTC",
          "type": "string"
        }
      }
    },
    "ODataResponse[List[DocumentCondition]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "description": "A document condition is either a delivery condition or a payment condition. \r\n            These conditions contain information about legal texts and due dates that should be displayed on the document.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "Name": {
                "description": "The name of document condition",
                "type": "string"
              },
              "Text": {
                "description": "The text of condition",
                "type": "string"
              },
              "DisplayText": {
                "description": "The text with replaced due days",
                "type": "string"
              },
              "DueInDays": {
                "format": "int32",
                "description": "The payment due date in days",
                "type": "integer"
              },
              "Type": {
                "description": "The type of this condition",
                "type": "string"
              },
              "WarningDays": {
                "format": "int32",
                "description": "The payment due date in days of a warning document",
                "type": "integer"
              },
              "ReminderDays": {
                "format": "int32",
                "description": "The payment due date in days of a reminder document",
                "type": "integer"
              },
              "Language": {
                "description": "The language of the condition, as two-letter ISO-Code, for example 'DE'",
                "type": "string"
              },
              "DocumentEarlyPayments": {
                "description": "The list of early payment conditions that belong to this document condition (i.e. Skonto)",
                "type": "array"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "ODataResponse[List[DocumentPosition]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "description": "A document position represents a position on a quotation or invoice.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "IsOptional": {
                "description": "Whether this position is optional. Only valid in quotations.",
                "type": "boolean"
              },
              "Tax": {
                "format": "double",
                "description": "The position tax rate, for example 19%",
                "type": "number"
              },
              "Price": {
                "format": "decimal",
                "description": "The position price, in the currency of the document",
                "type": "number"
              },
              "Discount": {
                "format": "double",
                "description": "The percentage discount that should be applied to this position sum",
                "type": "number"
              },
              "Margin": {
                "format": "double",
                "description": "The margin that should be applied to this position sum",
                "type": "number"
              },
              "ExcludeFromEarlyPayment": {
                "description": "Whether this position should be excluded from early payment discount calculations",
                "type": "boolean"
              },
              "TotalPrice": {
                "format": "double",
                "description": "The total price under consideration of margin and discount",
                "type": "number"
              },
              "TotalUnitPrice": {
                "format": "double",
                "description": "The total unit price under consideration of margin and discount",
                "type": "number"
              },
              "TotalVat": {
                "format": "double",
                "description": "The total VAT of this position under consideration of margin and discount",
                "type": "number"
              },
              "UserReportings": {
                "description": "The user reportings which have been billed with this document position",
                "type": "array"
              },
              "Interval": {
                "description": "The interval of the recurrence.",
                "type": "string"
              },
              "Text": {
                "description": "The position text, as HTML",
                "type": "string"
              },
              "Unit": {
                "description": "The position unit",
                "type": "string"
              },
              "Type": {
                "description": "The type of this position",
                "type": "string"
              },
              "Order": {
                "format": "int32",
                "description": "The order of this position in the document",
                "type": "integer"
              },
              "ArticleId": {
                "format": "int32",
                "description": "The Id of the article that is associated with this position",
                "type": "integer"
              },
              "ProjectId": {
                "format": "int32",
                "description": "The Id Of the Project",
                "type": "integer"
              },
              "Article": {
                "description": "The article that is associated with this position",
                "type": "object"
              },
              "Amount": {
                "format": "double",
                "description": "The amount of this position in this document",
                "type": "number"
              },
              "ProjectBudgetId": {
                "format": "int32",
                "description": "The Id of the project budget",
                "type": "integer"
              },
              "CostTypeId": {
                "format": "int32",
                "description": "The if of the costType",
                "type": "integer"
              },
              "BookingAccount": {
                "description": "The booking account this position is associated with",
                "type": "string"
              },
              "CostCenter1": {
                "description": "The cost center 1 this position is associated with",
                "type": "string"
              },
              "CostCenter2": {
                "description": "The cost center 2 this position is associated with",
                "type": "string"
              },
              "CustomFields": {
                "description": "The custom fields of this document position",
                "type": "array"
              },
              "DocumentId": {
                "format": "int32",
                "description": "The Id of the document the position belongs to",
                "type": "integer"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "ODataResponse[List[DocumentTemplate]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "description": "A document template represents the templates you designed in your HQ.\r\n            They contain your stationary, fonts and texts for invoices, quotations and other types of documents.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "Name": {
                "description": "The name of the document template",
                "type": "string"
              },
              "DocumentType": {
                "description": "The type of document this template is for",
                "type": "string"
              },
              "Language": {
                "description": "The language of this template",
                "type": "string"
              },
              "InternalCompanyId": {
                "format": "int32",
                "description": "The id of the internal company this document template belongs to",
                "type": "integer"
              },
              "InternalCompany": {
                "description": "The internal company this document template belongs to",
                "type": "object"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "DocumentTemplate": {
      "description": "A document template represents the templates you designed in your HQ.\r\n            They contain your stationary, fonts and texts for invoices, quotations and other types of documents.",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "Name": {
          "description": "The name of the document template",
          "type": "string"
        },
        "DocumentType": {
          "description": "The type of document this template is for",
          "enum": [
            "Quotation",
            "Invoice",
            "DeliveryNote",
            "Warning",
            "Reminder",
            "Cancellation",
            "CreditNote",
            "Confirmation",
            "IncomingInvoice",
            "Undefined",
            "Order",
            "PriceInquery",
            "Letter",
            "Minute",
            "Akonto"
          ],
          "type": "string"
        },
        "Language": {
          "description": "The language of this template",
          "type": "string"
        },
        "InternalCompanyId": {
          "format": "int32",
          "description": "The id of the internal company this document template belongs to",
          "type": "integer"
        },
        "InternalCompany": {
          "description": "The internal company this document template belongs to",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The name of the company",
              "type": "string"
            },
            "TaxNumber": {
              "description": "The tax number of the company",
              "type": "string"
            },
            "TaxId": {
              "description": "The tax id of the company",
              "type": "string"
            },
            "IsTaxExempt": {
              "description": "Whether the company is liable to pay taxes",
              "type": "boolean"
            },
            "DefaultAddress": {
              "description": "The default address of the company",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "Id": {
          "format": "int32",
          "description": "The unique identifier of this entity",
          "type": "integer"
        },
        "CreatedBy": {
          "format": "int32",
          "description": "The id of the user who created this entity",
          "type": "integer"
        },
        "UpdatedBy": {
          "format": "int32",
          "description": "The id of the last user who modified this entity",
          "type": "integer"
        },
        "CreatedOn": {
          "format": "date-time",
          "description": "The date and time this entity was created, in UTC",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "description": "The last date and time this entity was updated, in UTC",
          "type": "string"
        }
      }
    },
    "IncomingInvoice": {
      "description": "An invoice represents an incoming invoice",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "InvoiceDate": {
          "format": "date-time",
          "description": "The date of this invoice",
          "type": "string"
        },
        "DueDate": {
          "format": "date-time",
          "description": "The payment due date of this invoice",
          "type": "string"
        },
        "BookingDate": {
          "format": "date-time",
          "description": "The date this invoice was booked",
          "type": "string"
        },
        "Status": {
          "description": "The status of this invoice",
          "enum": [
            "Draft",
            "WaitingForReview",
            "Sent",
            "PartlyPaid",
            "CompletelyPaid",
            "Canceled",
            "WaitingForApproval",
            "Approved"
          ],
          "type": "string"
        },
        "Positions": {
          "description": "The positions of this incoming invoice",
          "type": "array",
          "items": {
            "description": "A position on an incoming invoice.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "IsFactorizable": {
                "description": "Whether this position is factorizable, meaning that it can be billed to customers.",
                "type": "boolean"
              },
              "IsFactorizedOnInvoiceIds": {
                "description": "The invoice ids this position is factorized on.\r\n            Empty if not factorized.",
                "type": "array"
              },
              "IsOptional": {
                "description": "Whether this position is optional. Only valid in quotations.",
                "type": "boolean"
              },
              "Tax": {
                "format": "double",
                "description": "The position tax rate, for example 19%",
                "type": "number"
              },
              "Price": {
                "format": "decimal",
                "description": "The position price, in the currency of the document",
                "type": "number"
              },
              "Discount": {
                "format": "double",
                "description": "The percentage discount that should be applied to this position sum",
                "type": "number"
              },
              "Margin": {
                "format": "double",
                "description": "The margin that should be applied to this position sum",
                "type": "number"
              },
              "ExcludeFromEarlyPayment": {
                "description": "Whether this position should be excluded from early payment discount calculations",
                "type": "boolean"
              },
              "TotalPrice": {
                "format": "double",
                "description": "The total price under consideration of margin and discount",
                "type": "number"
              },
              "TotalUnitPrice": {
                "format": "double",
                "description": "The total unit price under consideration of margin and discount",
                "type": "number"
              },
              "TotalVat": {
                "format": "double",
                "description": "The total VAT of this position under consideration of margin and discount",
                "type": "number"
              },
              "UserReportings": {
                "description": "The user reportings which have been billed with this document position",
                "type": "array"
              },
              "Interval": {
                "description": "The interval of the recurrence.",
                "type": "string"
              },
              "Text": {
                "description": "The position text, as HTML",
                "type": "string"
              },
              "Unit": {
                "description": "The position unit",
                "type": "string"
              },
              "Type": {
                "description": "The type of this position",
                "type": "string"
              },
              "Order": {
                "format": "int32",
                "description": "The order of this position in the document",
                "type": "integer"
              },
              "ArticleId": {
                "format": "int32",
                "description": "The Id of the article that is associated with this position",
                "type": "integer"
              },
              "ProjectId": {
                "format": "int32",
                "description": "The Id Of the Project",
                "type": "integer"
              },
              "Article": {
                "description": "The article that is associated with this position",
                "type": "object"
              },
              "Amount": {
                "format": "double",
                "description": "The amount of this position in this document",
                "type": "number"
              },
              "ProjectBudgetId": {
                "format": "int32",
                "description": "The Id of the project budget",
                "type": "integer"
              },
              "CostTypeId": {
                "format": "int32",
                "description": "The if of the costType",
                "type": "integer"
              },
              "BookingAccount": {
                "description": "The booking account this position is associated with",
                "type": "string"
              },
              "CostCenter1": {
                "description": "The cost center 1 this position is associated with",
                "type": "string"
              },
              "CostCenter2": {
                "description": "The cost center 2 this position is associated with",
                "type": "string"
              },
              "CustomFields": {
                "description": "The custom fields of this document position",
                "type": "array"
              },
              "DocumentId": {
                "format": "int32",
                "description": "The Id of the document the position belongs to",
                "type": "integer"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        },
        "IsPaid": {
          "description": "Indicates if the invoice has been paid",
          "type": "boolean"
        },
        "PaymentDate": {
          "format": "date-time",
          "description": "The payment date of the invoice",
          "type": "string"
        },
        "Currency": {
          "description": "The ISO 4217 code of the currency of this document.",
          "maxLength": 3,
          "minLength": 0,
          "type": "string"
        },
        "ExchangeRate": {
          "format": "double",
          "description": "The exchange rate to Euro.\r\n            While the document is in a draft state, the exchange rate reflects the current exchange rate of ECB.\r\n            After the document has been sent, the exchange rate at that date will be returned.",
          "type": "number"
        },
        "DeliveryDate": {
          "format": "date-time",
          "description": "The date of the delivery of the products or services.",
          "type": "string"
        },
        "PaymentConditionId": {
          "format": "int32",
          "description": "The Id of the payment condition.",
          "type": "integer"
        },
        "DeliveryConditionId": {
          "format": "int32",
          "description": "The Id of the delivery condition.",
          "type": "integer"
        },
        "PaymentCondition": {
          "description": "The payment condition that applies to this document",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The name of document condition",
              "type": "string"
            },
            "Text": {
              "description": "The text of condition",
              "type": "string"
            },
            "DisplayText": {
              "description": "The text with replaced due days",
              "type": "string"
            },
            "DueInDays": {
              "format": "int32",
              "description": "The payment due date in days",
              "type": "integer"
            },
            "Type": {
              "description": "The type of this condition",
              "enum": [
                "PaymentConditions",
                "DeliveryConditions",
                "NotDefined"
              ],
              "type": "string"
            },
            "WarningDays": {
              "format": "int32",
              "description": "The payment due date in days of a warning document",
              "type": "integer"
            },
            "ReminderDays": {
              "format": "int32",
              "description": "The payment due date in days of a reminder document",
              "type": "integer"
            },
            "Language": {
              "description": "The language of the condition, as two-letter ISO-Code, for example 'DE'",
              "type": "string"
            },
            "DocumentEarlyPayments": {
              "description": "The list of early payment conditions that belong to this document condition (i.e. Skonto)",
              "type": "array",
              "items": {
                "description": "The document early payment entry represents a rule in days before which a discount is granted on an invoice.",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "DeliveryCondition": {
          "description": "The delivery condition that applies to this document",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The name of document condition",
              "type": "string"
            },
            "Text": {
              "description": "The text of condition",
              "type": "string"
            },
            "DisplayText": {
              "description": "The text with replaced due days",
              "type": "string"
            },
            "DueInDays": {
              "format": "int32",
              "description": "The payment due date in days",
              "type": "integer"
            },
            "Type": {
              "description": "The type of this condition",
              "enum": [
                "PaymentConditions",
                "DeliveryConditions",
                "NotDefined"
              ],
              "type": "string"
            },
            "WarningDays": {
              "format": "int32",
              "description": "The payment due date in days of a warning document",
              "type": "integer"
            },
            "ReminderDays": {
              "format": "int32",
              "description": "The payment due date in days of a reminder document",
              "type": "integer"
            },
            "Language": {
              "description": "The language of the condition, as two-letter ISO-Code, for example 'DE'",
              "type": "string"
            },
            "DocumentEarlyPayments": {
              "description": "The list of early payment conditions that belong to this document condition (i.e. Skonto)",
              "type": "array",
              "items": {
                "description": "The document early payment entry represents a rule in days before which a discount is granted on an invoice.",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "DiscountType": {
          "description": "Whether the document discount is specified as a total or a percentage.",
          "enum": [
            "Percent",
            "NetValue",
            "NotSet"
          ],
          "type": "string"
        },
        "Discount": {
          "format": "double",
          "description": "A discount that should be applied to the total sum.\r\n            This is either a total or a percantage value, depending on the DiscountType.",
          "type": "number"
        },
        "Margin": {
          "format": "double",
          "description": "A margin (as a percentage) that should be applied to the total sum.\r\n            This margin will be equally distributed over all positions.",
          "type": "number"
        },
        "TaxOption": {
          "description": "The tax rule that should apply to this document.\r\n            VAT is most commonly used for documents within the same country.",
          "enum": [
            "VatApplicable",
            "FreeThirdCountryTerritory",
            "FreeEuropeanUnionWithVatId",
            "FreeEuropeanUnionNoVatId",
            "Inverse",
            "IntraCommunityDelivery",
            "ExportDelivery",
            "FreeOther",
            "FreeYouthSupport"
          ],
          "type": "string"
        },
        "ServiceOption": {
          "description": "Whether the positions in this document are a delivery or any other kind of service.",
          "enum": [
            "None",
            "Delivery",
            "Service",
            "DeliveryAndService"
          ],
          "type": "string"
        },
        "NetTotal": {
          "format": "decimal",
          "description": "The net sum of the document. This is calculated considering all positions, position and document margin as well as position and document discount.\r\n            The sum is to be interpreted in the document currency.\r\n            Read-only.",
          "type": "number"
        },
        "GrossTotal": {
          "format": "decimal",
          "description": "The gross sum of the document. This is calculated considering all positions, position taxes, position and document margin as well as position and document discount.\r\n            The sum is to be interpreted in the document currency.\r\n            Read-only.",
          "type": "number"
        },
        "VatTotal": {
          "format": "decimal",
          "description": "The sum of the position VAT.\r\n            The sum is to be interpreted in the document currency.\r\n            Read-only.",
          "type": "number"
        },
        "PaidTotal": {
          "format": "decimal",
          "description": "The sum of received payments for this document.\r\n            The sum is to be interpreted in the document currency.\r\n            Read-only.",
          "type": "number"
        },
        "Type": {
          "description": "The type of the document",
          "enum": [
            "Quotation",
            "Invoice",
            "DeliveryNote",
            "Warning",
            "Reminder",
            "Cancellation",
            "CreditNote",
            "Confirmation",
            "IncomingInvoice",
            "Undefined",
            "Order",
            "PriceInquery",
            "Letter",
            "Minute",
            "Akonto"
          ],
          "type": "string"
        },
        "AddressText": {
          "description": "The receiver address text of the document",
          "type": "string"
        },
        "CompanyAddressId": {
          "format": "int32",
          "description": "The id of the postal address of the receiving company",
          "type": "integer"
        },
        "CompanyAddress": {
          "description": "The postal address of the receiving company",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "City": {
              "description": "The city of this address",
              "type": "string"
            },
            "Street": {
              "description": "The street name of this address",
              "type": "string"
            },
            "HouseNumber": {
              "description": "The house number of this address",
              "type": "string"
            },
            "ZipCode": {
              "description": "The ZIP or Postal Code of this address",
              "type": "string"
            },
            "AddressLine2": {
              "description": "The secondary address line, c/o details, etc.",
              "type": "string"
            },
            "Description": {
              "description": "The description of this address",
              "type": "string"
            },
            "Country": {
              "description": "The ISO 3166-1 alpha-2 country code of this address",
              "type": "string"
            },
            "Phone": {
              "description": "The phone number of this address",
              "type": "string"
            },
            "Fax": {
              "description": "The fax number of this address",
              "type": "string"
            },
            "Email": {
              "description": "The email address of this address",
              "type": "string"
            },
            "Website": {
              "description": "The website of this address",
              "type": "string"
            },
            "IsStandard": {
              "description": "Whether this address is the standard address of a company",
              "type": "boolean"
            },
            "DefaultForDocumentType": {
              "description": "The document type this address should be used as a standard for",
              "enum": [
                "Quotation",
                "Invoice",
                "DeliveryNote",
                "Warning",
                "Reminder",
                "Cancellation",
                "CreditNote",
                "Confirmation",
                "IncomingInvoice",
                "Undefined",
                "Order",
                "PriceInquery",
                "Letter",
                "Minute",
                "Akonto"
              ],
              "type": "string"
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "Subject": {
          "description": "The subject of the document including the placeholders",
          "type": "string"
        },
        "CalculatedSubject": {
          "description": "The calcuated subject of the document.\r\n            The subject includes the final data, without the placeholders.",
          "type": "string"
        },
        "Header": {
          "description": "The header text on the document",
          "type": "string"
        },
        "Footer": {
          "description": "The footer text on the document",
          "type": "string"
        },
        "DocumentTemplateId": {
          "format": "int32",
          "description": "The document template id",
          "type": "integer"
        },
        "Number": {
          "description": "The number of the document, auto generated by the HQ",
          "type": "string"
        },
        "ContactPersonId": {
          "format": "int32",
          "description": "The id of the responsible contact person at the receiving company",
          "type": "integer"
        },
        "ContactPerson": {
          "description": "The responsible contact person at the receiving company",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "FirstName": {
              "description": "The first name of the contact person",
              "type": "string"
            },
            "LastName": {
              "description": "The last name of the contact person",
              "type": "string"
            },
            "Position": {
              "description": "The position of the contact person",
              "type": "string"
            },
            "CompanyId": {
              "format": "int32",
              "description": "The Id of the company that the contact person belongs to",
              "type": "integer"
            },
            "PhoneLandline": {
              "description": "The landline phone number of the contact person",
              "type": "string"
            },
            "PhoneMobile": {
              "description": "The mobile phone number of the contact person",
              "type": "string"
            },
            "Salutation": {
              "description": "The salutation of the contact person",
              "type": "string"
            },
            "Birthdate": {
              "description": "The birth date of the user",
              "type": "string"
            },
            "SalutationForm": {
              "description": "The salutation form of the contact person. The value can be \"Neutral\", \"Formal\", \"Informal\" or null.",
              "enum": [
                "Formal",
                "Informal",
                "Neutral",
                "NotSet"
              ],
              "type": "string"
            },
            "Title": {
              "description": "The academic title of the contact person",
              "type": "string"
            },
            "Language": {
              "description": "The preferred contact language of this contact person, in two-letter ISO-Code, for example 'DE'",
              "type": "string"
            },
            "DefaultAddressId": {
              "format": "int32",
              "description": "The id of the default address of this contact person",
              "type": "integer"
            },
            "Addresses": {
              "description": "All addresses of the contact person",
              "type": "array",
              "items": {
                "description": "A company address represents one of many addresses of companies.",
                "type": "object"
              }
            },
            "DefaultAddress": {
              "description": "The default address of this contact person",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "CustomFields": {
              "description": "The customfields associated with this contact person",
              "type": "array",
              "items": {
                "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
                "type": "object"
              }
            },
            "Company": {
              "description": "The company that the contact person belongs to",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "CompanyId": {
          "format": "int32",
          "description": "The id of the company which is the receiver of the document",
          "type": "integer"
        },
        "Company": {
          "description": "The company which is the receiver of the document",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The name of the company",
              "type": "string"
            },
            "IndustrialSector": {
              "description": "The company's industrial sector",
              "type": "string"
            },
            "Description": {
              "description": "A longer description of the company",
              "type": "string"
            },
            "IBAN": {
              "description": "The IBAN of the company",
              "type": "string"
            },
            "BIC": {
              "description": "The BIC of the company",
              "type": "string"
            },
            "DebitorNumber": {
              "format": "int32",
              "description": "The company's debitor number",
              "type": "integer"
            },
            "CreditorNumber": {
              "format": "int32",
              "description": "The company's creditor number",
              "type": "integer"
            },
            "TaxId": {
              "description": "The company's tax id",
              "type": "string"
            },
            "DefaultDeliveryConditionId": {
              "format": "int32",
              "description": "The id of the default delivery condition of this company",
              "type": "integer"
            },
            "DefaultDeliveryCondition": {
              "description": "The default delivery condition of this company",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "DefaultPaymentConditionId": {
              "format": "int32",
              "description": "The id of the default payment condition of this company",
              "type": "integer"
            },
            "DefaultPaymentCondition": {
              "description": "The default payment condition of this company",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "DefaultAddress": {
              "description": "The default address of this company",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Addresses": {
              "description": "All addresses of the company",
              "type": "array",
              "items": {
                "description": "A company address represents one of many addresses of companies.",
                "type": "object"
              }
            },
            "ResponsibleUsers": {
              "description": "The list of the responsible users of this company",
              "type": "array",
              "items": {
                "description": "A user represents a user in your HQ system.",
                "type": "object"
              }
            },
            "CustomFields": {
              "description": "The customfields associated with this company",
              "type": "array",
              "items": {
                "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
                "type": "object"
              }
            },
            "CompanyTypes": {
              "description": "The company types associated with this company",
              "type": "array",
              "items": {
                "description": "This is a connection between a company and a company type.\r\n            A company can have more than one type and can have a different company number for each type.",
                "type": "object"
              }
            },
            "Files": {
              "description": "The files associated with this company",
              "type": "array",
              "items": {
                "description": "A file represents a user upload or HQ-generated PDF documents.",
                "type": "object"
              }
            },
            "Subsystems": {
              "description": "The subsystems this company is associated with",
              "type": "array",
              "items": {
                "description": "A subsystem represents a tenant within a customer's HQ",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "InternalContactPersonId": {
          "format": "int32",
          "description": "The id of the HQ user responsible for this document",
          "type": "integer"
        },
        "InternalContactPerson": {
          "description": "The HQ user repsonsible for this document",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "FirstName": {
              "description": "The first name of the user",
              "type": "string"
            },
            "LastName": {
              "description": "The last name of the user",
              "type": "string"
            },
            "UserName": {
              "description": "The user's user name in HQ",
              "type": "string"
            },
            "EMailWork": {
              "description": "The work email of the user",
              "type": "string"
            },
            "Salutation": {
              "description": "The salutation of the user, i.e. Mrs. or Mr.",
              "type": "string"
            },
            "Title": {
              "description": "The professional title of the user",
              "type": "string"
            },
            "EmployeeNumber": {
              "description": "The employee number of the user",
              "type": "string"
            },
            "Department": {
              "description": "The department of the user",
              "type": "string"
            },
            "BirthDate": {
              "format": "date-time",
              "description": "The birth date of the user",
              "type": "string"
            },
            "FederalState": {
              "description": "The federal state of the user",
              "type": "string"
            },
            "Country": {
              "description": "The country of the user",
              "type": "string"
            },
            "BasicLoadInHours": {
              "format": "double",
              "description": "The basic load in hours of the user",
              "type": "number"
            },
            "EntryDate": {
              "format": "date-time",
              "description": "The entry date of the user",
              "type": "string"
            },
            "LeavingDate": {
              "format": "date-time",
              "description": "The leaving date of the user",
              "type": "string"
            },
            "PhoneLandlinePrivate": {
              "description": "The private phone number of the user - landline",
              "type": "string"
            },
            "PhoneLandlineWork": {
              "description": "The work phone number of the user - landline",
              "type": "string"
            },
            "PhoneMobilePrivate": {
              "description": "The private phone number of the user - mobile",
              "type": "string"
            },
            "PhoneMobileWork": {
              "description": "The work phon number of the user - mobile",
              "type": "string"
            },
            "UserWorkingHours": {
              "description": "The custom fields of the user",
              "type": "array",
              "items": {
                "description": "The weekly working hours user",
                "type": "object"
              }
            },
            "CustomFields": {
              "description": "The custom fields of the user",
              "type": "array",
              "items": {
                "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
                "type": "object"
              }
            },
            "UserGroups": {
              "description": "The user groups of the user",
              "type": "array",
              "items": {
                "description": "The user groups a user is in.",
                "type": "object"
              }
            },
            "ResourceGroup": {
              "description": "The resource group of the user",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Absences": {
              "description": "The absences of the user",
              "type": "array",
              "items": {
                "description": "An absence represents a time of absence from work, for example holidays or sickness. \r\n            Absences can be either paid or unpaid.",
                "type": "object"
              }
            },
            "Assignments": {
              "description": "The tasks the user is assigned to",
              "type": "array",
              "items": {
                "description": "The assignment of a user to a task",
                "type": "object"
              }
            },
            "Reportings": {
              "description": "The reportings of this user",
              "type": "array",
              "items": {
                "description": "A user reporting represents a logged time of a user on a specific task in HQ.",
                "type": "object"
              }
            },
            "ProjectMembers": {
              "description": "The allocations of this user to projects",
              "type": "array",
              "items": {
                "description": "A project member links a user to a project. It includes the project role and the charge rates\r\n            for the link.",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "LeadId": {
          "format": "int32",
          "description": "The id of the lead related to the document",
          "type": "integer"
        },
        "Lead": {
          "description": "The lead related to the document",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The name of the lead",
              "type": "string"
            },
            "CompanyName": {
              "description": "The name of the company that this lead is assigned to, read-only",
              "type": "string"
            },
            "Number": {
              "description": "The number of the lead",
              "type": "string"
            },
            "Company": {
              "description": "The company this lead belongs to",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Status": {
              "description": "The status of the lead",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "StatusId": {
              "format": "int32",
              "description": "The Id of the status of the lead",
              "type": "integer"
            },
            "CashOn": {
              "format": "date-time",
              "description": "The expected sales date",
              "type": "string"
            },
            "ClosingProbability": {
              "format": "int32",
              "description": "The probability of closing the lead, in percent",
              "type": "integer"
            },
            "Currency": {
              "description": "The ISO 4217 code of the currency of the lead volume",
              "maxLength": 3,
              "minLength": 0,
              "type": "string"
            },
            "Volume": {
              "format": "double",
              "description": "The financial volume when closing the lead",
              "type": "number"
            },
            "CompanyId": {
              "format": "int32",
              "description": "The Id of the company this lead belongs to",
              "type": "integer"
            },
            "CustomFields": {
              "description": "The custom fields of this lead",
              "type": "array",
              "items": {
                "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
                "type": "object"
              }
            },
            "ResponsibleUserId": {
              "format": "int32",
              "description": "The user id of the HQ user responsible for this lead",
              "type": "integer"
            },
            "ResponsibleUser": {
              "description": "The HQ user responsible for this lead",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "SalesCampaigns": {
              "description": "List of all Sales Campaigns for this Lead",
              "type": "array",
              "items": {
                "description": "Represents the status a lead is in",
                "type": "object"
              }
            },
            "ContactPersons": {
              "description": "List of all contact persons for this Lead",
              "type": "array",
              "items": {
                "description": "A contact person represents a person that works for a company you do business with. A company can have many contact persons.",
                "type": "object"
              }
            },
            "Subsystems": {
              "description": "The subsystems this lead is associated with",
              "type": "array",
              "items": {
                "description": "A subsystem represents a tenant within a customer's HQ",
                "type": "object"
              }
            },
            "ProjectId": {
              "format": "int32",
              "description": "The project id of the lead",
              "type": "integer"
            },
            "Project": {
              "description": "The project of the lead",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "SyncId": {
          "description": "A unique identifier for other sync clients",
          "type": "string"
        },
        "ProjectId": {
          "format": "int32",
          "description": "the id of the project related to the document",
          "type": "integer"
        },
        "Project": {
          "description": "The project related to the document",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Number": {
              "description": "The number of the project",
              "type": "string"
            },
            "Name": {
              "description": "The name of the project",
              "type": "string"
            },
            "Status": {
              "description": "The current status description of the project",
              "type": "string"
            },
            "PlannedStartDate": {
              "format": "date-time",
              "description": "The planned start date of the first task of the project",
              "type": "string"
            },
            "PlannedEndDate": {
              "format": "date-time",
              "description": "The planned end date of the last task of the project",
              "type": "string"
            },
            "StartDate": {
              "format": "date-time",
              "description": "The planned start date of the project",
              "type": "string"
            },
            "EndDate": {
              "format": "date-time",
              "description": "The planned end date of the project",
              "type": "string"
            },
            "AworkSyncId": {
              "description": "The Id from the linked awork project",
              "type": "string"
            },
            "Subsystems": {
              "description": "The subsystems this project is associated with",
              "type": "array",
              "items": {
                "description": "A subsystem represents a tenant within a customer's HQ",
                "type": "object"
              }
            },
            "ProjectTemplateId": {
              "format": "int32",
              "description": "The id of the project template",
              "type": "integer"
            },
            "ProjectTemplate": {
              "description": "The template of this project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "ProjectStatusId": {
              "format": "int32",
              "description": "The id of the project status",
              "type": "integer"
            },
            "CompanyId": {
              "format": "int32",
              "description": "The id of the company",
              "type": "integer"
            },
            "LeadId": {
              "format": "int32",
              "description": "The Id of the lead",
              "type": "integer"
            },
            "InvoiceAddressId": {
              "format": "int32",
              "description": "Id of the address for invoices of this project",
              "type": "integer"
            },
            "DeliveryAddressId": {
              "format": "int32",
              "description": "Id of the address for the deliveries of this project",
              "type": "integer"
            },
            "ResponsibleUserId": {
              "format": "int32",
              "description": "The id of the user which is responsible for this (internal) project",
              "type": "integer"
            },
            "ProjectStatus": {
              "description": "The status of the project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Company": {
              "description": "The company this project is associated with",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "ResponsibleUser": {
              "description": "The user which is responsible for this (internal) project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "DeliveryAddress": {
              "description": "The address for delvieries of this project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "InvoiceAddress": {
              "description": "The address for delvieries of this project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Lead": {
              "description": "The lead of the project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "CustomFields": {
              "description": "The custom fields of this project",
              "type": "array",
              "items": {
                "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
                "type": "object"
              }
            },
            "Reportings": {
              "description": "The user reportings of this project",
              "type": "array",
              "items": {
                "description": "A user reporting represents a logged time of a user on a specific task in HQ.",
                "type": "object"
              }
            },
            "Files": {
              "description": "The files of this project",
              "type": "array",
              "items": {
                "description": "A file represents a user upload or HQ-generated PDF documents.",
                "type": "object"
              }
            },
            "Members": {
              "description": "The members of this project",
              "type": "array",
              "items": {
                "description": "A project member links a user to a project. It includes the project role and the charge rates\r\n            for the link.",
                "type": "object"
              }
            },
            "ContactHistories": {
              "description": "Contact histories linked to this project.",
              "type": "array",
              "items": {
                "description": "The contact history represents any contact you had with a contact person. For example, any meeting, phone call or email can be a contact history entry.",
                "type": "object"
              }
            },
            "ContactPersons": {
              "description": "Contact persons linked to this project.",
              "type": "array",
              "items": {
                "description": "A contact person represents a person that works for a company you do business with. A company can have many contact persons.",
                "type": "object"
              }
            },
            "Articles": {
              "description": "All articles linked to the project",
              "type": "array",
              "items": {
                "description": "An article is a stock item that your company sells, for example a digital camera. \r\n            An article can also be a service or activity that your company performs, for example a digital design. \r\n            Articles can be used to create positions on invoices or quotations, among others.",
                "type": "object"
              }
            },
            "ProjectBudgets": {
              "description": "All articles linked to the project",
              "type": "array",
              "items": {
                "description": "The project budget for a project",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "Note": {
          "description": "The comment on the document",
          "type": "string"
        },
        "CompanyPurchaseOrderNumber": {
          "description": "The purchase order number on the document",
          "type": "string"
        },
        "Language": {
          "description": "The language of the document as two-letter ISOCode, for example 'DE'",
          "type": "string"
        },
        "DocumentFile": {
          "description": "The generated pdf file",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The name of the file",
              "type": "string"
            },
            "Size": {
              "format": "double",
              "description": "The size in bytes",
              "type": "number"
            },
            "HasContent": {
              "description": "Returns true if the file has content (was uploaded yet)",
              "type": "boolean"
            },
            "IsDirectory": {
              "description": "Returns true if the file entity is a directory, otherwise false",
              "type": "boolean"
            },
            "DirectoryId": {
              "format": "int32",
              "description": "The id of the parent directory",
              "type": "integer"
            },
            "FileRelations": {
              "description": "List of all relations of a",
              "type": "array",
              "items": {
                "description": "A file relation represents a link between a file and another entity like a project or article.",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "DocumentImage": {
          "description": "The generated pdf file, as an image",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The name of the file",
              "type": "string"
            },
            "Size": {
              "format": "double",
              "description": "The size in bytes",
              "type": "number"
            },
            "HasContent": {
              "description": "Returns true if the file has content (was uploaded yet)",
              "type": "boolean"
            },
            "IsDirectory": {
              "description": "Returns true if the file entity is a directory, otherwise false",
              "type": "boolean"
            },
            "DirectoryId": {
              "format": "int32",
              "description": "The id of the parent directory",
              "type": "integer"
            },
            "FileRelations": {
              "description": "List of all relations of a",
              "type": "array",
              "items": {
                "description": "A file relation represents a link between a file and another entity like a project or article.",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "Id": {
          "format": "int32",
          "description": "The unique identifier of this entity",
          "type": "integer"
        },
        "CreatedBy": {
          "format": "int32",
          "description": "The id of the user who created this entity",
          "type": "integer"
        },
        "UpdatedBy": {
          "format": "int32",
          "description": "The id of the last user who modified this entity",
          "type": "integer"
        },
        "CreatedOn": {
          "format": "date-time",
          "description": "The date and time this entity was created, in UTC",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "description": "The last date and time this entity was updated, in UTC",
          "type": "string"
        }
      }
    },
    "IncomingInvoicePosition": {
      "description": "A position on an incoming invoice.",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "IsFactorizable": {
          "description": "Whether this position is factorizable, meaning that it can be billed to customers.",
          "type": "boolean"
        },
        "IsFactorizedOnInvoiceIds": {
          "description": "The invoice ids this position is factorized on.\r\n            Empty if not factorized.",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "IsOptional": {
          "description": "Whether this position is optional. Only valid in quotations.",
          "type": "boolean"
        },
        "Tax": {
          "format": "double",
          "description": "The position tax rate, for example 19%",
          "type": "number"
        },
        "Price": {
          "format": "decimal",
          "description": "The position price, in the currency of the document",
          "type": "number"
        },
        "Discount": {
          "format": "double",
          "description": "The percentage discount that should be applied to this position sum",
          "type": "number"
        },
        "Margin": {
          "format": "double",
          "description": "The margin that should be applied to this position sum",
          "type": "number"
        },
        "ExcludeFromEarlyPayment": {
          "description": "Whether this position should be excluded from early payment discount calculations",
          "type": "boolean"
        },
        "TotalPrice": {
          "format": "double",
          "description": "The total price under consideration of margin and discount",
          "type": "number"
        },
        "TotalUnitPrice": {
          "format": "double",
          "description": "The total unit price under consideration of margin and discount",
          "type": "number"
        },
        "TotalVat": {
          "format": "double",
          "description": "The total VAT of this position under consideration of margin and discount",
          "type": "number"
        },
        "UserReportings": {
          "description": "The user reportings which have been billed with this document position",
          "type": "array",
          "items": {
            "description": "A user reporting represents a logged time of a user on a specific task in HQ.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "Note": {
                "description": "The user-provided note of this reporting",
                "type": "string"
              },
              "Duration": {
                "format": "int64",
                "description": "The reporting duration, in seconds",
                "type": "integer"
              },
              "UserId": {
                "format": "int32",
                "description": "The id of the user this reporting is for",
                "type": "integer"
              },
              "User": {
                "description": "The user this reporting is for",
                "type": "object"
              },
              "ChargeRateValue": {
                "format": "double",
                "description": "The external charge rate value",
                "type": "number"
              },
              "InternalChargeRateValue": {
                "format": "double",
                "description": "The internal charge rate value",
                "type": "number"
              },
              "IsApproved": {
                "description": "Whether this reporting was approved",
                "type": "boolean"
              },
              "StartOn": {
                "format": "date-time",
                "description": "The date of the reporting",
                "type": "string"
              },
              "BreakDuration": {
                "format": "int64",
                "description": "The break duration of this reporting, in seconds",
                "type": "integer"
              },
              "ProjectId": {
                "format": "int32",
                "description": "The id of the project that this reporting belongs to",
                "type": "integer"
              },
              "Project": {
                "description": "The project that this reporting belongs to",
                "type": "object"
              },
              "TaskId": {
                "format": "int32",
                "description": "The id of the task this reporting was created for",
                "type": "integer"
              },
              "Task": {
                "description": "The task this reporting was created for",
                "type": "object"
              },
              "CurrencyInternalChargeRateValue": {
                "description": "The ISO 4217 code of the currency of the internal charge rate value",
                "maxLength": 3,
                "minLength": 0,
                "type": "string"
              },
              "CurrencyChargeRateValue": {
                "description": "The ISO 4217 code of the currency of the external charge rate",
                "maxLength": 3,
                "minLength": 0,
                "type": "string"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        },
        "Interval": {
          "description": "The interval of the recurrence.",
          "enum": [
            "Once",
            "Annually",
            "HalfAnnually",
            "QuarterAnnually",
            "Monthly",
            "Weekly",
            "TwoYears",
            "ThreeYears",
            "FourYears",
            "FiveYears",
            "Fortnightly"
          ],
          "type": "string"
        },
        "Text": {
          "description": "The position text, as HTML",
          "type": "string"
        },
        "Unit": {
          "description": "The position unit",
          "type": "string"
        },
        "Type": {
          "description": "The type of this position",
          "enum": [
            "Article",
            "Freetext",
            "OpenPosition",
            "UserReporting",
            "ProjectInvoice",
            "ProjectArticle",
            "ProjectPlan",
            "Subtotal",
            "PositionGroup",
            "GroupHeader",
            "Textline"
          ],
          "type": "string"
        },
        "Order": {
          "format": "int32",
          "description": "The order of this position in the document",
          "type": "integer"
        },
        "ArticleId": {
          "format": "int32",
          "description": "The Id of the article that is associated with this position",
          "type": "integer"
        },
        "ProjectId": {
          "format": "int32",
          "description": "The Id Of the Project",
          "type": "integer"
        },
        "Article": {
          "description": "The article that is associated with this position",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The name of this article",
              "type": "string"
            },
            "Number": {
              "description": "The number as identifier of the article",
              "type": "string"
            },
            "Description": {
              "description": "The description of the article",
              "type": "string"
            },
            "BaseType": {
              "description": "The baset ype of the article",
              "enum": [
                "Stock",
                "Action",
                "Material",
                "NotSet"
              ],
              "type": "string"
            },
            "CategoryId": {
              "format": "int32",
              "description": "The category ID of the article",
              "type": "integer"
            },
            "Category": {
              "description": "The article category",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "SalesPrices": {
              "description": "The list of possible sales prices",
              "type": "array",
              "items": {
                "description": "An sales price represents a price of the article which can be used for creating ainvoice.",
                "type": "object"
              }
            },
            "PurchasingPrices": {
              "description": "The list of possible purchasing prices",
              "type": "array",
              "items": {
                "description": "A purchasing price represents a price of the article which can be used for creating a quotation.",
                "type": "object"
              }
            },
            "Stocks": {
              "description": "The list of stocks this article can be stored in",
              "type": "array",
              "items": {
                "description": "Represents the current stock of an article in a specific storage. Articles can have multiple stocks, one for each storage they are located in.",
                "type": "object"
              }
            },
            "CustomFields": {
              "description": "The customfields associated with this article",
              "type": "array",
              "items": {
                "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
                "type": "object"
              }
            },
            "Files": {
              "description": "The files associated to the article",
              "type": "array",
              "items": {
                "description": "A file represents a user upload or HQ-generated PDF documents.",
                "type": "object"
              }
            },
            "InternalExternalArticle": {
              "description": "The Make or Buy type of this article",
              "enum": [
                "internalArticle",
                "externalArticle",
                "mixedArticle",
                "NotSet"
              ],
              "type": "string"
            },
            "CostCenter1": {
              "description": "The cost center 1 this article is associated with",
              "type": "string"
            },
            "CostCenter2": {
              "description": "The cost center 2 this article is associated with",
              "type": "string"
            },
            "BookingAccount": {
              "description": "The booking account this article is associated with",
              "type": "string"
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "Amount": {
          "format": "double",
          "description": "The amount of this position in this document",
          "type": "number"
        },
        "ProjectBudgetId": {
          "format": "int32",
          "description": "The Id of the project budget",
          "type": "integer"
        },
        "CostTypeId": {
          "format": "int32",
          "description": "The if of the costType",
          "type": "integer"
        },
        "BookingAccount": {
          "description": "The booking account this position is associated with",
          "type": "string"
        },
        "CostCenter1": {
          "description": "The cost center 1 this position is associated with",
          "type": "string"
        },
        "CostCenter2": {
          "description": "The cost center 2 this position is associated with",
          "type": "string"
        },
        "CustomFields": {
          "description": "The custom fields of this document position",
          "type": "array",
          "items": {
            "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
            "required": [
              "Name",
              "Id"
            ],
            "type": "object",
            "properties": {
              "Name": {
                "description": "The name of this custom field",
                "type": "string"
              },
              "Value": {
                "description": "The value of this custom field",
                "type": "string"
              },
              "Type": {
                "description": "The type of this custom field",
                "type": "string"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        },
        "DocumentId": {
          "format": "int32",
          "description": "The Id of the document the position belongs to",
          "type": "integer"
        },
        "Id": {
          "format": "int32",
          "description": "The unique identifier of this entity",
          "type": "integer"
        },
        "CreatedBy": {
          "format": "int32",
          "description": "The id of the user who created this entity",
          "type": "integer"
        },
        "UpdatedBy": {
          "format": "int32",
          "description": "The id of the last user who modified this entity",
          "type": "integer"
        },
        "CreatedOn": {
          "format": "date-time",
          "description": "The date and time this entity was created, in UTC",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "description": "The last date and time this entity was updated, in UTC",
          "type": "string"
        }
      }
    },
    "ODataResponse[List[Invoice]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "description": "An invoice represents an outgoing invoice, cancellation or advance payment invoice you send to your customers.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "InvoiceDate": {
                "format": "date-time",
                "description": "The date of this invoice",
                "type": "string"
              },
              "PaymentDate": {
                "format": "date-time",
                "description": "The date, where the invoice was completly paid",
                "type": "string"
              },
              "DueDate": {
                "format": "date-time",
                "description": "The payment due date of this invoice",
                "type": "string"
              },
              "BookingDate": {
                "format": "date-time",
                "description": "The date this invoice was booked",
                "type": "string"
              },
              "Status": {
                "description": "The status of this invoice",
                "type": "string"
              },
              "Positions": {
                "description": "The positions of this invoice",
                "type": "array"
              },
              "Currency": {
                "description": "The ISO 4217 code of the currency of this document.",
                "maxLength": 3,
                "minLength": 0,
                "type": "string"
              },
              "ExchangeRate": {
                "format": "double",
                "description": "The exchange rate to Euro.\r\n            While the document is in a draft state, the exchange rate reflects the current exchange rate of ECB.\r\n            After the document has been sent, the exchange rate at that date will be returned.",
                "type": "number"
              },
              "DeliveryDate": {
                "format": "date-time",
                "description": "The date of the delivery of the products or services.",
                "type": "string"
              },
              "PaymentConditionId": {
                "format": "int32",
                "description": "The Id of the payment condition.",
                "type": "integer"
              },
              "DeliveryConditionId": {
                "format": "int32",
                "description": "The Id of the delivery condition.",
                "type": "integer"
              },
              "PaymentCondition": {
                "description": "The payment condition that applies to this document",
                "type": "object"
              },
              "DeliveryCondition": {
                "description": "The delivery condition that applies to this document",
                "type": "object"
              },
              "DiscountType": {
                "description": "Whether the document discount is specified as a total or a percentage.",
                "type": "string"
              },
              "Discount": {
                "format": "double",
                "description": "A discount that should be applied to the total sum.\r\n            This is either a total or a percantage value, depending on the DiscountType.",
                "type": "number"
              },
              "Margin": {
                "format": "double",
                "description": "A margin (as a percentage) that should be applied to the total sum.\r\n            This margin will be equally distributed over all positions.",
                "type": "number"
              },
              "TaxOption": {
                "description": "The tax rule that should apply to this document.\r\n            VAT is most commonly used for documents within the same country.",
                "type": "string"
              },
              "ServiceOption": {
                "description": "Whether the positions in this document are a delivery or any other kind of service.",
                "type": "string"
              },
              "NetTotal": {
                "format": "decimal",
                "description": "The net sum of the document. This is calculated considering all positions, position and document margin as well as position and document discount.\r\n            The sum is to be interpreted in the document currency.\r\n            Read-only.",
                "type": "number"
              },
              "GrossTotal": {
                "format": "decimal",
                "description": "The gross sum of the document. This is calculated considering all positions, position taxes, position and document margin as well as position and document discount.\r\n            The sum is to be interpreted in the document currency.\r\n            Read-only.",
                "type": "number"
              },
              "VatTotal": {
                "format": "decimal",
                "description": "The sum of the position VAT.\r\n            The sum is to be interpreted in the document currency.\r\n            Read-only.",
                "type": "number"
              },
              "PaidTotal": {
                "format": "decimal",
                "description": "The sum of received payments for this document.\r\n            The sum is to be interpreted in the document currency.\r\n            Read-only.",
                "type": "number"
              },
              "Type": {
                "description": "The type of the document",
                "type": "string"
              },
              "AddressText": {
                "description": "The receiver address text of the document",
                "type": "string"
              },
              "CompanyAddressId": {
                "format": "int32",
                "description": "The id of the postal address of the receiving company",
                "type": "integer"
              },
              "CompanyAddress": {
                "description": "The postal address of the receiving company",
                "type": "object"
              },
              "Subject": {
                "description": "The subject of the document including the placeholders",
                "type": "string"
              },
              "CalculatedSubject": {
                "description": "The calcuated subject of the document.\r\n            The subject includes the final data, without the placeholders.",
                "type": "string"
              },
              "Header": {
                "description": "The header text on the document",
                "type": "string"
              },
              "Footer": {
                "description": "The footer text on the document",
                "type": "string"
              },
              "DocumentTemplateId": {
                "format": "int32",
                "description": "The document template id",
                "type": "integer"
              },
              "Number": {
                "description": "The number of the document, auto generated by the HQ",
                "type": "string"
              },
              "ContactPersonId": {
                "format": "int32",
                "description": "The id of the responsible contact person at the receiving company",
                "type": "integer"
              },
              "ContactPerson": {
                "description": "The responsible contact person at the receiving company",
                "type": "object"
              },
              "CompanyId": {
                "format": "int32",
                "description": "The id of the company which is the receiver of the document",
                "type": "integer"
              },
              "Company": {
                "description": "The company which is the receiver of the document",
                "type": "object"
              },
              "InternalContactPersonId": {
                "format": "int32",
                "description": "The id of the HQ user responsible for this document",
                "type": "integer"
              },
              "InternalContactPerson": {
                "description": "The HQ user repsonsible for this document",
                "type": "object"
              },
              "LeadId": {
                "format": "int32",
                "description": "The id of the lead related to the document",
                "type": "integer"
              },
              "Lead": {
                "description": "The lead related to the document",
                "type": "object"
              },
              "SyncId": {
                "description": "A unique identifier for other sync clients",
                "type": "string"
              },
              "ProjectId": {
                "format": "int32",
                "description": "the id of the project related to the document",
                "type": "integer"
              },
              "Project": {
                "description": "The project related to the document",
                "type": "object"
              },
              "Note": {
                "description": "The comment on the document",
                "type": "string"
              },
              "CompanyPurchaseOrderNumber": {
                "description": "The purchase order number on the document",
                "type": "string"
              },
              "Language": {
                "description": "The language of the document as two-letter ISOCode, for example 'DE'",
                "type": "string"
              },
              "DocumentFile": {
                "description": "The generated pdf file",
                "type": "object"
              },
              "DocumentImage": {
                "description": "The generated pdf file, as an image",
                "type": "object"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "Invoice": {
      "description": "An invoice represents an outgoing invoice, cancellation or advance payment invoice you send to your customers.",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "InvoiceDate": {
          "format": "date-time",
          "description": "The date of this invoice",
          "type": "string"
        },
        "PaymentDate": {
          "format": "date-time",
          "description": "The date, where the invoice was completly paid",
          "type": "string"
        },
        "DueDate": {
          "format": "date-time",
          "description": "The payment due date of this invoice",
          "type": "string"
        },
        "BookingDate": {
          "format": "date-time",
          "description": "The date this invoice was booked",
          "type": "string"
        },
        "Status": {
          "description": "The status of this invoice",
          "enum": [
            "Draft",
            "WaitingForReview",
            "Sent",
            "PartlyPaid",
            "CompletelyPaid",
            "Canceled",
            "WaitingForApproval",
            "Approved"
          ],
          "type": "string"
        },
        "Positions": {
          "description": "The positions of this invoice",
          "type": "array",
          "items": {
            "description": "A document position represents a position on a quotation or invoice.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "IsOptional": {
                "description": "Whether this position is optional. Only valid in quotations.",
                "type": "boolean"
              },
              "Tax": {
                "format": "double",
                "description": "The position tax rate, for example 19%",
                "type": "number"
              },
              "Price": {
                "format": "decimal",
                "description": "The position price, in the currency of the document",
                "type": "number"
              },
              "Discount": {
                "format": "double",
                "description": "The percentage discount that should be applied to this position sum",
                "type": "number"
              },
              "Margin": {
                "format": "double",
                "description": "The margin that should be applied to this position sum",
                "type": "number"
              },
              "ExcludeFromEarlyPayment": {
                "description": "Whether this position should be excluded from early payment discount calculations",
                "type": "boolean"
              },
              "TotalPrice": {
                "format": "double",
                "description": "The total price under consideration of margin and discount",
                "type": "number"
              },
              "TotalUnitPrice": {
                "format": "double",
                "description": "The total unit price under consideration of margin and discount",
                "type": "number"
              },
              "TotalVat": {
                "format": "double",
                "description": "The total VAT of this position under consideration of margin and discount",
                "type": "number"
              },
              "UserReportings": {
                "description": "The user reportings which have been billed with this document position",
                "type": "array"
              },
              "Interval": {
                "description": "The interval of the recurrence.",
                "type": "string"
              },
              "Text": {
                "description": "The position text, as HTML",
                "type": "string"
              },
              "Unit": {
                "description": "The position unit",
                "type": "string"
              },
              "Type": {
                "description": "The type of this position",
                "type": "string"
              },
              "Order": {
                "format": "int32",
                "description": "The order of this position in the document",
                "type": "integer"
              },
              "ArticleId": {
                "format": "int32",
                "description": "The Id of the article that is associated with this position",
                "type": "integer"
              },
              "ProjectId": {
                "format": "int32",
                "description": "The Id Of the Project",
                "type": "integer"
              },
              "Article": {
                "description": "The article that is associated with this position",
                "type": "object"
              },
              "Amount": {
                "format": "double",
                "description": "The amount of this position in this document",
                "type": "number"
              },
              "ProjectBudgetId": {
                "format": "int32",
                "description": "The Id of the project budget",
                "type": "integer"
              },
              "CostTypeId": {
                "format": "int32",
                "description": "The if of the costType",
                "type": "integer"
              },
              "BookingAccount": {
                "description": "The booking account this position is associated with",
                "type": "string"
              },
              "CostCenter1": {
                "description": "The cost center 1 this position is associated with",
                "type": "string"
              },
              "CostCenter2": {
                "description": "The cost center 2 this position is associated with",
                "type": "string"
              },
              "CustomFields": {
                "description": "The custom fields of this document position",
                "type": "array"
              },
              "DocumentId": {
                "format": "int32",
                "description": "The Id of the document the position belongs to",
                "type": "integer"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        },
        "Currency": {
          "description": "The ISO 4217 code of the currency of this document.",
          "maxLength": 3,
          "minLength": 0,
          "type": "string"
        },
        "ExchangeRate": {
          "format": "double",
          "description": "The exchange rate to Euro.\r\n            While the document is in a draft state, the exchange rate reflects the current exchange rate of ECB.\r\n            After the document has been sent, the exchange rate at that date will be returned.",
          "type": "number"
        },
        "DeliveryDate": {
          "format": "date-time",
          "description": "The date of the delivery of the products or services.",
          "type": "string"
        },
        "PaymentConditionId": {
          "format": "int32",
          "description": "The Id of the payment condition.",
          "type": "integer"
        },
        "DeliveryConditionId": {
          "format": "int32",
          "description": "The Id of the delivery condition.",
          "type": "integer"
        },
        "PaymentCondition": {
          "description": "The payment condition that applies to this document",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The name of document condition",
              "type": "string"
            },
            "Text": {
              "description": "The text of condition",
              "type": "string"
            },
            "DisplayText": {
              "description": "The text with replaced due days",
              "type": "string"
            },
            "DueInDays": {
              "format": "int32",
              "description": "The payment due date in days",
              "type": "integer"
            },
            "Type": {
              "description": "The type of this condition",
              "enum": [
                "PaymentConditions",
                "DeliveryConditions",
                "NotDefined"
              ],
              "type": "string"
            },
            "WarningDays": {
              "format": "int32",
              "description": "The payment due date in days of a warning document",
              "type": "integer"
            },
            "ReminderDays": {
              "format": "int32",
              "description": "The payment due date in days of a reminder document",
              "type": "integer"
            },
            "Language": {
              "description": "The language of the condition, as two-letter ISO-Code, for example 'DE'",
              "type": "string"
            },
            "DocumentEarlyPayments": {
              "description": "The list of early payment conditions that belong to this document condition (i.e. Skonto)",
              "type": "array",
              "items": {
                "description": "The document early payment entry represents a rule in days before which a discount is granted on an invoice.",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "DeliveryCondition": {
          "description": "The delivery condition that applies to this document",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The name of document condition",
              "type": "string"
            },
            "Text": {
              "description": "The text of condition",
              "type": "string"
            },
            "DisplayText": {
              "description": "The text with replaced due days",
              "type": "string"
            },
            "DueInDays": {
              "format": "int32",
              "description": "The payment due date in days",
              "type": "integer"
            },
            "Type": {
              "description": "The type of this condition",
              "enum": [
                "PaymentConditions",
                "DeliveryConditions",
                "NotDefined"
              ],
              "type": "string"
            },
            "WarningDays": {
              "format": "int32",
              "description": "The payment due date in days of a warning document",
              "type": "integer"
            },
            "ReminderDays": {
              "format": "int32",
              "description": "The payment due date in days of a reminder document",
              "type": "integer"
            },
            "Language": {
              "description": "The language of the condition, as two-letter ISO-Code, for example 'DE'",
              "type": "string"
            },
            "DocumentEarlyPayments": {
              "description": "The list of early payment conditions that belong to this document condition (i.e. Skonto)",
              "type": "array",
              "items": {
                "description": "The document early payment entry represents a rule in days before which a discount is granted on an invoice.",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "DiscountType": {
          "description": "Whether the document discount is specified as a total or a percentage.",
          "enum": [
            "Percent",
            "NetValue",
            "NotSet"
          ],
          "type": "string"
        },
        "Discount": {
          "format": "double",
          "description": "A discount that should be applied to the total sum.\r\n            This is either a total or a percantage value, depending on the DiscountType.",
          "type": "number"
        },
        "Margin": {
          "format": "double",
          "description": "A margin (as a percentage) that should be applied to the total sum.\r\n            This margin will be equally distributed over all positions.",
          "type": "number"
        },
        "TaxOption": {
          "description": "The tax rule that should apply to this document.\r\n            VAT is most commonly used for documents within the same country.",
          "enum": [
            "VatApplicable",
            "FreeThirdCountryTerritory",
            "FreeEuropeanUnionWithVatId",
            "FreeEuropeanUnionNoVatId",
            "Inverse",
            "IntraCommunityDelivery",
            "ExportDelivery",
            "FreeOther",
            "FreeYouthSupport"
          ],
          "type": "string"
        },
        "ServiceOption": {
          "description": "Whether the positions in this document are a delivery or any other kind of service.",
          "enum": [
            "None",
            "Delivery",
            "Service",
            "DeliveryAndService"
          ],
          "type": "string"
        },
        "NetTotal": {
          "format": "decimal",
          "description": "The net sum of the document. This is calculated considering all positions, position and document margin as well as position and document discount.\r\n            The sum is to be interpreted in the document currency.\r\n            Read-only.",
          "type": "number"
        },
        "GrossTotal": {
          "format": "decimal",
          "description": "The gross sum of the document. This is calculated considering all positions, position taxes, position and document margin as well as position and document discount.\r\n            The sum is to be interpreted in the document currency.\r\n            Read-only.",
          "type": "number"
        },
        "VatTotal": {
          "format": "decimal",
          "description": "The sum of the position VAT.\r\n            The sum is to be interpreted in the document currency.\r\n            Read-only.",
          "type": "number"
        },
        "PaidTotal": {
          "format": "decimal",
          "description": "The sum of received payments for this document.\r\n            The sum is to be interpreted in the document currency.\r\n            Read-only.",
          "type": "number"
        },
        "Type": {
          "description": "The type of the document",
          "enum": [
            "Quotation",
            "Invoice",
            "DeliveryNote",
            "Warning",
            "Reminder",
            "Cancellation",
            "CreditNote",
            "Confirmation",
            "IncomingInvoice",
            "Undefined",
            "Order",
            "PriceInquery",
            "Letter",
            "Minute",
            "Akonto"
          ],
          "type": "string"
        },
        "AddressText": {
          "description": "The receiver address text of the document",
          "type": "string"
        },
        "CompanyAddressId": {
          "format": "int32",
          "description": "The id of the postal address of the receiving company",
          "type": "integer"
        },
        "CompanyAddress": {
          "description": "The postal address of the receiving company",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "City": {
              "description": "The city of this address",
              "type": "string"
            },
            "Street": {
              "description": "The street name of this address",
              "type": "string"
            },
            "HouseNumber": {
              "description": "The house number of this address",
              "type": "string"
            },
            "ZipCode": {
              "description": "The ZIP or Postal Code of this address",
              "type": "string"
            },
            "AddressLine2": {
              "description": "The secondary address line, c/o details, etc.",
              "type": "string"
            },
            "Description": {
              "description": "The description of this address",
              "type": "string"
            },
            "Country": {
              "description": "The ISO 3166-1 alpha-2 country code of this address",
              "type": "string"
            },
            "Phone": {
              "description": "The phone number of this address",
              "type": "string"
            },
            "Fax": {
              "description": "The fax number of this address",
              "type": "string"
            },
            "Email": {
              "description": "The email address of this address",
              "type": "string"
            },
            "Website": {
              "description": "The website of this address",
              "type": "string"
            },
            "IsStandard": {
              "description": "Whether this address is the standard address of a company",
              "type": "boolean"
            },
            "DefaultForDocumentType": {
              "description": "The document type this address should be used as a standard for",
              "enum": [
                "Quotation",
                "Invoice",
                "DeliveryNote",
                "Warning",
                "Reminder",
                "Cancellation",
                "CreditNote",
                "Confirmation",
                "IncomingInvoice",
                "Undefined",
                "Order",
                "PriceInquery",
                "Letter",
                "Minute",
                "Akonto"
              ],
              "type": "string"
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "Subject": {
          "description": "The subject of the document including the placeholders",
          "type": "string"
        },
        "CalculatedSubject": {
          "description": "The calcuated subject of the document.\r\n            The subject includes the final data, without the placeholders.",
          "type": "string"
        },
        "Header": {
          "description": "The header text on the document",
          "type": "string"
        },
        "Footer": {
          "description": "The footer text on the document",
          "type": "string"
        },
        "DocumentTemplateId": {
          "format": "int32",
          "description": "The document template id",
          "type": "integer"
        },
        "Number": {
          "description": "The number of the document, auto generated by the HQ",
          "type": "string"
        },
        "ContactPersonId": {
          "format": "int32",
          "description": "The id of the responsible contact person at the receiving company",
          "type": "integer"
        },
        "ContactPerson": {
          "description": "The responsible contact person at the receiving company",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "FirstName": {
              "description": "The first name of the contact person",
              "type": "string"
            },
            "LastName": {
              "description": "The last name of the contact person",
              "type": "string"
            },
            "Position": {
              "description": "The position of the contact person",
              "type": "string"
            },
            "CompanyId": {
              "format": "int32",
              "description": "The Id of the company that the contact person belongs to",
              "type": "integer"
            },
            "PhoneLandline": {
              "description": "The landline phone number of the contact person",
              "type": "string"
            },
            "PhoneMobile": {
              "description": "The mobile phone number of the contact person",
              "type": "string"
            },
            "Salutation": {
              "description": "The salutation of the contact person",
              "type": "string"
            },
            "Birthdate": {
              "description": "The birth date of the user",
              "type": "string"
            },
            "SalutationForm": {
              "description": "The salutation form of the contact person. The value can be \"Neutral\", \"Formal\", \"Informal\" or null.",
              "enum": [
                "Formal",
                "Informal",
                "Neutral",
                "NotSet"
              ],
              "type": "string"
            },
            "Title": {
              "description": "The academic title of the contact person",
              "type": "string"
            },
            "Language": {
              "description": "The preferred contact language of this contact person, in two-letter ISO-Code, for example 'DE'",
              "type": "string"
            },
            "DefaultAddressId": {
              "format": "int32",
              "description": "The id of the default address of this contact person",
              "type": "integer"
            },
            "Addresses": {
              "description": "All addresses of the contact person",
              "type": "array",
              "items": {
                "description": "A company address represents one of many addresses of companies.",
                "type": "object"
              }
            },
            "DefaultAddress": {
              "description": "The default address of this contact person",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "CustomFields": {
              "description": "The customfields associated with this contact person",
              "type": "array",
              "items": {
                "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
                "type": "object"
              }
            },
            "Company": {
              "description": "The company that the contact person belongs to",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "CompanyId": {
          "format": "int32",
          "description": "The id of the company which is the receiver of the document",
          "type": "integer"
        },
        "Company": {
          "description": "The company which is the receiver of the document",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The name of the company",
              "type": "string"
            },
            "IndustrialSector": {
              "description": "The company's industrial sector",
              "type": "string"
            },
            "Description": {
              "description": "A longer description of the company",
              "type": "string"
            },
            "IBAN": {
              "description": "The IBAN of the company",
              "type": "string"
            },
            "BIC": {
              "description": "The BIC of the company",
              "type": "string"
            },
            "DebitorNumber": {
              "format": "int32",
              "description": "The company's debitor number",
              "type": "integer"
            },
            "CreditorNumber": {
              "format": "int32",
              "description": "The company's creditor number",
              "type": "integer"
            },
            "TaxId": {
              "description": "The company's tax id",
              "type": "string"
            },
            "DefaultDeliveryConditionId": {
              "format": "int32",
              "description": "The id of the default delivery condition of this company",
              "type": "integer"
            },
            "DefaultDeliveryCondition": {
              "description": "The default delivery condition of this company",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "DefaultPaymentConditionId": {
              "format": "int32",
              "description": "The id of the default payment condition of this company",
              "type": "integer"
            },
            "DefaultPaymentCondition": {
              "description": "The default payment condition of this company",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "DefaultAddress": {
              "description": "The default address of this company",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Addresses": {
              "description": "All addresses of the company",
              "type": "array",
              "items": {
                "description": "A company address represents one of many addresses of companies.",
                "type": "object"
              }
            },
            "ResponsibleUsers": {
              "description": "The list of the responsible users of this company",
              "type": "array",
              "items": {
                "description": "A user represents a user in your HQ system.",
                "type": "object"
              }
            },
            "CustomFields": {
              "description": "The customfields associated with this company",
              "type": "array",
              "items": {
                "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
                "type": "object"
              }
            },
            "CompanyTypes": {
              "description": "The company types associated with this company",
              "type": "array",
              "items": {
                "description": "This is a connection between a company and a company type.\r\n            A company can have more than one type and can have a different company number for each type.",
                "type": "object"
              }
            },
            "Files": {
              "description": "The files associated with this company",
              "type": "array",
              "items": {
                "description": "A file represents a user upload or HQ-generated PDF documents.",
                "type": "object"
              }
            },
            "Subsystems": {
              "description": "The subsystems this company is associated with",
              "type": "array",
              "items": {
                "description": "A subsystem represents a tenant within a customer's HQ",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "InternalContactPersonId": {
          "format": "int32",
          "description": "The id of the HQ user responsible for this document",
          "type": "integer"
        },
        "InternalContactPerson": {
          "description": "The HQ user repsonsible for this document",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "FirstName": {
              "description": "The first name of the user",
              "type": "string"
            },
            "LastName": {
              "description": "The last name of the user",
              "type": "string"
            },
            "UserName": {
              "description": "The user's user name in HQ",
              "type": "string"
            },
            "EMailWork": {
              "description": "The work email of the user",
              "type": "string"
            },
            "Salutation": {
              "description": "The salutation of the user, i.e. Mrs. or Mr.",
              "type": "string"
            },
            "Title": {
              "description": "The professional title of the user",
              "type": "string"
            },
            "EmployeeNumber": {
              "description": "The employee number of the user",
              "type": "string"
            },
            "Department": {
              "description": "The department of the user",
              "type": "string"
            },
            "BirthDate": {
              "format": "date-time",
              "description": "The birth date of the user",
              "type": "string"
            },
            "FederalState": {
              "description": "The federal state of the user",
              "type": "string"
            },
            "Country": {
              "description": "The country of the user",
              "type": "string"
            },
            "BasicLoadInHours": {
              "format": "double",
              "description": "The basic load in hours of the user",
              "type": "number"
            },
            "EntryDate": {
              "format": "date-time",
              "description": "The entry date of the user",
              "type": "string"
            },
            "LeavingDate": {
              "format": "date-time",
              "description": "The leaving date of the user",
              "type": "string"
            },
            "PhoneLandlinePrivate": {
              "description": "The private phone number of the user - landline",
              "type": "string"
            },
            "PhoneLandlineWork": {
              "description": "The work phone number of the user - landline",
              "type": "string"
            },
            "PhoneMobilePrivate": {
              "description": "The private phone number of the user - mobile",
              "type": "string"
            },
            "PhoneMobileWork": {
              "description": "The work phon number of the user - mobile",
              "type": "string"
            },
            "UserWorkingHours": {
              "description": "The custom fields of the user",
              "type": "array",
              "items": {
                "description": "The weekly working hours user",
                "type": "object"
              }
            },
            "CustomFields": {
              "description": "The custom fields of the user",
              "type": "array",
              "items": {
                "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
                "type": "object"
              }
            },
            "UserGroups": {
              "description": "The user groups of the user",
              "type": "array",
              "items": {
                "description": "The user groups a user is in.",
                "type": "object"
              }
            },
            "ResourceGroup": {
              "description": "The resource group of the user",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Absences": {
              "description": "The absences of the user",
              "type": "array",
              "items": {
                "description": "An absence represents a time of absence from work, for example holidays or sickness. \r\n            Absences can be either paid or unpaid.",
                "type": "object"
              }
            },
            "Assignments": {
              "description": "The tasks the user is assigned to",
              "type": "array",
              "items": {
                "description": "The assignment of a user to a task",
                "type": "object"
              }
            },
            "Reportings": {
              "description": "The reportings of this user",
              "type": "array",
              "items": {
                "description": "A user reporting represents a logged time of a user on a specific task in HQ.",
                "type": "object"
              }
            },
            "ProjectMembers": {
              "description": "The allocations of this user to projects",
              "type": "array",
              "items": {
                "description": "A project member links a user to a project. It includes the project role and the charge rates\r\n            for the link.",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "LeadId": {
          "format": "int32",
          "description": "The id of the lead related to the document",
          "type": "integer"
        },
        "Lead": {
          "description": "The lead related to the document",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The name of the lead",
              "type": "string"
            },
            "CompanyName": {
              "description": "The name of the company that this lead is assigned to, read-only",
              "type": "string"
            },
            "Number": {
              "description": "The number of the lead",
              "type": "string"
            },
            "Company": {
              "description": "The company this lead belongs to",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Status": {
              "description": "The status of the lead",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "StatusId": {
              "format": "int32",
              "description": "The Id of the status of the lead",
              "type": "integer"
            },
            "CashOn": {
              "format": "date-time",
              "description": "The expected sales date",
              "type": "string"
            },
            "ClosingProbability": {
              "format": "int32",
              "description": "The probability of closing the lead, in percent",
              "type": "integer"
            },
            "Currency": {
              "description": "The ISO 4217 code of the currency of the lead volume",
              "maxLength": 3,
              "minLength": 0,
              "type": "string"
            },
            "Volume": {
              "format": "double",
              "description": "The financial volume when closing the lead",
              "type": "number"
            },
            "CompanyId": {
              "format": "int32",
              "description": "The Id of the company this lead belongs to",
              "type": "integer"
            },
            "CustomFields": {
              "description": "The custom fields of this lead",
              "type": "array",
              "items": {
                "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
                "type": "object"
              }
            },
            "ResponsibleUserId": {
              "format": "int32",
              "description": "The user id of the HQ user responsible for this lead",
              "type": "integer"
            },
            "ResponsibleUser": {
              "description": "The HQ user responsible for this lead",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "SalesCampaigns": {
              "description": "List of all Sales Campaigns for this Lead",
              "type": "array",
              "items": {
                "description": "Represents the status a lead is in",
                "type": "object"
              }
            },
            "ContactPersons": {
              "description": "List of all contact persons for this Lead",
              "type": "array",
              "items": {
                "description": "A contact person represents a person that works for a company you do business with. A company can have many contact persons.",
                "type": "object"
              }
            },
            "Subsystems": {
              "description": "The subsystems this lead is associated with",
              "type": "array",
              "items": {
                "description": "A subsystem represents a tenant within a customer's HQ",
                "type": "object"
              }
            },
            "ProjectId": {
              "format": "int32",
              "description": "The project id of the lead",
              "type": "integer"
            },
            "Project": {
              "description": "The project of the lead",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "SyncId": {
          "description": "A unique identifier for other sync clients",
          "type": "string"
        },
        "ProjectId": {
          "format": "int32",
          "description": "the id of the project related to the document",
          "type": "integer"
        },
        "Project": {
          "description": "The project related to the document",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Number": {
              "description": "The number of the project",
              "type": "string"
            },
            "Name": {
              "description": "The name of the project",
              "type": "string"
            },
            "Status": {
              "description": "The current status description of the project",
              "type": "string"
            },
            "PlannedStartDate": {
              "format": "date-time",
              "description": "The planned start date of the first task of the project",
              "type": "string"
            },
            "PlannedEndDate": {
              "format": "date-time",
              "description": "The planned end date of the last task of the project",
              "type": "string"
            },
            "StartDate": {
              "format": "date-time",
              "description": "The planned start date of the project",
              "type": "string"
            },
            "EndDate": {
              "format": "date-time",
              "description": "The planned end date of the project",
              "type": "string"
            },
            "AworkSyncId": {
              "description": "The Id from the linked awork project",
              "type": "string"
            },
            "Subsystems": {
              "description": "The subsystems this project is associated with",
              "type": "array",
              "items": {
                "description": "A subsystem represents a tenant within a customer's HQ",
                "type": "object"
              }
            },
            "ProjectTemplateId": {
              "format": "int32",
              "description": "The id of the project template",
              "type": "integer"
            },
            "ProjectTemplate": {
              "description": "The template of this project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "ProjectStatusId": {
              "format": "int32",
              "description": "The id of the project status",
              "type": "integer"
            },
            "CompanyId": {
              "format": "int32",
              "description": "The id of the company",
              "type": "integer"
            },
            "LeadId": {
              "format": "int32",
              "description": "The Id of the lead",
              "type": "integer"
            },
            "InvoiceAddressId": {
              "format": "int32",
              "description": "Id of the address for invoices of this project",
              "type": "integer"
            },
            "DeliveryAddressId": {
              "format": "int32",
              "description": "Id of the address for the deliveries of this project",
              "type": "integer"
            },
            "ResponsibleUserId": {
              "format": "int32",
              "description": "The id of the user which is responsible for this (internal) project",
              "type": "integer"
            },
            "ProjectStatus": {
              "description": "The status of the project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Company": {
              "description": "The company this project is associated with",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "ResponsibleUser": {
              "description": "The user which is responsible for this (internal) project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "DeliveryAddress": {
              "description": "The address for delvieries of this project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "InvoiceAddress": {
              "description": "The address for delvieries of this project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Lead": {
              "description": "The lead of the project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "CustomFields": {
              "description": "The custom fields of this project",
              "type": "array",
              "items": {
                "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
                "type": "object"
              }
            },
            "Reportings": {
              "description": "The user reportings of this project",
              "type": "array",
              "items": {
                "description": "A user reporting represents a logged time of a user on a specific task in HQ.",
                "type": "object"
              }
            },
            "Files": {
              "description": "The files of this project",
              "type": "array",
              "items": {
                "description": "A file represents a user upload or HQ-generated PDF documents.",
                "type": "object"
              }
            },
            "Members": {
              "description": "The members of this project",
              "type": "array",
              "items": {
                "description": "A project member links a user to a project. It includes the project role and the charge rates\r\n            for the link.",
                "type": "object"
              }
            },
            "ContactHistories": {
              "description": "Contact histories linked to this project.",
              "type": "array",
              "items": {
                "description": "The contact history represents any contact you had with a contact person. For example, any meeting, phone call or email can be a contact history entry.",
                "type": "object"
              }
            },
            "ContactPersons": {
              "description": "Contact persons linked to this project.",
              "type": "array",
              "items": {
                "description": "A contact person represents a person that works for a company you do business with. A company can have many contact persons.",
                "type": "object"
              }
            },
            "Articles": {
              "description": "All articles linked to the project",
              "type": "array",
              "items": {
                "description": "An article is a stock item that your company sells, for example a digital camera. \r\n            An article can also be a service or activity that your company performs, for example a digital design. \r\n            Articles can be used to create positions on invoices or quotations, among others.",
                "type": "object"
              }
            },
            "ProjectBudgets": {
              "description": "All articles linked to the project",
              "type": "array",
              "items": {
                "description": "The project budget for a project",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "Note": {
          "description": "The comment on the document",
          "type": "string"
        },
        "CompanyPurchaseOrderNumber": {
          "description": "The purchase order number on the document",
          "type": "string"
        },
        "Language": {
          "description": "The language of the document as two-letter ISOCode, for example 'DE'",
          "type": "string"
        },
        "DocumentFile": {
          "description": "The generated pdf file",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The name of the file",
              "type": "string"
            },
            "Size": {
              "format": "double",
              "description": "The size in bytes",
              "type": "number"
            },
            "HasContent": {
              "description": "Returns true if the file has content (was uploaded yet)",
              "type": "boolean"
            },
            "IsDirectory": {
              "description": "Returns true if the file entity is a directory, otherwise false",
              "type": "boolean"
            },
            "DirectoryId": {
              "format": "int32",
              "description": "The id of the parent directory",
              "type": "integer"
            },
            "FileRelations": {
              "description": "List of all relations of a",
              "type": "array",
              "items": {
                "description": "A file relation represents a link between a file and another entity like a project or article.",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "DocumentImage": {
          "description": "The generated pdf file, as an image",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The name of the file",
              "type": "string"
            },
            "Size": {
              "format": "double",
              "description": "The size in bytes",
              "type": "number"
            },
            "HasContent": {
              "description": "Returns true if the file has content (was uploaded yet)",
              "type": "boolean"
            },
            "IsDirectory": {
              "description": "Returns true if the file entity is a directory, otherwise false",
              "type": "boolean"
            },
            "DirectoryId": {
              "format": "int32",
              "description": "The id of the parent directory",
              "type": "integer"
            },
            "FileRelations": {
              "description": "List of all relations of a",
              "type": "array",
              "items": {
                "description": "A file relation represents a link between a file and another entity like a project or article.",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "Id": {
          "format": "int32",
          "description": "The unique identifier of this entity",
          "type": "integer"
        },
        "CreatedBy": {
          "format": "int32",
          "description": "The id of the user who created this entity",
          "type": "integer"
        },
        "UpdatedBy": {
          "format": "int32",
          "description": "The id of the last user who modified this entity",
          "type": "integer"
        },
        "CreatedOn": {
          "format": "date-time",
          "description": "The date and time this entity was created, in UTC",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "description": "The last date and time this entity was updated, in UTC",
          "type": "string"
        }
      }
    },
    "ODataResponse[List[PlannedRevenue]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "description": "This model represents an occurrence of a planned revenue.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "Description": {
                "description": "The description of the planned revenue.",
                "type": "string"
              },
              "NetTotal": {
                "format": "decimal",
                "description": "The net total planned revenue.",
                "type": "number"
              },
              "GrossTotal": {
                "format": "decimal",
                "description": "The gross total planned revenue.",
                "type": "number"
              },
              "Currency": {
                "description": "The ISO 4217 code of the currency of this planned revenue.",
                "maxLength": 3,
                "minLength": 0,
                "type": "string"
              },
              "Status": {
                "description": "The status of this planned revenue occurrence.",
                "type": "string"
              },
              "Margin": {
                "format": "int32",
                "description": "The margin of this planned revenue.",
                "type": "integer"
              },
              "Discount": {
                "format": "double",
                "description": "The discount of the planned revenue.\r\n            Monetary value; Its currency is stored in the property Currency.",
                "type": "number"
              },
              "DiscountType": {
                "description": "Whether the discount is an absolute or relative value.",
                "type": "string"
              },
              "DueDate": {
                "format": "date-time",
                "description": "The due date of this occurrence.",
                "type": "string"
              },
              "Probability": {
                "format": "int32",
                "description": "The probability of the planned revenue, from 0 to 100.",
                "type": "integer"
              },
              "LeadId": {
                "format": "int32",
                "description": "The id of the lead related to the planned revenue.",
                "type": "integer"
              },
              "Lead": {
                "description": "The lead related to the planned revenue.",
                "type": "object"
              },
              "ProjectId": {
                "format": "int32",
                "description": "the id of the project related to the planned revenue.",
                "type": "integer"
              },
              "Project": {
                "description": "The project related to the planned revenue.",
                "type": "object"
              },
              "CompanyId": {
                "format": "int32",
                "description": "The id of the company which is the receiver of the planned revenue.",
                "type": "integer"
              },
              "Company": {
                "description": "The company which is the receiver of the planned revenue.",
                "type": "object"
              },
              "PaymentConditionId": {
                "format": "int32",
                "description": "The id of the payment condition.",
                "type": "integer"
              },
              "PaymentCondition": {
                "description": "The payment condition that applies to this planned revenue.",
                "type": "object"
              },
              "Positions": {
                "description": "The positions of this planned revenue.",
                "type": "array"
              },
              "RecurringPlannedRevenues": {
                "description": "The recurring planned revenue.",
                "type": "array"
              },
              "RecurrenceId": {
                "format": "int32",
                "description": "The id of the recurrence information.",
                "type": "integer"
              },
              "Recurrence": {
                "description": "The recurrence information, if this occurrence is based on\r\n            a recurring planned revenue.",
                "type": "object"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "PlannedRevenue": {
      "description": "This model represents an occurrence of a planned revenue.",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "Description": {
          "description": "The description of the planned revenue.",
          "type": "string"
        },
        "NetTotal": {
          "format": "decimal",
          "description": "The net total planned revenue.",
          "type": "number"
        },
        "GrossTotal": {
          "format": "decimal",
          "description": "The gross total planned revenue.",
          "type": "number"
        },
        "Currency": {
          "description": "The ISO 4217 code of the currency of this planned revenue.",
          "maxLength": 3,
          "minLength": 0,
          "type": "string"
        },
        "Status": {
          "description": "The status of this planned revenue occurrence.",
          "enum": [
            "Planned",
            "Offered",
            "Confirmed",
            "Paid",
            "Billed",
            "Skipped"
          ],
          "type": "string"
        },
        "Margin": {
          "format": "int32",
          "description": "The margin of this planned revenue.",
          "type": "integer"
        },
        "Discount": {
          "format": "double",
          "description": "The discount of the planned revenue.\r\n            Monetary value; Its currency is stored in the property Currency.",
          "type": "number"
        },
        "DiscountType": {
          "description": "Whether the discount is an absolute or relative value.",
          "enum": [
            "Percent",
            "NetValue",
            "NotSet"
          ],
          "type": "string"
        },
        "DueDate": {
          "format": "date-time",
          "description": "The due date of this occurrence.",
          "type": "string"
        },
        "Probability": {
          "format": "int32",
          "description": "The probability of the planned revenue, from 0 to 100.",
          "type": "integer"
        },
        "LeadId": {
          "format": "int32",
          "description": "The id of the lead related to the planned revenue.",
          "type": "integer"
        },
        "Lead": {
          "description": "The lead related to the planned revenue.",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The name of the lead",
              "type": "string"
            },
            "CompanyName": {
              "description": "The name of the company that this lead is assigned to, read-only",
              "type": "string"
            },
            "Number": {
              "description": "The number of the lead",
              "type": "string"
            },
            "Company": {
              "description": "The company this lead belongs to",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Status": {
              "description": "The status of the lead",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "StatusId": {
              "format": "int32",
              "description": "The Id of the status of the lead",
              "type": "integer"
            },
            "CashOn": {
              "format": "date-time",
              "description": "The expected sales date",
              "type": "string"
            },
            "ClosingProbability": {
              "format": "int32",
              "description": "The probability of closing the lead, in percent",
              "type": "integer"
            },
            "Currency": {
              "description": "The ISO 4217 code of the currency of the lead volume",
              "maxLength": 3,
              "minLength": 0,
              "type": "string"
            },
            "Volume": {
              "format": "double",
              "description": "The financial volume when closing the lead",
              "type": "number"
            },
            "CompanyId": {
              "format": "int32",
              "description": "The Id of the company this lead belongs to",
              "type": "integer"
            },
            "CustomFields": {
              "description": "The custom fields of this lead",
              "type": "array",
              "items": {
                "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
                "type": "object"
              }
            },
            "ResponsibleUserId": {
              "format": "int32",
              "description": "The user id of the HQ user responsible for this lead",
              "type": "integer"
            },
            "ResponsibleUser": {
              "description": "The HQ user responsible for this lead",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "SalesCampaigns": {
              "description": "List of all Sales Campaigns for this Lead",
              "type": "array",
              "items": {
                "description": "Represents the status a lead is in",
                "type": "object"
              }
            },
            "ContactPersons": {
              "description": "List of all contact persons for this Lead",
              "type": "array",
              "items": {
                "description": "A contact person represents a person that works for a company you do business with. A company can have many contact persons.",
                "type": "object"
              }
            },
            "Subsystems": {
              "description": "The subsystems this lead is associated with",
              "type": "array",
              "items": {
                "description": "A subsystem represents a tenant within a customer's HQ",
                "type": "object"
              }
            },
            "ProjectId": {
              "format": "int32",
              "description": "The project id of the lead",
              "type": "integer"
            },
            "Project": {
              "description": "The project of the lead",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "ProjectId": {
          "format": "int32",
          "description": "the id of the project related to the planned revenue.",
          "type": "integer"
        },
        "Project": {
          "description": "The project related to the planned revenue.",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Number": {
              "description": "The number of the project",
              "type": "string"
            },
            "Name": {
              "description": "The name of the project",
              "type": "string"
            },
            "Status": {
              "description": "The current status description of the project",
              "type": "string"
            },
            "PlannedStartDate": {
              "format": "date-time",
              "description": "The planned start date of the first task of the project",
              "type": "string"
            },
            "PlannedEndDate": {
              "format": "date-time",
              "description": "The planned end date of the last task of the project",
              "type": "string"
            },
            "StartDate": {
              "format": "date-time",
              "description": "The planned start date of the project",
              "type": "string"
            },
            "EndDate": {
              "format": "date-time",
              "description": "The planned end date of the project",
              "type": "string"
            },
            "AworkSyncId": {
              "description": "The Id from the linked awork project",
              "type": "string"
            },
            "Subsystems": {
              "description": "The subsystems this project is associated with",
              "type": "array",
              "items": {
                "description": "A subsystem represents a tenant within a customer's HQ",
                "type": "object"
              }
            },
            "ProjectTemplateId": {
              "format": "int32",
              "description": "The id of the project template",
              "type": "integer"
            },
            "ProjectTemplate": {
              "description": "The template of this project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "ProjectStatusId": {
              "format": "int32",
              "description": "The id of the project status",
              "type": "integer"
            },
            "CompanyId": {
              "format": "int32",
              "description": "The id of the company",
              "type": "integer"
            },
            "LeadId": {
              "format": "int32",
              "description": "The Id of the lead",
              "type": "integer"
            },
            "InvoiceAddressId": {
              "format": "int32",
              "description": "Id of the address for invoices of this project",
              "type": "integer"
            },
            "DeliveryAddressId": {
              "format": "int32",
              "description": "Id of the address for the deliveries of this project",
              "type": "integer"
            },
            "ResponsibleUserId": {
              "format": "int32",
              "description": "The id of the user which is responsible for this (internal) project",
              "type": "integer"
            },
            "ProjectStatus": {
              "description": "The status of the project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Company": {
              "description": "The company this project is associated with",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "ResponsibleUser": {
              "description": "The user which is responsible for this (internal) project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "DeliveryAddress": {
              "description": "The address for delvieries of this project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "InvoiceAddress": {
              "description": "The address for delvieries of this project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Lead": {
              "description": "The lead of the project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "CustomFields": {
              "description": "The custom fields of this project",
              "type": "array",
              "items": {
                "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
                "type": "object"
              }
            },
            "Reportings": {
              "description": "The user reportings of this project",
              "type": "array",
              "items": {
                "description": "A user reporting represents a logged time of a user on a specific task in HQ.",
                "type": "object"
              }
            },
            "Files": {
              "description": "The files of this project",
              "type": "array",
              "items": {
                "description": "A file represents a user upload or HQ-generated PDF documents.",
                "type": "object"
              }
            },
            "Members": {
              "description": "The members of this project",
              "type": "array",
              "items": {
                "description": "A project member links a user to a project. It includes the project role and the charge rates\r\n            for the link.",
                "type": "object"
              }
            },
            "ContactHistories": {
              "description": "Contact histories linked to this project.",
              "type": "array",
              "items": {
                "description": "The contact history represents any contact you had with a contact person. For example, any meeting, phone call or email can be a contact history entry.",
                "type": "object"
              }
            },
            "ContactPersons": {
              "description": "Contact persons linked to this project.",
              "type": "array",
              "items": {
                "description": "A contact person represents a person that works for a company you do business with. A company can have many contact persons.",
                "type": "object"
              }
            },
            "Articles": {
              "description": "All articles linked to the project",
              "type": "array",
              "items": {
                "description": "An article is a stock item that your company sells, for example a digital camera. \r\n            An article can also be a service or activity that your company performs, for example a digital design. \r\n            Articles can be used to create positions on invoices or quotations, among others.",
                "type": "object"
              }
            },
            "ProjectBudgets": {
              "description": "All articles linked to the project",
              "type": "array",
              "items": {
                "description": "The project budget for a project",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "CompanyId": {
          "format": "int32",
          "description": "The id of the company which is the receiver of the planned revenue.",
          "type": "integer"
        },
        "Company": {
          "description": "The company which is the receiver of the planned revenue.",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The name of the company",
              "type": "string"
            },
            "IndustrialSector": {
              "description": "The company's industrial sector",
              "type": "string"
            },
            "Description": {
              "description": "A longer description of the company",
              "type": "string"
            },
            "IBAN": {
              "description": "The IBAN of the company",
              "type": "string"
            },
            "BIC": {
              "description": "The BIC of the company",
              "type": "string"
            },
            "DebitorNumber": {
              "format": "int32",
              "description": "The company's debitor number",
              "type": "integer"
            },
            "CreditorNumber": {
              "format": "int32",
              "description": "The company's creditor number",
              "type": "integer"
            },
            "TaxId": {
              "description": "The company's tax id",
              "type": "string"
            },
            "DefaultDeliveryConditionId": {
              "format": "int32",
              "description": "The id of the default delivery condition of this company",
              "type": "integer"
            },
            "DefaultDeliveryCondition": {
              "description": "The default delivery condition of this company",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "DefaultPaymentConditionId": {
              "format": "int32",
              "description": "The id of the default payment condition of this company",
              "type": "integer"
            },
            "DefaultPaymentCondition": {
              "description": "The default payment condition of this company",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "DefaultAddress": {
              "description": "The default address of this company",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Addresses": {
              "description": "All addresses of the company",
              "type": "array",
              "items": {
                "description": "A company address represents one of many addresses of companies.",
                "type": "object"
              }
            },
            "ResponsibleUsers": {
              "description": "The list of the responsible users of this company",
              "type": "array",
              "items": {
                "description": "A user represents a user in your HQ system.",
                "type": "object"
              }
            },
            "CustomFields": {
              "description": "The customfields associated with this company",
              "type": "array",
              "items": {
                "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
                "type": "object"
              }
            },
            "CompanyTypes": {
              "description": "The company types associated with this company",
              "type": "array",
              "items": {
                "description": "This is a connection between a company and a company type.\r\n            A company can have more than one type and can have a different company number for each type.",
                "type": "object"
              }
            },
            "Files": {
              "description": "The files associated with this company",
              "type": "array",
              "items": {
                "description": "A file represents a user upload or HQ-generated PDF documents.",
                "type": "object"
              }
            },
            "Subsystems": {
              "description": "The subsystems this company is associated with",
              "type": "array",
              "items": {
                "description": "A subsystem represents a tenant within a customer's HQ",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "PaymentConditionId": {
          "format": "int32",
          "description": "The id of the payment condition.",
          "type": "integer"
        },
        "PaymentCondition": {
          "description": "The payment condition that applies to this planned revenue.",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The name of document condition",
              "type": "string"
            },
            "Text": {
              "description": "The text of condition",
              "type": "string"
            },
            "DisplayText": {
              "description": "The text with replaced due days",
              "type": "string"
            },
            "DueInDays": {
              "format": "int32",
              "description": "The payment due date in days",
              "type": "integer"
            },
            "Type": {
              "description": "The type of this condition",
              "enum": [
                "PaymentConditions",
                "DeliveryConditions",
                "NotDefined"
              ],
              "type": "string"
            },
            "WarningDays": {
              "format": "int32",
              "description": "The payment due date in days of a warning document",
              "type": "integer"
            },
            "ReminderDays": {
              "format": "int32",
              "description": "The payment due date in days of a reminder document",
              "type": "integer"
            },
            "Language": {
              "description": "The language of the condition, as two-letter ISO-Code, for example 'DE'",
              "type": "string"
            },
            "DocumentEarlyPayments": {
              "description": "The list of early payment conditions that belong to this document condition (i.e. Skonto)",
              "type": "array",
              "items": {
                "description": "The document early payment entry represents a rule in days before which a discount is granted on an invoice.",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "Positions": {
          "description": "The positions of this planned revenue.",
          "type": "array",
          "items": {
            "description": "A document position represents a position on a quotation or invoice.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "IsOptional": {
                "description": "Whether this position is optional. Only valid in quotations.",
                "type": "boolean"
              },
              "Tax": {
                "format": "double",
                "description": "The position tax rate, for example 19%",
                "type": "number"
              },
              "Price": {
                "format": "decimal",
                "description": "The position price, in the currency of the document",
                "type": "number"
              },
              "Discount": {
                "format": "double",
                "description": "The percentage discount that should be applied to this position sum",
                "type": "number"
              },
              "Margin": {
                "format": "double",
                "description": "The margin that should be applied to this position sum",
                "type": "number"
              },
              "ExcludeFromEarlyPayment": {
                "description": "Whether this position should be excluded from early payment discount calculations",
                "type": "boolean"
              },
              "TotalPrice": {
                "format": "double",
                "description": "The total price under consideration of margin and discount",
                "type": "number"
              },
              "TotalUnitPrice": {
                "format": "double",
                "description": "The total unit price under consideration of margin and discount",
                "type": "number"
              },
              "TotalVat": {
                "format": "double",
                "description": "The total VAT of this position under consideration of margin and discount",
                "type": "number"
              },
              "UserReportings": {
                "description": "The user reportings which have been billed with this document position",
                "type": "array"
              },
              "Interval": {
                "description": "The interval of the recurrence.",
                "type": "string"
              },
              "Text": {
                "description": "The position text, as HTML",
                "type": "string"
              },
              "Unit": {
                "description": "The position unit",
                "type": "string"
              },
              "Type": {
                "description": "The type of this position",
                "type": "string"
              },
              "Order": {
                "format": "int32",
                "description": "The order of this position in the document",
                "type": "integer"
              },
              "ArticleId": {
                "format": "int32",
                "description": "The Id of the article that is associated with this position",
                "type": "integer"
              },
              "ProjectId": {
                "format": "int32",
                "description": "The Id Of the Project",
                "type": "integer"
              },
              "Article": {
                "description": "The article that is associated with this position",
                "type": "object"
              },
              "Amount": {
                "format": "double",
                "description": "The amount of this position in this document",
                "type": "number"
              },
              "ProjectBudgetId": {
                "format": "int32",
                "description": "The Id of the project budget",
                "type": "integer"
              },
              "CostTypeId": {
                "format": "int32",
                "description": "The if of the costType",
                "type": "integer"
              },
              "BookingAccount": {
                "description": "The booking account this position is associated with",
                "type": "string"
              },
              "CostCenter1": {
                "description": "The cost center 1 this position is associated with",
                "type": "string"
              },
              "CostCenter2": {
                "description": "The cost center 2 this position is associated with",
                "type": "string"
              },
              "CustomFields": {
                "description": "The custom fields of this document position",
                "type": "array"
              },
              "DocumentId": {
                "format": "int32",
                "description": "The Id of the document the position belongs to",
                "type": "integer"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        },
        "RecurringPlannedRevenues": {
          "description": "The recurring planned revenue.",
          "type": "array",
          "items": {
            "description": "This model represents an occurrence of a planned revenue.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "Description": {
                "description": "The description of the planned revenue.",
                "type": "string"
              },
              "NetTotal": {
                "format": "decimal",
                "description": "The net total planned revenue.",
                "type": "number"
              },
              "GrossTotal": {
                "format": "decimal",
                "description": "The gross total planned revenue.",
                "type": "number"
              },
              "Currency": {
                "description": "The ISO 4217 code of the currency of this planned revenue.",
                "maxLength": 3,
                "minLength": 0,
                "type": "string"
              },
              "Status": {
                "description": "The status of this planned revenue occurrence.",
                "type": "string"
              },
              "Margin": {
                "format": "int32",
                "description": "The margin of this planned revenue.",
                "type": "integer"
              },
              "Discount": {
                "format": "double",
                "description": "The discount of the planned revenue.\r\n            Monetary value; Its currency is stored in the property Currency.",
                "type": "number"
              },
              "DiscountType": {
                "description": "Whether the discount is an absolute or relative value.",
                "type": "string"
              },
              "DueDate": {
                "format": "date-time",
                "description": "The due date of this occurrence.",
                "type": "string"
              },
              "Probability": {
                "format": "int32",
                "description": "The probability of the planned revenue, from 0 to 100.",
                "type": "integer"
              },
              "LeadId": {
                "format": "int32",
                "description": "The id of the lead related to the planned revenue.",
                "type": "integer"
              },
              "Lead": {
                "description": "The lead related to the planned revenue.",
                "type": "object"
              },
              "ProjectId": {
                "format": "int32",
                "description": "the id of the project related to the planned revenue.",
                "type": "integer"
              },
              "Project": {
                "description": "The project related to the planned revenue.",
                "type": "object"
              },
              "CompanyId": {
                "format": "int32",
                "description": "The id of the company which is the receiver of the planned revenue.",
                "type": "integer"
              },
              "Company": {
                "description": "The company which is the receiver of the planned revenue.",
                "type": "object"
              },
              "PaymentConditionId": {
                "format": "int32",
                "description": "The id of the payment condition.",
                "type": "integer"
              },
              "PaymentCondition": {
                "description": "The payment condition that applies to this planned revenue.",
                "type": "object"
              },
              "Positions": {
                "description": "The positions of this planned revenue.",
                "type": "array"
              },
              "RecurringPlannedRevenues": {
                "description": "The recurring planned revenue.",
                "type": "array"
              },
              "RecurrenceId": {
                "format": "int32",
                "description": "The id of the recurrence information.",
                "type": "integer"
              },
              "Recurrence": {
                "description": "The recurrence information, if this occurrence is based on\r\n            a recurring planned revenue.",
                "type": "object"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        },
        "RecurrenceId": {
          "format": "int32",
          "description": "The id of the recurrence information.",
          "type": "integer"
        },
        "Recurrence": {
          "description": "The recurrence information, if this occurrence is based on\r\n            a recurring planned revenue.",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "StartDate": {
              "format": "date-time",
              "description": "The start date of the recurrence.",
              "type": "string"
            },
            "EndDate": {
              "format": "date-time",
              "description": "The end date of the recurrence.",
              "type": "string"
            },
            "Interval": {
              "description": "The interval of the recurrence.",
              "enum": [
                "Once",
                "Annually",
                "HalfAnnually",
                "QuarterAnnually",
                "Monthly",
                "Weekly",
                "TwoYears",
                "ThreeYears",
                "FourYears",
                "FiveYears",
                "Fortnightly"
              ],
              "type": "string"
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "Id": {
          "format": "int32",
          "description": "The unique identifier of this entity",
          "type": "integer"
        },
        "CreatedBy": {
          "format": "int32",
          "description": "The id of the user who created this entity",
          "type": "integer"
        },
        "UpdatedBy": {
          "format": "int32",
          "description": "The id of the last user who modified this entity",
          "type": "integer"
        },
        "CreatedOn": {
          "format": "date-time",
          "description": "The date and time this entity was created, in UTC",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "description": "The last date and time this entity was updated, in UTC",
          "type": "string"
        }
      }
    },
    "RecurringPlannedRevenue": {
      "description": "This model represents an occurrence of a planned revenue.",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "Description": {
          "description": "The description of the planned revenue.",
          "type": "string"
        },
        "NetTotal": {
          "format": "decimal",
          "description": "The net total planned revenue.",
          "type": "number"
        },
        "GrossTotal": {
          "format": "decimal",
          "description": "The gross total planned revenue.",
          "type": "number"
        },
        "Currency": {
          "description": "The ISO 4217 code of the currency of this planned revenue.",
          "maxLength": 3,
          "minLength": 0,
          "type": "string"
        },
        "Status": {
          "description": "The status of this planned revenue occurrence.",
          "enum": [
            "Planned",
            "Offered",
            "Confirmed",
            "Paid",
            "Billed",
            "Skipped"
          ],
          "type": "string"
        },
        "Margin": {
          "format": "int32",
          "description": "The margin of this planned revenue.",
          "type": "integer"
        },
        "Discount": {
          "format": "double",
          "description": "The discount of the planned revenue.\r\n            Monetary value; Its currency is stored in the property Currency.",
          "type": "number"
        },
        "DiscountType": {
          "description": "Whether the discount is an absolute or relative value.",
          "enum": [
            "Percent",
            "NetValue",
            "NotSet"
          ],
          "type": "string"
        },
        "DueDate": {
          "format": "date-time",
          "description": "The due date of this occurrence.",
          "type": "string"
        },
        "Probability": {
          "format": "int32",
          "description": "The probability of the planned revenue, from 0 to 100.",
          "type": "integer"
        },
        "LeadId": {
          "format": "int32",
          "description": "The id of the lead related to the planned revenue.",
          "type": "integer"
        },
        "Lead": {
          "description": "The lead related to the planned revenue.",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The name of the lead",
              "type": "string"
            },
            "CompanyName": {
              "description": "The name of the company that this lead is assigned to, read-only",
              "type": "string"
            },
            "Number": {
              "description": "The number of the lead",
              "type": "string"
            },
            "Company": {
              "description": "The company this lead belongs to",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Status": {
              "description": "The status of the lead",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "StatusId": {
              "format": "int32",
              "description": "The Id of the status of the lead",
              "type": "integer"
            },
            "CashOn": {
              "format": "date-time",
              "description": "The expected sales date",
              "type": "string"
            },
            "ClosingProbability": {
              "format": "int32",
              "description": "The probability of closing the lead, in percent",
              "type": "integer"
            },
            "Currency": {
              "description": "The ISO 4217 code of the currency of the lead volume",
              "maxLength": 3,
              "minLength": 0,
              "type": "string"
            },
            "Volume": {
              "format": "double",
              "description": "The financial volume when closing the lead",
              "type": "number"
            },
            "CompanyId": {
              "format": "int32",
              "description": "The Id of the company this lead belongs to",
              "type": "integer"
            },
            "CustomFields": {
              "description": "The custom fields of this lead",
              "type": "array",
              "items": {
                "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
                "type": "object"
              }
            },
            "ResponsibleUserId": {
              "format": "int32",
              "description": "The user id of the HQ user responsible for this lead",
              "type": "integer"
            },
            "ResponsibleUser": {
              "description": "The HQ user responsible for this lead",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "SalesCampaigns": {
              "description": "List of all Sales Campaigns for this Lead",
              "type": "array",
              "items": {
                "description": "Represents the status a lead is in",
                "type": "object"
              }
            },
            "ContactPersons": {
              "description": "List of all contact persons for this Lead",
              "type": "array",
              "items": {
                "description": "A contact person represents a person that works for a company you do business with. A company can have many contact persons.",
                "type": "object"
              }
            },
            "Subsystems": {
              "description": "The subsystems this lead is associated with",
              "type": "array",
              "items": {
                "description": "A subsystem represents a tenant within a customer's HQ",
                "type": "object"
              }
            },
            "ProjectId": {
              "format": "int32",
              "description": "The project id of the lead",
              "type": "integer"
            },
            "Project": {
              "description": "The project of the lead",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "ProjectId": {
          "format": "int32",
          "description": "the id of the project related to the planned revenue.",
          "type": "integer"
        },
        "Project": {
          "description": "The project related to the planned revenue.",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Number": {
              "description": "The number of the project",
              "type": "string"
            },
            "Name": {
              "description": "The name of the project",
              "type": "string"
            },
            "Status": {
              "description": "The current status description of the project",
              "type": "string"
            },
            "PlannedStartDate": {
              "format": "date-time",
              "description": "The planned start date of the first task of the project",
              "type": "string"
            },
            "PlannedEndDate": {
              "format": "date-time",
              "description": "The planned end date of the last task of the project",
              "type": "string"
            },
            "StartDate": {
              "format": "date-time",
              "description": "The planned start date of the project",
              "type": "string"
            },
            "EndDate": {
              "format": "date-time",
              "description": "The planned end date of the project",
              "type": "string"
            },
            "AworkSyncId": {
              "description": "The Id from the linked awork project",
              "type": "string"
            },
            "Subsystems": {
              "description": "The subsystems this project is associated with",
              "type": "array",
              "items": {
                "description": "A subsystem represents a tenant within a customer's HQ",
                "type": "object"
              }
            },
            "ProjectTemplateId": {
              "format": "int32",
              "description": "The id of the project template",
              "type": "integer"
            },
            "ProjectTemplate": {
              "description": "The template of this project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "ProjectStatusId": {
              "format": "int32",
              "description": "The id of the project status",
              "type": "integer"
            },
            "CompanyId": {
              "format": "int32",
              "description": "The id of the company",
              "type": "integer"
            },
            "LeadId": {
              "format": "int32",
              "description": "The Id of the lead",
              "type": "integer"
            },
            "InvoiceAddressId": {
              "format": "int32",
              "description": "Id of the address for invoices of this project",
              "type": "integer"
            },
            "DeliveryAddressId": {
              "format": "int32",
              "description": "Id of the address for the deliveries of this project",
              "type": "integer"
            },
            "ResponsibleUserId": {
              "format": "int32",
              "description": "The id of the user which is responsible for this (internal) project",
              "type": "integer"
            },
            "ProjectStatus": {
              "description": "The status of the project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Company": {
              "description": "The company this project is associated with",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "ResponsibleUser": {
              "description": "The user which is responsible for this (internal) project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "DeliveryAddress": {
              "description": "The address for delvieries of this project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "InvoiceAddress": {
              "description": "The address for delvieries of this project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Lead": {
              "description": "The lead of the project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "CustomFields": {
              "description": "The custom fields of this project",
              "type": "array",
              "items": {
                "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
                "type": "object"
              }
            },
            "Reportings": {
              "description": "The user reportings of this project",
              "type": "array",
              "items": {
                "description": "A user reporting represents a logged time of a user on a specific task in HQ.",
                "type": "object"
              }
            },
            "Files": {
              "description": "The files of this project",
              "type": "array",
              "items": {
                "description": "A file represents a user upload or HQ-generated PDF documents.",
                "type": "object"
              }
            },
            "Members": {
              "description": "The members of this project",
              "type": "array",
              "items": {
                "description": "A project member links a user to a project. It includes the project role and the charge rates\r\n            for the link.",
                "type": "object"
              }
            },
            "ContactHistories": {
              "description": "Contact histories linked to this project.",
              "type": "array",
              "items": {
                "description": "The contact history represents any contact you had with a contact person. For example, any meeting, phone call or email can be a contact history entry.",
                "type": "object"
              }
            },
            "ContactPersons": {
              "description": "Contact persons linked to this project.",
              "type": "array",
              "items": {
                "description": "A contact person represents a person that works for a company you do business with. A company can have many contact persons.",
                "type": "object"
              }
            },
            "Articles": {
              "description": "All articles linked to the project",
              "type": "array",
              "items": {
                "description": "An article is a stock item that your company sells, for example a digital camera. \r\n            An article can also be a service or activity that your company performs, for example a digital design. \r\n            Articles can be used to create positions on invoices or quotations, among others.",
                "type": "object"
              }
            },
            "ProjectBudgets": {
              "description": "All articles linked to the project",
              "type": "array",
              "items": {
                "description": "The project budget for a project",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "CompanyId": {
          "format": "int32",
          "description": "The id of the company which is the receiver of the planned revenue.",
          "type": "integer"
        },
        "Company": {
          "description": "The company which is the receiver of the planned revenue.",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The name of the company",
              "type": "string"
            },
            "IndustrialSector": {
              "description": "The company's industrial sector",
              "type": "string"
            },
            "Description": {
              "description": "A longer description of the company",
              "type": "string"
            },
            "IBAN": {
              "description": "The IBAN of the company",
              "type": "string"
            },
            "BIC": {
              "description": "The BIC of the company",
              "type": "string"
            },
            "DebitorNumber": {
              "format": "int32",
              "description": "The company's debitor number",
              "type": "integer"
            },
            "CreditorNumber": {
              "format": "int32",
              "description": "The company's creditor number",
              "type": "integer"
            },
            "TaxId": {
              "description": "The company's tax id",
              "type": "string"
            },
            "DefaultDeliveryConditionId": {
              "format": "int32",
              "description": "The id of the default delivery condition of this company",
              "type": "integer"
            },
            "DefaultDeliveryCondition": {
              "description": "The default delivery condition of this company",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "DefaultPaymentConditionId": {
              "format": "int32",
              "description": "The id of the default payment condition of this company",
              "type": "integer"
            },
            "DefaultPaymentCondition": {
              "description": "The default payment condition of this company",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "DefaultAddress": {
              "description": "The default address of this company",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Addresses": {
              "description": "All addresses of the company",
              "type": "array",
              "items": {
                "description": "A company address represents one of many addresses of companies.",
                "type": "object"
              }
            },
            "ResponsibleUsers": {
              "description": "The list of the responsible users of this company",
              "type": "array",
              "items": {
                "description": "A user represents a user in your HQ system.",
                "type": "object"
              }
            },
            "CustomFields": {
              "description": "The customfields associated with this company",
              "type": "array",
              "items": {
                "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
                "type": "object"
              }
            },
            "CompanyTypes": {
              "description": "The company types associated with this company",
              "type": "array",
              "items": {
                "description": "This is a connection between a company and a company type.\r\n            A company can have more than one type and can have a different company number for each type.",
                "type": "object"
              }
            },
            "Files": {
              "description": "The files associated with this company",
              "type": "array",
              "items": {
                "description": "A file represents a user upload or HQ-generated PDF documents.",
                "type": "object"
              }
            },
            "Subsystems": {
              "description": "The subsystems this company is associated with",
              "type": "array",
              "items": {
                "description": "A subsystem represents a tenant within a customer's HQ",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "PaymentConditionId": {
          "format": "int32",
          "description": "The id of the payment condition.",
          "type": "integer"
        },
        "PaymentCondition": {
          "description": "The payment condition that applies to this planned revenue.",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The name of document condition",
              "type": "string"
            },
            "Text": {
              "description": "The text of condition",
              "type": "string"
            },
            "DisplayText": {
              "description": "The text with replaced due days",
              "type": "string"
            },
            "DueInDays": {
              "format": "int32",
              "description": "The payment due date in days",
              "type": "integer"
            },
            "Type": {
              "description": "The type of this condition",
              "enum": [
                "PaymentConditions",
                "DeliveryConditions",
                "NotDefined"
              ],
              "type": "string"
            },
            "WarningDays": {
              "format": "int32",
              "description": "The payment due date in days of a warning document",
              "type": "integer"
            },
            "ReminderDays": {
              "format": "int32",
              "description": "The payment due date in days of a reminder document",
              "type": "integer"
            },
            "Language": {
              "description": "The language of the condition, as two-letter ISO-Code, for example 'DE'",
              "type": "string"
            },
            "DocumentEarlyPayments": {
              "description": "The list of early payment conditions that belong to this document condition (i.e. Skonto)",
              "type": "array",
              "items": {
                "description": "The document early payment entry represents a rule in days before which a discount is granted on an invoice.",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "Positions": {
          "description": "The positions of this planned revenue.",
          "type": "array",
          "items": {
            "description": "A document position represents a position on a quotation or invoice.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "IsOptional": {
                "description": "Whether this position is optional. Only valid in quotations.",
                "type": "boolean"
              },
              "Tax": {
                "format": "double",
                "description": "The position tax rate, for example 19%",
                "type": "number"
              },
              "Price": {
                "format": "decimal",
                "description": "The position price, in the currency of the document",
                "type": "number"
              },
              "Discount": {
                "format": "double",
                "description": "The percentage discount that should be applied to this position sum",
                "type": "number"
              },
              "Margin": {
                "format": "double",
                "description": "The margin that should be applied to this position sum",
                "type": "number"
              },
              "ExcludeFromEarlyPayment": {
                "description": "Whether this position should be excluded from early payment discount calculations",
                "type": "boolean"
              },
              "TotalPrice": {
                "format": "double",
                "description": "The total price under consideration of margin and discount",
                "type": "number"
              },
              "TotalUnitPrice": {
                "format": "double",
                "description": "The total unit price under consideration of margin and discount",
                "type": "number"
              },
              "TotalVat": {
                "format": "double",
                "description": "The total VAT of this position under consideration of margin and discount",
                "type": "number"
              },
              "UserReportings": {
                "description": "The user reportings which have been billed with this document position",
                "type": "array"
              },
              "Interval": {
                "description": "The interval of the recurrence.",
                "type": "string"
              },
              "Text": {
                "description": "The position text, as HTML",
                "type": "string"
              },
              "Unit": {
                "description": "The position unit",
                "type": "string"
              },
              "Type": {
                "description": "The type of this position",
                "type": "string"
              },
              "Order": {
                "format": "int32",
                "description": "The order of this position in the document",
                "type": "integer"
              },
              "ArticleId": {
                "format": "int32",
                "description": "The Id of the article that is associated with this position",
                "type": "integer"
              },
              "ProjectId": {
                "format": "int32",
                "description": "The Id Of the Project",
                "type": "integer"
              },
              "Article": {
                "description": "The article that is associated with this position",
                "type": "object"
              },
              "Amount": {
                "format": "double",
                "description": "The amount of this position in this document",
                "type": "number"
              },
              "ProjectBudgetId": {
                "format": "int32",
                "description": "The Id of the project budget",
                "type": "integer"
              },
              "CostTypeId": {
                "format": "int32",
                "description": "The if of the costType",
                "type": "integer"
              },
              "BookingAccount": {
                "description": "The booking account this position is associated with",
                "type": "string"
              },
              "CostCenter1": {
                "description": "The cost center 1 this position is associated with",
                "type": "string"
              },
              "CostCenter2": {
                "description": "The cost center 2 this position is associated with",
                "type": "string"
              },
              "CustomFields": {
                "description": "The custom fields of this document position",
                "type": "array"
              },
              "DocumentId": {
                "format": "int32",
                "description": "The Id of the document the position belongs to",
                "type": "integer"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        },
        "RecurringPlannedRevenues": {
          "description": "The recurring planned revenue.",
          "type": "array",
          "items": {
            "description": "This model represents an occurrence of a planned revenue.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "Description": {
                "description": "The description of the planned revenue.",
                "type": "string"
              },
              "NetTotal": {
                "format": "decimal",
                "description": "The net total planned revenue.",
                "type": "number"
              },
              "GrossTotal": {
                "format": "decimal",
                "description": "The gross total planned revenue.",
                "type": "number"
              },
              "Currency": {
                "description": "The ISO 4217 code of the currency of this planned revenue.",
                "maxLength": 3,
                "minLength": 0,
                "type": "string"
              },
              "Status": {
                "description": "The status of this planned revenue occurrence.",
                "type": "string"
              },
              "Margin": {
                "format": "int32",
                "description": "The margin of this planned revenue.",
                "type": "integer"
              },
              "Discount": {
                "format": "double",
                "description": "The discount of the planned revenue.\r\n            Monetary value; Its currency is stored in the property Currency.",
                "type": "number"
              },
              "DiscountType": {
                "description": "Whether the discount is an absolute or relative value.",
                "type": "string"
              },
              "DueDate": {
                "format": "date-time",
                "description": "The due date of this occurrence.",
                "type": "string"
              },
              "Probability": {
                "format": "int32",
                "description": "The probability of the planned revenue, from 0 to 100.",
                "type": "integer"
              },
              "LeadId": {
                "format": "int32",
                "description": "The id of the lead related to the planned revenue.",
                "type": "integer"
              },
              "Lead": {
                "description": "The lead related to the planned revenue.",
                "type": "object"
              },
              "ProjectId": {
                "format": "int32",
                "description": "the id of the project related to the planned revenue.",
                "type": "integer"
              },
              "Project": {
                "description": "The project related to the planned revenue.",
                "type": "object"
              },
              "CompanyId": {
                "format": "int32",
                "description": "The id of the company which is the receiver of the planned revenue.",
                "type": "integer"
              },
              "Company": {
                "description": "The company which is the receiver of the planned revenue.",
                "type": "object"
              },
              "PaymentConditionId": {
                "format": "int32",
                "description": "The id of the payment condition.",
                "type": "integer"
              },
              "PaymentCondition": {
                "description": "The payment condition that applies to this planned revenue.",
                "type": "object"
              },
              "Positions": {
                "description": "The positions of this planned revenue.",
                "type": "array"
              },
              "RecurringPlannedRevenues": {
                "description": "The recurring planned revenue.",
                "type": "array"
              },
              "RecurrenceId": {
                "format": "int32",
                "description": "The id of the recurrence information.",
                "type": "integer"
              },
              "Recurrence": {
                "description": "The recurrence information, if this occurrence is based on\r\n            a recurring planned revenue.",
                "type": "object"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        },
        "RecurrenceId": {
          "format": "int32",
          "description": "The id of the recurrence information.",
          "type": "integer"
        },
        "Recurrence": {
          "description": "The recurrence information, if this occurrence is based on\r\n            a recurring planned revenue.",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "StartDate": {
              "format": "date-time",
              "description": "The start date of the recurrence.",
              "type": "string"
            },
            "EndDate": {
              "format": "date-time",
              "description": "The end date of the recurrence.",
              "type": "string"
            },
            "Interval": {
              "description": "The interval of the recurrence.",
              "enum": [
                "Once",
                "Annually",
                "HalfAnnually",
                "QuarterAnnually",
                "Monthly",
                "Weekly",
                "TwoYears",
                "ThreeYears",
                "FourYears",
                "FiveYears",
                "Fortnightly"
              ],
              "type": "string"
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "Id": {
          "format": "int32",
          "description": "The unique identifier of this entity",
          "type": "integer"
        },
        "CreatedBy": {
          "format": "int32",
          "description": "The id of the user who created this entity",
          "type": "integer"
        },
        "UpdatedBy": {
          "format": "int32",
          "description": "The id of the last user who modified this entity",
          "type": "integer"
        },
        "CreatedOn": {
          "format": "date-time",
          "description": "The date and time this entity was created, in UTC",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "description": "The last date and time this entity was updated, in UTC",
          "type": "string"
        }
      }
    },
    "PlannedRevenueRecurrence": {
      "description": "The recurrence information of the planned revenue.\r\n            This is the same data for all occurrences created by this recurrence.",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "StartDate": {
          "format": "date-time",
          "description": "The start date of the recurrence.",
          "type": "string"
        },
        "EndDate": {
          "format": "date-time",
          "description": "The end date of the recurrence.",
          "type": "string"
        },
        "Interval": {
          "description": "The interval of the recurrence.",
          "enum": [
            "Once",
            "Annually",
            "HalfAnnually",
            "QuarterAnnually",
            "Monthly",
            "Weekly",
            "TwoYears",
            "ThreeYears",
            "FourYears",
            "FiveYears",
            "Fortnightly"
          ],
          "type": "string"
        },
        "Id": {
          "format": "int32",
          "description": "The unique identifier of this entity",
          "type": "integer"
        },
        "CreatedBy": {
          "format": "int32",
          "description": "The id of the user who created this entity",
          "type": "integer"
        },
        "UpdatedBy": {
          "format": "int32",
          "description": "The id of the last user who modified this entity",
          "type": "integer"
        },
        "CreatedOn": {
          "format": "date-time",
          "description": "The date and time this entity was created, in UTC",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "description": "The last date and time this entity was updated, in UTC",
          "type": "string"
        }
      }
    },
    "PlannedRevenuePost": {
      "description": "This model represents an occurrence of a planned revenue.",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "Positions": {
          "description": "The positions of this planned revenue.",
          "type": "array",
          "items": {
            "description": "A document position represents a position on a quotation or invoice.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "IsOptional": {
                "description": "Whether this position is optional. Only valid in quotations.",
                "type": "boolean"
              },
              "Tax": {
                "format": "double",
                "description": "The position tax rate, for example 19%",
                "type": "number"
              },
              "Price": {
                "format": "decimal",
                "description": "The position price, in the currency of the document",
                "type": "number"
              },
              "Discount": {
                "format": "double",
                "description": "The percentage discount that should be applied to this position sum",
                "type": "number"
              },
              "Margin": {
                "format": "double",
                "description": "The margin that should be applied to this position sum",
                "type": "number"
              },
              "ExcludeFromEarlyPayment": {
                "description": "Whether this position should be excluded from early payment discount calculations",
                "type": "boolean"
              },
              "TotalPrice": {
                "format": "double",
                "description": "The total price under consideration of margin and discount",
                "type": "number"
              },
              "TotalUnitPrice": {
                "format": "double",
                "description": "The total unit price under consideration of margin and discount",
                "type": "number"
              },
              "TotalVat": {
                "format": "double",
                "description": "The total VAT of this position under consideration of margin and discount",
                "type": "number"
              },
              "UserReportings": {
                "description": "The user reportings which have been billed with this document position",
                "type": "array"
              },
              "Interval": {
                "description": "The interval of the recurrence.",
                "type": "string"
              },
              "Text": {
                "description": "The position text, as HTML",
                "type": "string"
              },
              "Unit": {
                "description": "The position unit",
                "type": "string"
              },
              "Type": {
                "description": "The type of this position",
                "type": "string"
              },
              "Order": {
                "format": "int32",
                "description": "The order of this position in the document",
                "type": "integer"
              },
              "ArticleId": {
                "format": "int32",
                "description": "The Id of the article that is associated with this position",
                "type": "integer"
              },
              "ProjectId": {
                "format": "int32",
                "description": "The Id Of the Project",
                "type": "integer"
              },
              "Article": {
                "description": "The article that is associated with this position",
                "type": "object"
              },
              "Amount": {
                "format": "double",
                "description": "The amount of this position in this document",
                "type": "number"
              },
              "ProjectBudgetId": {
                "format": "int32",
                "description": "The Id of the project budget",
                "type": "integer"
              },
              "CostTypeId": {
                "format": "int32",
                "description": "The if of the costType",
                "type": "integer"
              },
              "BookingAccount": {
                "description": "The booking account this position is associated with",
                "type": "string"
              },
              "CostCenter1": {
                "description": "The cost center 1 this position is associated with",
                "type": "string"
              },
              "CostCenter2": {
                "description": "The cost center 2 this position is associated with",
                "type": "string"
              },
              "CustomFields": {
                "description": "The custom fields of this document position",
                "type": "array"
              },
              "DocumentId": {
                "format": "int32",
                "description": "The Id of the document the position belongs to",
                "type": "integer"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        },
        "Description": {
          "description": "The description of the planned revenue.",
          "type": "string"
        },
        "Currency": {
          "description": "The ISO 4217 code of the currency of this planned revenue.",
          "maxLength": 3,
          "minLength": 0,
          "type": "string"
        },
        "Status": {
          "description": "The status of this planned revenue occurrence.",
          "enum": [
            "Planned",
            "Offered",
            "Confirmed",
            "Paid",
            "Billed",
            "Skipped"
          ],
          "type": "string"
        },
        "Margin": {
          "format": "int32",
          "description": "The margin of this planned revenue.",
          "type": "integer"
        },
        "Discount": {
          "format": "double",
          "description": "The discount of the planned revenue.\r\n            Monetary value; Its currency is stored in the property Currency.",
          "type": "number"
        },
        "DiscountType": {
          "description": "Whether the discount is an absolute or relative value.",
          "enum": [
            "Percent",
            "NetValue",
            "NotSet"
          ],
          "type": "string"
        },
        "DueDate": {
          "format": "date-time",
          "description": "The due date of this occurrence.",
          "type": "string"
        },
        "Probability": {
          "format": "int32",
          "description": "The probability of the planned revenue, from 0 to 100.",
          "type": "integer"
        },
        "LeadId": {
          "format": "int32",
          "description": "The id of the lead related to the planned revenue.",
          "type": "integer"
        },
        "ProjectId": {
          "format": "int32",
          "description": "the id of the project related to the planned revenue.",
          "type": "integer"
        },
        "CompanyId": {
          "format": "int32",
          "description": "The id of the company which is the receiver of the planned revenue.",
          "type": "integer"
        },
        "PaymentConditionId": {
          "format": "int32",
          "description": "The id of the payment condition.",
          "type": "integer"
        },
        "StartDate": {
          "format": "date-time",
          "description": "The start date of the recurrence.",
          "type": "string"
        },
        "EndDate": {
          "format": "date-time",
          "description": "The end date of the recurrence.",
          "type": "string"
        },
        "Interval": {
          "description": "The interval of the recurrence.",
          "enum": [
            "Once",
            "Annually",
            "HalfAnnually",
            "QuarterAnnually",
            "Monthly",
            "Weekly",
            "TwoYears",
            "ThreeYears",
            "FourYears",
            "FiveYears",
            "Fortnightly"
          ],
          "type": "string"
        },
        "DocumentTemplateId": {
          "format": "int32",
          "description": "The id of the document template.",
          "type": "integer"
        },
        "ContactPersonId": {
          "format": "int32",
          "description": "The id of the contact person.",
          "type": "integer"
        },
        "EstimatedPrice": {
          "format": "double",
          "description": "The estimated price. Necesarry of no position is set.",
          "type": "number"
        },
        "Id": {
          "format": "int32",
          "description": "The unique identifier of this entity",
          "type": "integer"
        },
        "CreatedBy": {
          "format": "int32",
          "description": "The id of the user who created this entity",
          "type": "integer"
        },
        "UpdatedBy": {
          "format": "int32",
          "description": "The id of the last user who modified this entity",
          "type": "integer"
        },
        "CreatedOn": {
          "format": "date-time",
          "description": "The date and time this entity was created, in UTC",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "description": "The last date and time this entity was updated, in UTC",
          "type": "string"
        }
      }
    },
    "PlannedRevenuePut": {
      "description": "This model represents an occurrence of a planned revenue.",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "Description": {
          "description": "The description of the planned revenue.",
          "type": "string"
        },
        "Currency": {
          "description": "The ISO 4217 code of the currency of this planned revenue.",
          "maxLength": 3,
          "minLength": 0,
          "type": "string"
        },
        "Status": {
          "description": "The status of this planned revenue occurrence.",
          "enum": [
            "Planned",
            "Offered",
            "Confirmed",
            "Paid",
            "Billed",
            "Skipped"
          ],
          "type": "string"
        },
        "Margin": {
          "format": "int32",
          "description": "The margin of this planned revenue.",
          "type": "integer"
        },
        "Discount": {
          "format": "double",
          "description": "The discount of the planned revenue.\r\n            Monetary value; Its currency is stored in the property Currency.",
          "type": "number"
        },
        "DiscountType": {
          "description": "Whether the discount is an absolute or relative value.",
          "enum": [
            "Percent",
            "NetValue",
            "NotSet"
          ],
          "type": "string"
        },
        "DueDate": {
          "format": "date-time",
          "description": "The due date of this occurrence.",
          "type": "string"
        },
        "Probability": {
          "format": "int32",
          "description": "The probability of the planned revenue, from 0 to 100.",
          "type": "integer"
        },
        "LeadId": {
          "format": "int32",
          "description": "The id of the lead related to the planned revenue.",
          "type": "integer"
        },
        "ProjectId": {
          "format": "int32",
          "description": "the id of the project related to the planned revenue.",
          "type": "integer"
        },
        "CompanyId": {
          "format": "int32",
          "description": "The id of the company which is the receiver of the planned revenue.",
          "type": "integer"
        },
        "PaymentConditionId": {
          "format": "int32",
          "description": "The id of the payment condition.",
          "type": "integer"
        },
        "StartDate": {
          "format": "date-time",
          "description": "The start date of the recurrence.",
          "type": "string"
        },
        "EndDate": {
          "format": "date-time",
          "description": "The end date of the recurrence.",
          "type": "string"
        },
        "Interval": {
          "description": "The interval of the recurrence.",
          "enum": [
            "Once",
            "Annually",
            "HalfAnnually",
            "QuarterAnnually",
            "Monthly",
            "Weekly",
            "TwoYears",
            "ThreeYears",
            "FourYears",
            "FiveYears",
            "Fortnightly"
          ],
          "type": "string"
        },
        "DocumentTemplateId": {
          "format": "int32",
          "description": "The id of the document template.",
          "type": "integer"
        },
        "ContactPersonId": {
          "format": "int32",
          "description": "The id of the contact person.",
          "type": "integer"
        },
        "EstimatedPrice": {
          "format": "double",
          "description": "The estimated price. Necesarry of no position is set.",
          "type": "number"
        },
        "Id": {
          "format": "int32",
          "description": "The unique identifier of this entity",
          "type": "integer"
        },
        "CreatedBy": {
          "format": "int32",
          "description": "The id of the user who created this entity",
          "type": "integer"
        },
        "UpdatedBy": {
          "format": "int32",
          "description": "The id of the last user who modified this entity",
          "type": "integer"
        },
        "CreatedOn": {
          "format": "date-time",
          "description": "The date and time this entity was created, in UTC",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "description": "The last date and time this entity was updated, in UTC",
          "type": "string"
        }
      }
    },
    "ODataResponse[List[RecurringPlannedRevenue]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "description": "This model represents an occurrence of a planned revenue.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "Description": {
                "description": "The description of the planned revenue.",
                "type": "string"
              },
              "NetTotal": {
                "format": "decimal",
                "description": "The net total planned revenue.",
                "type": "number"
              },
              "GrossTotal": {
                "format": "decimal",
                "description": "The gross total planned revenue.",
                "type": "number"
              },
              "Currency": {
                "description": "The ISO 4217 code of the currency of this planned revenue.",
                "maxLength": 3,
                "minLength": 0,
                "type": "string"
              },
              "Status": {
                "description": "The status of this planned revenue occurrence.",
                "type": "string"
              },
              "Margin": {
                "format": "int32",
                "description": "The margin of this planned revenue.",
                "type": "integer"
              },
              "Discount": {
                "format": "double",
                "description": "The discount of the planned revenue.\r\n            Monetary value; Its currency is stored in the property Currency.",
                "type": "number"
              },
              "DiscountType": {
                "description": "Whether the discount is an absolute or relative value.",
                "type": "string"
              },
              "DueDate": {
                "format": "date-time",
                "description": "The due date of this occurrence.",
                "type": "string"
              },
              "Probability": {
                "format": "int32",
                "description": "The probability of the planned revenue, from 0 to 100.",
                "type": "integer"
              },
              "LeadId": {
                "format": "int32",
                "description": "The id of the lead related to the planned revenue.",
                "type": "integer"
              },
              "Lead": {
                "description": "The lead related to the planned revenue.",
                "type": "object"
              },
              "ProjectId": {
                "format": "int32",
                "description": "the id of the project related to the planned revenue.",
                "type": "integer"
              },
              "Project": {
                "description": "The project related to the planned revenue.",
                "type": "object"
              },
              "CompanyId": {
                "format": "int32",
                "description": "The id of the company which is the receiver of the planned revenue.",
                "type": "integer"
              },
              "Company": {
                "description": "The company which is the receiver of the planned revenue.",
                "type": "object"
              },
              "PaymentConditionId": {
                "format": "int32",
                "description": "The id of the payment condition.",
                "type": "integer"
              },
              "PaymentCondition": {
                "description": "The payment condition that applies to this planned revenue.",
                "type": "object"
              },
              "Positions": {
                "description": "The positions of this planned revenue.",
                "type": "array"
              },
              "RecurringPlannedRevenues": {
                "description": "The recurring planned revenue.",
                "type": "array"
              },
              "RecurrenceId": {
                "format": "int32",
                "description": "The id of the recurrence information.",
                "type": "integer"
              },
              "Recurrence": {
                "description": "The recurrence information, if this occurrence is based on\r\n            a recurring planned revenue.",
                "type": "object"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "ODataResponse[List[Quotation]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "description": "A quotation represents an outgoing quotation you send to your customers.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "QuotationDate": {
                "format": "date-time",
                "description": "The date of this quotation",
                "type": "string"
              },
              "ValidUntilDate": {
                "format": "date-time",
                "description": "The date this quotation is valid to",
                "type": "string"
              },
              "Status": {
                "description": "The status of this quotation",
                "type": "string"
              },
              "Positions": {
                "description": "The positions of this quotation",
                "type": "array"
              },
              "Currency": {
                "description": "The ISO 4217 code of the currency of this document.",
                "maxLength": 3,
                "minLength": 0,
                "type": "string"
              },
              "ExchangeRate": {
                "format": "double",
                "description": "The exchange rate to Euro.\r\n            While the document is in a draft state, the exchange rate reflects the current exchange rate of ECB.\r\n            After the document has been sent, the exchange rate at that date will be returned.",
                "type": "number"
              },
              "DeliveryDate": {
                "format": "date-time",
                "description": "The date of the delivery of the products or services.",
                "type": "string"
              },
              "PaymentConditionId": {
                "format": "int32",
                "description": "The Id of the payment condition.",
                "type": "integer"
              },
              "DeliveryConditionId": {
                "format": "int32",
                "description": "The Id of the delivery condition.",
                "type": "integer"
              },
              "PaymentCondition": {
                "description": "The payment condition that applies to this document",
                "type": "object"
              },
              "DeliveryCondition": {
                "description": "The delivery condition that applies to this document",
                "type": "object"
              },
              "DiscountType": {
                "description": "Whether the document discount is specified as a total or a percentage.",
                "type": "string"
              },
              "Discount": {
                "format": "double",
                "description": "A discount that should be applied to the total sum.\r\n            This is either a total or a percantage value, depending on the DiscountType.",
                "type": "number"
              },
              "Margin": {
                "format": "double",
                "description": "A margin (as a percentage) that should be applied to the total sum.\r\n            This margin will be equally distributed over all positions.",
                "type": "number"
              },
              "TaxOption": {
                "description": "The tax rule that should apply to this document.\r\n            VAT is most commonly used for documents within the same country.",
                "type": "string"
              },
              "ServiceOption": {
                "description": "Whether the positions in this document are a delivery or any other kind of service.",
                "type": "string"
              },
              "NetTotal": {
                "format": "decimal",
                "description": "The net sum of the document. This is calculated considering all positions, position and document margin as well as position and document discount.\r\n            The sum is to be interpreted in the document currency.\r\n            Read-only.",
                "type": "number"
              },
              "GrossTotal": {
                "format": "decimal",
                "description": "The gross sum of the document. This is calculated considering all positions, position taxes, position and document margin as well as position and document discount.\r\n            The sum is to be interpreted in the document currency.\r\n            Read-only.",
                "type": "number"
              },
              "VatTotal": {
                "format": "decimal",
                "description": "The sum of the position VAT.\r\n            The sum is to be interpreted in the document currency.\r\n            Read-only.",
                "type": "number"
              },
              "PaidTotal": {
                "format": "decimal",
                "description": "The sum of received payments for this document.\r\n            The sum is to be interpreted in the document currency.\r\n            Read-only.",
                "type": "number"
              },
              "Type": {
                "description": "The type of the document",
                "type": "string"
              },
              "AddressText": {
                "description": "The receiver address text of the document",
                "type": "string"
              },
              "CompanyAddressId": {
                "format": "int32",
                "description": "The id of the postal address of the receiving company",
                "type": "integer"
              },
              "CompanyAddress": {
                "description": "The postal address of the receiving company",
                "type": "object"
              },
              "Subject": {
                "description": "The subject of the document including the placeholders",
                "type": "string"
              },
              "CalculatedSubject": {
                "description": "The calcuated subject of the document.\r\n            The subject includes the final data, without the placeholders.",
                "type": "string"
              },
              "Header": {
                "description": "The header text on the document",
                "type": "string"
              },
              "Footer": {
                "description": "The footer text on the document",
                "type": "string"
              },
              "DocumentTemplateId": {
                "format": "int32",
                "description": "The document template id",
                "type": "integer"
              },
              "Number": {
                "description": "The number of the document, auto generated by the HQ",
                "type": "string"
              },
              "ContactPersonId": {
                "format": "int32",
                "description": "The id of the responsible contact person at the receiving company",
                "type": "integer"
              },
              "ContactPerson": {
                "description": "The responsible contact person at the receiving company",
                "type": "object"
              },
              "CompanyId": {
                "format": "int32",
                "description": "The id of the company which is the receiver of the document",
                "type": "integer"
              },
              "Company": {
                "description": "The company which is the receiver of the document",
                "type": "object"
              },
              "InternalContactPersonId": {
                "format": "int32",
                "description": "The id of the HQ user responsible for this document",
                "type": "integer"
              },
              "InternalContactPerson": {
                "description": "The HQ user repsonsible for this document",
                "type": "object"
              },
              "LeadId": {
                "format": "int32",
                "description": "The id of the lead related to the document",
                "type": "integer"
              },
              "Lead": {
                "description": "The lead related to the document",
                "type": "object"
              },
              "SyncId": {
                "description": "A unique identifier for other sync clients",
                "type": "string"
              },
              "ProjectId": {
                "format": "int32",
                "description": "the id of the project related to the document",
                "type": "integer"
              },
              "Project": {
                "description": "The project related to the document",
                "type": "object"
              },
              "Note": {
                "description": "The comment on the document",
                "type": "string"
              },
              "CompanyPurchaseOrderNumber": {
                "description": "The purchase order number on the document",
                "type": "string"
              },
              "Language": {
                "description": "The language of the document as two-letter ISOCode, for example 'DE'",
                "type": "string"
              },
              "DocumentFile": {
                "description": "The generated pdf file",
                "type": "object"
              },
              "DocumentImage": {
                "description": "The generated pdf file, as an image",
                "type": "object"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "Quotation": {
      "description": "A quotation represents an outgoing quotation you send to your customers.",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "QuotationDate": {
          "format": "date-time",
          "description": "The date of this quotation",
          "type": "string"
        },
        "ValidUntilDate": {
          "format": "date-time",
          "description": "The date this quotation is valid to",
          "type": "string"
        },
        "Status": {
          "description": "The status of this quotation",
          "enum": [
            "Draft",
            "WaitingForReview",
            "Sent",
            "Accepted",
            "Declined",
            "Canceled",
            "Share1",
            "Share2"
          ],
          "type": "string"
        },
        "Positions": {
          "description": "The positions of this quotation",
          "type": "array",
          "items": {
            "description": "A document position represents a position on a quotation or invoice.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "IsOptional": {
                "description": "Whether this position is optional. Only valid in quotations.",
                "type": "boolean"
              },
              "Tax": {
                "format": "double",
                "description": "The position tax rate, for example 19%",
                "type": "number"
              },
              "Price": {
                "format": "decimal",
                "description": "The position price, in the currency of the document",
                "type": "number"
              },
              "Discount": {
                "format": "double",
                "description": "The percentage discount that should be applied to this position sum",
                "type": "number"
              },
              "Margin": {
                "format": "double",
                "description": "The margin that should be applied to this position sum",
                "type": "number"
              },
              "ExcludeFromEarlyPayment": {
                "description": "Whether this position should be excluded from early payment discount calculations",
                "type": "boolean"
              },
              "TotalPrice": {
                "format": "double",
                "description": "The total price under consideration of margin and discount",
                "type": "number"
              },
              "TotalUnitPrice": {
                "format": "double",
                "description": "The total unit price under consideration of margin and discount",
                "type": "number"
              },
              "TotalVat": {
                "format": "double",
                "description": "The total VAT of this position under consideration of margin and discount",
                "type": "number"
              },
              "UserReportings": {
                "description": "The user reportings which have been billed with this document position",
                "type": "array"
              },
              "Interval": {
                "description": "The interval of the recurrence.",
                "type": "string"
              },
              "Text": {
                "description": "The position text, as HTML",
                "type": "string"
              },
              "Unit": {
                "description": "The position unit",
                "type": "string"
              },
              "Type": {
                "description": "The type of this position",
                "type": "string"
              },
              "Order": {
                "format": "int32",
                "description": "The order of this position in the document",
                "type": "integer"
              },
              "ArticleId": {
                "format": "int32",
                "description": "The Id of the article that is associated with this position",
                "type": "integer"
              },
              "ProjectId": {
                "format": "int32",
                "description": "The Id Of the Project",
                "type": "integer"
              },
              "Article": {
                "description": "The article that is associated with this position",
                "type": "object"
              },
              "Amount": {
                "format": "double",
                "description": "The amount of this position in this document",
                "type": "number"
              },
              "ProjectBudgetId": {
                "format": "int32",
                "description": "The Id of the project budget",
                "type": "integer"
              },
              "CostTypeId": {
                "format": "int32",
                "description": "The if of the costType",
                "type": "integer"
              },
              "BookingAccount": {
                "description": "The booking account this position is associated with",
                "type": "string"
              },
              "CostCenter1": {
                "description": "The cost center 1 this position is associated with",
                "type": "string"
              },
              "CostCenter2": {
                "description": "The cost center 2 this position is associated with",
                "type": "string"
              },
              "CustomFields": {
                "description": "The custom fields of this document position",
                "type": "array"
              },
              "DocumentId": {
                "format": "int32",
                "description": "The Id of the document the position belongs to",
                "type": "integer"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        },
        "Currency": {
          "description": "The ISO 4217 code of the currency of this document.",
          "maxLength": 3,
          "minLength": 0,
          "type": "string"
        },
        "ExchangeRate": {
          "format": "double",
          "description": "The exchange rate to Euro.\r\n            While the document is in a draft state, the exchange rate reflects the current exchange rate of ECB.\r\n            After the document has been sent, the exchange rate at that date will be returned.",
          "type": "number"
        },
        "DeliveryDate": {
          "format": "date-time",
          "description": "The date of the delivery of the products or services.",
          "type": "string"
        },
        "PaymentConditionId": {
          "format": "int32",
          "description": "The Id of the payment condition.",
          "type": "integer"
        },
        "DeliveryConditionId": {
          "format": "int32",
          "description": "The Id of the delivery condition.",
          "type": "integer"
        },
        "PaymentCondition": {
          "description": "The payment condition that applies to this document",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The name of document condition",
              "type": "string"
            },
            "Text": {
              "description": "The text of condition",
              "type": "string"
            },
            "DisplayText": {
              "description": "The text with replaced due days",
              "type": "string"
            },
            "DueInDays": {
              "format": "int32",
              "description": "The payment due date in days",
              "type": "integer"
            },
            "Type": {
              "description": "The type of this condition",
              "enum": [
                "PaymentConditions",
                "DeliveryConditions",
                "NotDefined"
              ],
              "type": "string"
            },
            "WarningDays": {
              "format": "int32",
              "description": "The payment due date in days of a warning document",
              "type": "integer"
            },
            "ReminderDays": {
              "format": "int32",
              "description": "The payment due date in days of a reminder document",
              "type": "integer"
            },
            "Language": {
              "description": "The language of the condition, as two-letter ISO-Code, for example 'DE'",
              "type": "string"
            },
            "DocumentEarlyPayments": {
              "description": "The list of early payment conditions that belong to this document condition (i.e. Skonto)",
              "type": "array",
              "items": {
                "description": "The document early payment entry represents a rule in days before which a discount is granted on an invoice.",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "DeliveryCondition": {
          "description": "The delivery condition that applies to this document",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The name of document condition",
              "type": "string"
            },
            "Text": {
              "description": "The text of condition",
              "type": "string"
            },
            "DisplayText": {
              "description": "The text with replaced due days",
              "type": "string"
            },
            "DueInDays": {
              "format": "int32",
              "description": "The payment due date in days",
              "type": "integer"
            },
            "Type": {
              "description": "The type of this condition",
              "enum": [
                "PaymentConditions",
                "DeliveryConditions",
                "NotDefined"
              ],
              "type": "string"
            },
            "WarningDays": {
              "format": "int32",
              "description": "The payment due date in days of a warning document",
              "type": "integer"
            },
            "ReminderDays": {
              "format": "int32",
              "description": "The payment due date in days of a reminder document",
              "type": "integer"
            },
            "Language": {
              "description": "The language of the condition, as two-letter ISO-Code, for example 'DE'",
              "type": "string"
            },
            "DocumentEarlyPayments": {
              "description": "The list of early payment conditions that belong to this document condition (i.e. Skonto)",
              "type": "array",
              "items": {
                "description": "The document early payment entry represents a rule in days before which a discount is granted on an invoice.",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "DiscountType": {
          "description": "Whether the document discount is specified as a total or a percentage.",
          "enum": [
            "Percent",
            "NetValue",
            "NotSet"
          ],
          "type": "string"
        },
        "Discount": {
          "format": "double",
          "description": "A discount that should be applied to the total sum.\r\n            This is either a total or a percantage value, depending on the DiscountType.",
          "type": "number"
        },
        "Margin": {
          "format": "double",
          "description": "A margin (as a percentage) that should be applied to the total sum.\r\n            This margin will be equally distributed over all positions.",
          "type": "number"
        },
        "TaxOption": {
          "description": "The tax rule that should apply to this document.\r\n            VAT is most commonly used for documents within the same country.",
          "enum": [
            "VatApplicable",
            "FreeThirdCountryTerritory",
            "FreeEuropeanUnionWithVatId",
            "FreeEuropeanUnionNoVatId",
            "Inverse",
            "IntraCommunityDelivery",
            "ExportDelivery",
            "FreeOther",
            "FreeYouthSupport"
          ],
          "type": "string"
        },
        "ServiceOption": {
          "description": "Whether the positions in this document are a delivery or any other kind of service.",
          "enum": [
            "None",
            "Delivery",
            "Service",
            "DeliveryAndService"
          ],
          "type": "string"
        },
        "NetTotal": {
          "format": "decimal",
          "description": "The net sum of the document. This is calculated considering all positions, position and document margin as well as position and document discount.\r\n            The sum is to be interpreted in the document currency.\r\n            Read-only.",
          "type": "number"
        },
        "GrossTotal": {
          "format": "decimal",
          "description": "The gross sum of the document. This is calculated considering all positions, position taxes, position and document margin as well as position and document discount.\r\n            The sum is to be interpreted in the document currency.\r\n            Read-only.",
          "type": "number"
        },
        "VatTotal": {
          "format": "decimal",
          "description": "The sum of the position VAT.\r\n            The sum is to be interpreted in the document currency.\r\n            Read-only.",
          "type": "number"
        },
        "PaidTotal": {
          "format": "decimal",
          "description": "The sum of received payments for this document.\r\n            The sum is to be interpreted in the document currency.\r\n            Read-only.",
          "type": "number"
        },
        "Type": {
          "description": "The type of the document",
          "enum": [
            "Quotation",
            "Invoice",
            "DeliveryNote",
            "Warning",
            "Reminder",
            "Cancellation",
            "CreditNote",
            "Confirmation",
            "IncomingInvoice",
            "Undefined",
            "Order",
            "PriceInquery",
            "Letter",
            "Minute",
            "Akonto"
          ],
          "type": "string"
        },
        "AddressText": {
          "description": "The receiver address text of the document",
          "type": "string"
        },
        "CompanyAddressId": {
          "format": "int32",
          "description": "The id of the postal address of the receiving company",
          "type": "integer"
        },
        "CompanyAddress": {
          "description": "The postal address of the receiving company",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "City": {
              "description": "The city of this address",
              "type": "string"
            },
            "Street": {
              "description": "The street name of this address",
              "type": "string"
            },
            "HouseNumber": {
              "description": "The house number of this address",
              "type": "string"
            },
            "ZipCode": {
              "description": "The ZIP or Postal Code of this address",
              "type": "string"
            },
            "AddressLine2": {
              "description": "The secondary address line, c/o details, etc.",
              "type": "string"
            },
            "Description": {
              "description": "The description of this address",
              "type": "string"
            },
            "Country": {
              "description": "The ISO 3166-1 alpha-2 country code of this address",
              "type": "string"
            },
            "Phone": {
              "description": "The phone number of this address",
              "type": "string"
            },
            "Fax": {
              "description": "The fax number of this address",
              "type": "string"
            },
            "Email": {
              "description": "The email address of this address",
              "type": "string"
            },
            "Website": {
              "description": "The website of this address",
              "type": "string"
            },
            "IsStandard": {
              "description": "Whether this address is the standard address of a company",
              "type": "boolean"
            },
            "DefaultForDocumentType": {
              "description": "The document type this address should be used as a standard for",
              "enum": [
                "Quotation",
                "Invoice",
                "DeliveryNote",
                "Warning",
                "Reminder",
                "Cancellation",
                "CreditNote",
                "Confirmation",
                "IncomingInvoice",
                "Undefined",
                "Order",
                "PriceInquery",
                "Letter",
                "Minute",
                "Akonto"
              ],
              "type": "string"
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "Subject": {
          "description": "The subject of the document including the placeholders",
          "type": "string"
        },
        "CalculatedSubject": {
          "description": "The calcuated subject of the document.\r\n            The subject includes the final data, without the placeholders.",
          "type": "string"
        },
        "Header": {
          "description": "The header text on the document",
          "type": "string"
        },
        "Footer": {
          "description": "The footer text on the document",
          "type": "string"
        },
        "DocumentTemplateId": {
          "format": "int32",
          "description": "The document template id",
          "type": "integer"
        },
        "Number": {
          "description": "The number of the document, auto generated by the HQ",
          "type": "string"
        },
        "ContactPersonId": {
          "format": "int32",
          "description": "The id of the responsible contact person at the receiving company",
          "type": "integer"
        },
        "ContactPerson": {
          "description": "The responsible contact person at the receiving company",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "FirstName": {
              "description": "The first name of the contact person",
              "type": "string"
            },
            "LastName": {
              "description": "The last name of the contact person",
              "type": "string"
            },
            "Position": {
              "description": "The position of the contact person",
              "type": "string"
            },
            "CompanyId": {
              "format": "int32",
              "description": "The Id of the company that the contact person belongs to",
              "type": "integer"
            },
            "PhoneLandline": {
              "description": "The landline phone number of the contact person",
              "type": "string"
            },
            "PhoneMobile": {
              "description": "The mobile phone number of the contact person",
              "type": "string"
            },
            "Salutation": {
              "description": "The salutation of the contact person",
              "type": "string"
            },
            "Birthdate": {
              "description": "The birth date of the user",
              "type": "string"
            },
            "SalutationForm": {
              "description": "The salutation form of the contact person. The value can be \"Neutral\", \"Formal\", \"Informal\" or null.",
              "enum": [
                "Formal",
                "Informal",
                "Neutral",
                "NotSet"
              ],
              "type": "string"
            },
            "Title": {
              "description": "The academic title of the contact person",
              "type": "string"
            },
            "Language": {
              "description": "The preferred contact language of this contact person, in two-letter ISO-Code, for example 'DE'",
              "type": "string"
            },
            "DefaultAddressId": {
              "format": "int32",
              "description": "The id of the default address of this contact person",
              "type": "integer"
            },
            "Addresses": {
              "description": "All addresses of the contact person",
              "type": "array",
              "items": {
                "description": "A company address represents one of many addresses of companies.",
                "type": "object"
              }
            },
            "DefaultAddress": {
              "description": "The default address of this contact person",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "CustomFields": {
              "description": "The customfields associated with this contact person",
              "type": "array",
              "items": {
                "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
                "type": "object"
              }
            },
            "Company": {
              "description": "The company that the contact person belongs to",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "CompanyId": {
          "format": "int32",
          "description": "The id of the company which is the receiver of the document",
          "type": "integer"
        },
        "Company": {
          "description": "The company which is the receiver of the document",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The name of the company",
              "type": "string"
            },
            "IndustrialSector": {
              "description": "The company's industrial sector",
              "type": "string"
            },
            "Description": {
              "description": "A longer description of the company",
              "type": "string"
            },
            "IBAN": {
              "description": "The IBAN of the company",
              "type": "string"
            },
            "BIC": {
              "description": "The BIC of the company",
              "type": "string"
            },
            "DebitorNumber": {
              "format": "int32",
              "description": "The company's debitor number",
              "type": "integer"
            },
            "CreditorNumber": {
              "format": "int32",
              "description": "The company's creditor number",
              "type": "integer"
            },
            "TaxId": {
              "description": "The company's tax id",
              "type": "string"
            },
            "DefaultDeliveryConditionId": {
              "format": "int32",
              "description": "The id of the default delivery condition of this company",
              "type": "integer"
            },
            "DefaultDeliveryCondition": {
              "description": "The default delivery condition of this company",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "DefaultPaymentConditionId": {
              "format": "int32",
              "description": "The id of the default payment condition of this company",
              "type": "integer"
            },
            "DefaultPaymentCondition": {
              "description": "The default payment condition of this company",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "DefaultAddress": {
              "description": "The default address of this company",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Addresses": {
              "description": "All addresses of the company",
              "type": "array",
              "items": {
                "description": "A company address represents one of many addresses of companies.",
                "type": "object"
              }
            },
            "ResponsibleUsers": {
              "description": "The list of the responsible users of this company",
              "type": "array",
              "items": {
                "description": "A user represents a user in your HQ system.",
                "type": "object"
              }
            },
            "CustomFields": {
              "description": "The customfields associated with this company",
              "type": "array",
              "items": {
                "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
                "type": "object"
              }
            },
            "CompanyTypes": {
              "description": "The company types associated with this company",
              "type": "array",
              "items": {
                "description": "This is a connection between a company and a company type.\r\n            A company can have more than one type and can have a different company number for each type.",
                "type": "object"
              }
            },
            "Files": {
              "description": "The files associated with this company",
              "type": "array",
              "items": {
                "description": "A file represents a user upload or HQ-generated PDF documents.",
                "type": "object"
              }
            },
            "Subsystems": {
              "description": "The subsystems this company is associated with",
              "type": "array",
              "items": {
                "description": "A subsystem represents a tenant within a customer's HQ",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "InternalContactPersonId": {
          "format": "int32",
          "description": "The id of the HQ user responsible for this document",
          "type": "integer"
        },
        "InternalContactPerson": {
          "description": "The HQ user repsonsible for this document",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "FirstName": {
              "description": "The first name of the user",
              "type": "string"
            },
            "LastName": {
              "description": "The last name of the user",
              "type": "string"
            },
            "UserName": {
              "description": "The user's user name in HQ",
              "type": "string"
            },
            "EMailWork": {
              "description": "The work email of the user",
              "type": "string"
            },
            "Salutation": {
              "description": "The salutation of the user, i.e. Mrs. or Mr.",
              "type": "string"
            },
            "Title": {
              "description": "The professional title of the user",
              "type": "string"
            },
            "EmployeeNumber": {
              "description": "The employee number of the user",
              "type": "string"
            },
            "Department": {
              "description": "The department of the user",
              "type": "string"
            },
            "BirthDate": {
              "format": "date-time",
              "description": "The birth date of the user",
              "type": "string"
            },
            "FederalState": {
              "description": "The federal state of the user",
              "type": "string"
            },
            "Country": {
              "description": "The country of the user",
              "type": "string"
            },
            "BasicLoadInHours": {
              "format": "double",
              "description": "The basic load in hours of the user",
              "type": "number"
            },
            "EntryDate": {
              "format": "date-time",
              "description": "The entry date of the user",
              "type": "string"
            },
            "LeavingDate": {
              "format": "date-time",
              "description": "The leaving date of the user",
              "type": "string"
            },
            "PhoneLandlinePrivate": {
              "description": "The private phone number of the user - landline",
              "type": "string"
            },
            "PhoneLandlineWork": {
              "description": "The work phone number of the user - landline",
              "type": "string"
            },
            "PhoneMobilePrivate": {
              "description": "The private phone number of the user - mobile",
              "type": "string"
            },
            "PhoneMobileWork": {
              "description": "The work phon number of the user - mobile",
              "type": "string"
            },
            "UserWorkingHours": {
              "description": "The custom fields of the user",
              "type": "array",
              "items": {
                "description": "The weekly working hours user",
                "type": "object"
              }
            },
            "CustomFields": {
              "description": "The custom fields of the user",
              "type": "array",
              "items": {
                "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
                "type": "object"
              }
            },
            "UserGroups": {
              "description": "The user groups of the user",
              "type": "array",
              "items": {
                "description": "The user groups a user is in.",
                "type": "object"
              }
            },
            "ResourceGroup": {
              "description": "The resource group of the user",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Absences": {
              "description": "The absences of the user",
              "type": "array",
              "items": {
                "description": "An absence represents a time of absence from work, for example holidays or sickness. \r\n            Absences can be either paid or unpaid.",
                "type": "object"
              }
            },
            "Assignments": {
              "description": "The tasks the user is assigned to",
              "type": "array",
              "items": {
                "description": "The assignment of a user to a task",
                "type": "object"
              }
            },
            "Reportings": {
              "description": "The reportings of this user",
              "type": "array",
              "items": {
                "description": "A user reporting represents a logged time of a user on a specific task in HQ.",
                "type": "object"
              }
            },
            "ProjectMembers": {
              "description": "The allocations of this user to projects",
              "type": "array",
              "items": {
                "description": "A project member links a user to a project. It includes the project role and the charge rates\r\n            for the link.",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "LeadId": {
          "format": "int32",
          "description": "The id of the lead related to the document",
          "type": "integer"
        },
        "Lead": {
          "description": "The lead related to the document",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The name of the lead",
              "type": "string"
            },
            "CompanyName": {
              "description": "The name of the company that this lead is assigned to, read-only",
              "type": "string"
            },
            "Number": {
              "description": "The number of the lead",
              "type": "string"
            },
            "Company": {
              "description": "The company this lead belongs to",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Status": {
              "description": "The status of the lead",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "StatusId": {
              "format": "int32",
              "description": "The Id of the status of the lead",
              "type": "integer"
            },
            "CashOn": {
              "format": "date-time",
              "description": "The expected sales date",
              "type": "string"
            },
            "ClosingProbability": {
              "format": "int32",
              "description": "The probability of closing the lead, in percent",
              "type": "integer"
            },
            "Currency": {
              "description": "The ISO 4217 code of the currency of the lead volume",
              "maxLength": 3,
              "minLength": 0,
              "type": "string"
            },
            "Volume": {
              "format": "double",
              "description": "The financial volume when closing the lead",
              "type": "number"
            },
            "CompanyId": {
              "format": "int32",
              "description": "The Id of the company this lead belongs to",
              "type": "integer"
            },
            "CustomFields": {
              "description": "The custom fields of this lead",
              "type": "array",
              "items": {
                "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
                "type": "object"
              }
            },
            "ResponsibleUserId": {
              "format": "int32",
              "description": "The user id of the HQ user responsible for this lead",
              "type": "integer"
            },
            "ResponsibleUser": {
              "description": "The HQ user responsible for this lead",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "SalesCampaigns": {
              "description": "List of all Sales Campaigns for this Lead",
              "type": "array",
              "items": {
                "description": "Represents the status a lead is in",
                "type": "object"
              }
            },
            "ContactPersons": {
              "description": "List of all contact persons for this Lead",
              "type": "array",
              "items": {
                "description": "A contact person represents a person that works for a company you do business with. A company can have many contact persons.",
                "type": "object"
              }
            },
            "Subsystems": {
              "description": "The subsystems this lead is associated with",
              "type": "array",
              "items": {
                "description": "A subsystem represents a tenant within a customer's HQ",
                "type": "object"
              }
            },
            "ProjectId": {
              "format": "int32",
              "description": "The project id of the lead",
              "type": "integer"
            },
            "Project": {
              "description": "The project of the lead",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "SyncId": {
          "description": "A unique identifier for other sync clients",
          "type": "string"
        },
        "ProjectId": {
          "format": "int32",
          "description": "the id of the project related to the document",
          "type": "integer"
        },
        "Project": {
          "description": "The project related to the document",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Number": {
              "description": "The number of the project",
              "type": "string"
            },
            "Name": {
              "description": "The name of the project",
              "type": "string"
            },
            "Status": {
              "description": "The current status description of the project",
              "type": "string"
            },
            "PlannedStartDate": {
              "format": "date-time",
              "description": "The planned start date of the first task of the project",
              "type": "string"
            },
            "PlannedEndDate": {
              "format": "date-time",
              "description": "The planned end date of the last task of the project",
              "type": "string"
            },
            "StartDate": {
              "format": "date-time",
              "description": "The planned start date of the project",
              "type": "string"
            },
            "EndDate": {
              "format": "date-time",
              "description": "The planned end date of the project",
              "type": "string"
            },
            "AworkSyncId": {
              "description": "The Id from the linked awork project",
              "type": "string"
            },
            "Subsystems": {
              "description": "The subsystems this project is associated with",
              "type": "array",
              "items": {
                "description": "A subsystem represents a tenant within a customer's HQ",
                "type": "object"
              }
            },
            "ProjectTemplateId": {
              "format": "int32",
              "description": "The id of the project template",
              "type": "integer"
            },
            "ProjectTemplate": {
              "description": "The template of this project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "ProjectStatusId": {
              "format": "int32",
              "description": "The id of the project status",
              "type": "integer"
            },
            "CompanyId": {
              "format": "int32",
              "description": "The id of the company",
              "type": "integer"
            },
            "LeadId": {
              "format": "int32",
              "description": "The Id of the lead",
              "type": "integer"
            },
            "InvoiceAddressId": {
              "format": "int32",
              "description": "Id of the address for invoices of this project",
              "type": "integer"
            },
            "DeliveryAddressId": {
              "format": "int32",
              "description": "Id of the address for the deliveries of this project",
              "type": "integer"
            },
            "ResponsibleUserId": {
              "format": "int32",
              "description": "The id of the user which is responsible for this (internal) project",
              "type": "integer"
            },
            "ProjectStatus": {
              "description": "The status of the project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Company": {
              "description": "The company this project is associated with",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "ResponsibleUser": {
              "description": "The user which is responsible for this (internal) project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "DeliveryAddress": {
              "description": "The address for delvieries of this project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "InvoiceAddress": {
              "description": "The address for delvieries of this project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Lead": {
              "description": "The lead of the project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "CustomFields": {
              "description": "The custom fields of this project",
              "type": "array",
              "items": {
                "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
                "type": "object"
              }
            },
            "Reportings": {
              "description": "The user reportings of this project",
              "type": "array",
              "items": {
                "description": "A user reporting represents a logged time of a user on a specific task in HQ.",
                "type": "object"
              }
            },
            "Files": {
              "description": "The files of this project",
              "type": "array",
              "items": {
                "description": "A file represents a user upload or HQ-generated PDF documents.",
                "type": "object"
              }
            },
            "Members": {
              "description": "The members of this project",
              "type": "array",
              "items": {
                "description": "A project member links a user to a project. It includes the project role and the charge rates\r\n            for the link.",
                "type": "object"
              }
            },
            "ContactHistories": {
              "description": "Contact histories linked to this project.",
              "type": "array",
              "items": {
                "description": "The contact history represents any contact you had with a contact person. For example, any meeting, phone call or email can be a contact history entry.",
                "type": "object"
              }
            },
            "ContactPersons": {
              "description": "Contact persons linked to this project.",
              "type": "array",
              "items": {
                "description": "A contact person represents a person that works for a company you do business with. A company can have many contact persons.",
                "type": "object"
              }
            },
            "Articles": {
              "description": "All articles linked to the project",
              "type": "array",
              "items": {
                "description": "An article is a stock item that your company sells, for example a digital camera. \r\n            An article can also be a service or activity that your company performs, for example a digital design. \r\n            Articles can be used to create positions on invoices or quotations, among others.",
                "type": "object"
              }
            },
            "ProjectBudgets": {
              "description": "All articles linked to the project",
              "type": "array",
              "items": {
                "description": "The project budget for a project",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "Note": {
          "description": "The comment on the document",
          "type": "string"
        },
        "CompanyPurchaseOrderNumber": {
          "description": "The purchase order number on the document",
          "type": "string"
        },
        "Language": {
          "description": "The language of the document as two-letter ISOCode, for example 'DE'",
          "type": "string"
        },
        "DocumentFile": {
          "description": "The generated pdf file",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The name of the file",
              "type": "string"
            },
            "Size": {
              "format": "double",
              "description": "The size in bytes",
              "type": "number"
            },
            "HasContent": {
              "description": "Returns true if the file has content (was uploaded yet)",
              "type": "boolean"
            },
            "IsDirectory": {
              "description": "Returns true if the file entity is a directory, otherwise false",
              "type": "boolean"
            },
            "DirectoryId": {
              "format": "int32",
              "description": "The id of the parent directory",
              "type": "integer"
            },
            "FileRelations": {
              "description": "List of all relations of a",
              "type": "array",
              "items": {
                "description": "A file relation represents a link between a file and another entity like a project or article.",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "DocumentImage": {
          "description": "The generated pdf file, as an image",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The name of the file",
              "type": "string"
            },
            "Size": {
              "format": "double",
              "description": "The size in bytes",
              "type": "number"
            },
            "HasContent": {
              "description": "Returns true if the file has content (was uploaded yet)",
              "type": "boolean"
            },
            "IsDirectory": {
              "description": "Returns true if the file entity is a directory, otherwise false",
              "type": "boolean"
            },
            "DirectoryId": {
              "format": "int32",
              "description": "The id of the parent directory",
              "type": "integer"
            },
            "FileRelations": {
              "description": "List of all relations of a",
              "type": "array",
              "items": {
                "description": "A file relation represents a link between a file and another entity like a project or article.",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "Id": {
          "format": "int32",
          "description": "The unique identifier of this entity",
          "type": "integer"
        },
        "CreatedBy": {
          "format": "int32",
          "description": "The id of the user who created this entity",
          "type": "integer"
        },
        "UpdatedBy": {
          "format": "int32",
          "description": "The id of the last user who modified this entity",
          "type": "integer"
        },
        "CreatedOn": {
          "format": "date-time",
          "description": "The date and time this entity was created, in UTC",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "description": "The last date and time this entity was updated, in UTC",
          "type": "string"
        }
      }
    },
    "QuotationPlannedRevenuePost": {
      "description": "This model represents an occurrence of a planned revenue.",
      "type": "object",
      "properties": {
        "StartDate": {
          "format": "date-time",
          "description": "The start date of the recurrence.",
          "type": "string"
        },
        "EndDate": {
          "format": "date-time",
          "description": "The end date of the recurrence.",
          "type": "string"
        },
        "Interval": {
          "description": "The interval of the recurrence.",
          "enum": [
            "Once",
            "Annually",
            "HalfAnnually",
            "QuarterAnnually",
            "Monthly",
            "Weekly",
            "TwoYears",
            "ThreeYears",
            "FourYears",
            "FiveYears",
            "Fortnightly"
          ],
          "type": "string"
        },
        "LeadId": {
          "format": "int32",
          "description": "The id of the lead.",
          "type": "integer"
        },
        "Probability": {
          "format": "int32",
          "description": "The probability of the planned revenue, from 0 to 100.",
          "type": "integer"
        }
      }
    },
    "ODataResponse[List[HQFile]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "description": "A file represents a user upload or HQ-generated PDF documents.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "Name": {
                "description": "The name of the file",
                "type": "string"
              },
              "Size": {
                "format": "double",
                "description": "The size in bytes",
                "type": "number"
              },
              "HasContent": {
                "description": "Returns true if the file has content (was uploaded yet)",
                "type": "boolean"
              },
              "IsDirectory": {
                "description": "Returns true if the file entity is a directory, otherwise false",
                "type": "boolean"
              },
              "DirectoryId": {
                "format": "int32",
                "description": "The id of the parent directory",
                "type": "integer"
              },
              "FileRelations": {
                "description": "List of all relations of a",
                "type": "array"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "ODataResponse[List[FinancesCostType]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "Name": {
                "description": "The name of the cost type",
                "type": "string"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "HealthCheckModel": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ODataResponse[List[LeadStatus]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "description": "Represents the status a lead is in",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "Name": {
                "description": "The name of the status",
                "type": "string"
              },
              "Type": {
                "description": "Whether this lead status is open, successful or lost",
                "type": "string"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "ODataResponse[List[Lead]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "description": "A lead represents a deal or prospective customer that you are in contact with.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "Name": {
                "description": "The name of the lead",
                "type": "string"
              },
              "CompanyName": {
                "description": "The name of the company that this lead is assigned to, read-only",
                "type": "string"
              },
              "Number": {
                "description": "The number of the lead",
                "type": "string"
              },
              "Company": {
                "description": "The company this lead belongs to",
                "type": "object"
              },
              "Status": {
                "description": "The status of the lead",
                "type": "object"
              },
              "StatusId": {
                "format": "int32",
                "description": "The Id of the status of the lead",
                "type": "integer"
              },
              "CashOn": {
                "format": "date-time",
                "description": "The expected sales date",
                "type": "string"
              },
              "ClosingProbability": {
                "format": "int32",
                "description": "The probability of closing the lead, in percent",
                "type": "integer"
              },
              "Currency": {
                "description": "The ISO 4217 code of the currency of the lead volume",
                "maxLength": 3,
                "minLength": 0,
                "type": "string"
              },
              "Volume": {
                "format": "double",
                "description": "The financial volume when closing the lead",
                "type": "number"
              },
              "CompanyId": {
                "format": "int32",
                "description": "The Id of the company this lead belongs to",
                "type": "integer"
              },
              "CustomFields": {
                "description": "The custom fields of this lead",
                "type": "array"
              },
              "ResponsibleUserId": {
                "format": "int32",
                "description": "The user id of the HQ user responsible for this lead",
                "type": "integer"
              },
              "ResponsibleUser": {
                "description": "The HQ user responsible for this lead",
                "type": "object"
              },
              "SalesCampaigns": {
                "description": "List of all Sales Campaigns for this Lead",
                "type": "array"
              },
              "ContactPersons": {
                "description": "List of all contact persons for this Lead",
                "type": "array"
              },
              "Subsystems": {
                "description": "The subsystems this lead is associated with",
                "type": "array"
              },
              "ProjectId": {
                "format": "int32",
                "description": "The project id of the lead",
                "type": "integer"
              },
              "Project": {
                "description": "The project of the lead",
                "type": "object"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "ODataResponse[List[PlannedCost]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "Name": {
                "description": "The name of the planned cost.",
                "type": "string"
              },
              "Description": {
                "description": "The description of the planned cost.",
                "type": "string"
              },
              "ProjectId": {
                "format": "int32",
                "description": "The id of the project the planned cost are related to.",
                "type": "integer"
              },
              "Project": {
                "description": "The project the planned cost are related to.",
                "type": "object"
              },
              "PlannedDate": {
                "format": "date-time",
                "description": "The planned date of the planned cost.",
                "type": "string"
              },
              "IsCompleted": {
                "description": "Whether the planned cost is completed.",
                "type": "boolean"
              },
              "AddressFreetext": {
                "description": "The address or free text of the planned cost.",
                "type": "string"
              },
              "CompanyId": {
                "format": "int32",
                "description": "The id of the company the planned cost are related to.",
                "type": "integer"
              },
              "Company": {
                "description": "The company the planned cost are related to.",
                "type": "object"
              },
              "Price": {
                "format": "double",
                "description": "The price, in the currency of the planned cost.",
                "type": "number"
              },
              "Tax": {
                "format": "double",
                "description": "The planned cost tax rate, for example 19%.",
                "type": "number"
              },
              "Currency": {
                "description": "The ISO 4217 code of the currency of this planned cost.",
                "maxLength": 3,
                "minLength": 0,
                "type": "string"
              },
              "FinancesCostTypeId": {
                "format": "int32",
                "description": "The id of the finances cost type the planned cost are related to.",
                "type": "integer"
              },
              "FinancesCostType": {
                "description": "The finances cost type the planned cost are related to.",
                "type": "object"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "PlannedCost": {
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "Name": {
          "description": "The name of the planned cost.",
          "type": "string"
        },
        "Description": {
          "description": "The description of the planned cost.",
          "type": "string"
        },
        "ProjectId": {
          "format": "int32",
          "description": "The id of the project the planned cost are related to.",
          "type": "integer"
        },
        "Project": {
          "description": "The project the planned cost are related to.",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Number": {
              "description": "The number of the project",
              "type": "string"
            },
            "Name": {
              "description": "The name of the project",
              "type": "string"
            },
            "Status": {
              "description": "The current status description of the project",
              "type": "string"
            },
            "PlannedStartDate": {
              "format": "date-time",
              "description": "The planned start date of the first task of the project",
              "type": "string"
            },
            "PlannedEndDate": {
              "format": "date-time",
              "description": "The planned end date of the last task of the project",
              "type": "string"
            },
            "StartDate": {
              "format": "date-time",
              "description": "The planned start date of the project",
              "type": "string"
            },
            "EndDate": {
              "format": "date-time",
              "description": "The planned end date of the project",
              "type": "string"
            },
            "AworkSyncId": {
              "description": "The Id from the linked awork project",
              "type": "string"
            },
            "Subsystems": {
              "description": "The subsystems this project is associated with",
              "type": "array",
              "items": {
                "description": "A subsystem represents a tenant within a customer's HQ",
                "type": "object"
              }
            },
            "ProjectTemplateId": {
              "format": "int32",
              "description": "The id of the project template",
              "type": "integer"
            },
            "ProjectTemplate": {
              "description": "The template of this project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "ProjectStatusId": {
              "format": "int32",
              "description": "The id of the project status",
              "type": "integer"
            },
            "CompanyId": {
              "format": "int32",
              "description": "The id of the company",
              "type": "integer"
            },
            "LeadId": {
              "format": "int32",
              "description": "The Id of the lead",
              "type": "integer"
            },
            "InvoiceAddressId": {
              "format": "int32",
              "description": "Id of the address for invoices of this project",
              "type": "integer"
            },
            "DeliveryAddressId": {
              "format": "int32",
              "description": "Id of the address for the deliveries of this project",
              "type": "integer"
            },
            "ResponsibleUserId": {
              "format": "int32",
              "description": "The id of the user which is responsible for this (internal) project",
              "type": "integer"
            },
            "ProjectStatus": {
              "description": "The status of the project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Company": {
              "description": "The company this project is associated with",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "ResponsibleUser": {
              "description": "The user which is responsible for this (internal) project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "DeliveryAddress": {
              "description": "The address for delvieries of this project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "InvoiceAddress": {
              "description": "The address for delvieries of this project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Lead": {
              "description": "The lead of the project",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "CustomFields": {
              "description": "The custom fields of this project",
              "type": "array",
              "items": {
                "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
                "type": "object"
              }
            },
            "Reportings": {
              "description": "The user reportings of this project",
              "type": "array",
              "items": {
                "description": "A user reporting represents a logged time of a user on a specific task in HQ.",
                "type": "object"
              }
            },
            "Files": {
              "description": "The files of this project",
              "type": "array",
              "items": {
                "description": "A file represents a user upload or HQ-generated PDF documents.",
                "type": "object"
              }
            },
            "Members": {
              "description": "The members of this project",
              "type": "array",
              "items": {
                "description": "A project member links a user to a project. It includes the project role and the charge rates\r\n            for the link.",
                "type": "object"
              }
            },
            "ContactHistories": {
              "description": "Contact histories linked to this project.",
              "type": "array",
              "items": {
                "description": "The contact history represents any contact you had with a contact person. For example, any meeting, phone call or email can be a contact history entry.",
                "type": "object"
              }
            },
            "ContactPersons": {
              "description": "Contact persons linked to this project.",
              "type": "array",
              "items": {
                "description": "A contact person represents a person that works for a company you do business with. A company can have many contact persons.",
                "type": "object"
              }
            },
            "Articles": {
              "description": "All articles linked to the project",
              "type": "array",
              "items": {
                "description": "An article is a stock item that your company sells, for example a digital camera. \r\n            An article can also be a service or activity that your company performs, for example a digital design. \r\n            Articles can be used to create positions on invoices or quotations, among others.",
                "type": "object"
              }
            },
            "ProjectBudgets": {
              "description": "All articles linked to the project",
              "type": "array",
              "items": {
                "description": "The project budget for a project",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "PlannedDate": {
          "format": "date-time",
          "description": "The planned date of the planned cost.",
          "type": "string"
        },
        "IsCompleted": {
          "description": "Whether the planned cost is completed.",
          "type": "boolean"
        },
        "AddressFreetext": {
          "description": "The address or free text of the planned cost.",
          "type": "string"
        },
        "CompanyId": {
          "format": "int32",
          "description": "The id of the company the planned cost are related to.",
          "type": "integer"
        },
        "Company": {
          "description": "The company the planned cost are related to.",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The name of the company",
              "type": "string"
            },
            "IndustrialSector": {
              "description": "The company's industrial sector",
              "type": "string"
            },
            "Description": {
              "description": "A longer description of the company",
              "type": "string"
            },
            "IBAN": {
              "description": "The IBAN of the company",
              "type": "string"
            },
            "BIC": {
              "description": "The BIC of the company",
              "type": "string"
            },
            "DebitorNumber": {
              "format": "int32",
              "description": "The company's debitor number",
              "type": "integer"
            },
            "CreditorNumber": {
              "format": "int32",
              "description": "The company's creditor number",
              "type": "integer"
            },
            "TaxId": {
              "description": "The company's tax id",
              "type": "string"
            },
            "DefaultDeliveryConditionId": {
              "format": "int32",
              "description": "The id of the default delivery condition of this company",
              "type": "integer"
            },
            "DefaultDeliveryCondition": {
              "description": "The default delivery condition of this company",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "DefaultPaymentConditionId": {
              "format": "int32",
              "description": "The id of the default payment condition of this company",
              "type": "integer"
            },
            "DefaultPaymentCondition": {
              "description": "The default payment condition of this company",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "DefaultAddress": {
              "description": "The default address of this company",
              "required": [
                "Id"
              ],
              "type": "object",
              "properties": {}
            },
            "Addresses": {
              "description": "All addresses of the company",
              "type": "array",
              "items": {
                "description": "A company address represents one of many addresses of companies.",
                "type": "object"
              }
            },
            "ResponsibleUsers": {
              "description": "The list of the responsible users of this company",
              "type": "array",
              "items": {
                "description": "A user represents a user in your HQ system.",
                "type": "object"
              }
            },
            "CustomFields": {
              "description": "The customfields associated with this company",
              "type": "array",
              "items": {
                "description": "A custom field contains a value for a certain custom field definition and is always linked to a certain entity that has custom fields, like a project.",
                "type": "object"
              }
            },
            "CompanyTypes": {
              "description": "The company types associated with this company",
              "type": "array",
              "items": {
                "description": "This is a connection between a company and a company type.\r\n            A company can have more than one type and can have a different company number for each type.",
                "type": "object"
              }
            },
            "Files": {
              "description": "The files associated with this company",
              "type": "array",
              "items": {
                "description": "A file represents a user upload or HQ-generated PDF documents.",
                "type": "object"
              }
            },
            "Subsystems": {
              "description": "The subsystems this company is associated with",
              "type": "array",
              "items": {
                "description": "A subsystem represents a tenant within a customer's HQ",
                "type": "object"
              }
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "Price": {
          "format": "double",
          "description": "The price, in the currency of the planned cost.",
          "type": "number"
        },
        "Tax": {
          "format": "double",
          "description": "The planned cost tax rate, for example 19%.",
          "type": "number"
        },
        "Currency": {
          "description": "The ISO 4217 code of the currency of this planned cost.",
          "maxLength": 3,
          "minLength": 0,
          "type": "string"
        },
        "FinancesCostTypeId": {
          "format": "int32",
          "description": "The id of the finances cost type the planned cost are related to.",
          "type": "integer"
        },
        "FinancesCostType": {
          "description": "The finances cost type the planned cost are related to.",
          "required": [
            "Id"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "description": "The name of the cost type",
              "type": "string"
            },
            "Id": {
              "format": "int32",
              "description": "The unique identifier of this entity",
              "type": "integer"
            },
            "CreatedBy": {
              "format": "int32",
              "description": "The id of the user who created this entity",
              "type": "integer"
            },
            "UpdatedBy": {
              "format": "int32",
              "description": "The id of the last user who modified this entity",
              "type": "integer"
            },
            "CreatedOn": {
              "format": "date-time",
              "description": "The date and time this entity was created, in UTC",
              "type": "string"
            },
            "UpdatedOn": {
              "format": "date-time",
              "description": "The last date and time this entity was updated, in UTC",
              "type": "string"
            }
          }
        },
        "Id": {
          "format": "int32",
          "description": "The unique identifier of this entity",
          "type": "integer"
        },
        "CreatedBy": {
          "format": "int32",
          "description": "The id of the user who created this entity",
          "type": "integer"
        },
        "UpdatedBy": {
          "format": "int32",
          "description": "The id of the last user who modified this entity",
          "type": "integer"
        },
        "CreatedOn": {
          "format": "date-time",
          "description": "The date and time this entity was created, in UTC",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "description": "The last date and time this entity was updated, in UTC",
          "type": "string"
        }
      }
    },
    "ODataResponse[List[ProjectBudget]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "description": "The project budget for a project",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "ProjectId": {
                "format": "int32",
                "type": "integer"
              },
              "FinancesCostTypeId": {
                "format": "int32",
                "type": "integer"
              },
              "Costs": {
                "format": "double",
                "type": "number"
              },
              "Purpose": {
                "type": "string"
              },
              "Currency": {
                "type": "string"
              },
              "FinancesCostType": {
                "description": "The linked cost type. This is only relevant for assigned tasks/reportings. Incoming invoices have their own cost type on position level",
                "type": "object"
              },
              "Project": {
                "description": "The project which the budget belongs to",
                "type": "object"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "ODataResponse[List[ProjectRole]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "description": "A project role defines the responsibilities and permissions of a user on a project\r\n            on which they are a member of.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "Name": {
                "description": "The name of this project role",
                "type": "string"
              },
              "IsRequired": {
                "description": "Tells if this a required role on projects.",
                "type": "boolean"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "ODataResponse[List[ProjectStatus]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "description": "Represents the status of a project",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "Name": {
                "description": "The name of the project status",
                "type": "string"
              },
              "IsInProgress": {
                "description": "Whether this project is in progress or not",
                "type": "boolean"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "ODataResponse[List[Task]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "description": "A task represents a To-Do or other forms of tasks, usually of a project.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "Name": {
                "description": "The name of the task.",
                "type": "string"
              },
              "Assignments": {
                "description": "The assignments of users to a specific task.",
                "type": "array"
              },
              "Order": {
                "format": "int32",
                "description": "The order of the task within one project.",
                "type": "integer"
              },
              "ParentId": {
                "format": "int32",
                "description": "The Id of the parent task of this task, used for building a hierarchy.",
                "type": "integer"
              },
              "ProjectId": {
                "format": "int32",
                "description": "The Id of the project this task belongs to.",
                "type": "integer"
              },
              "Project": {
                "description": "The project this task belongs to.",
                "type": "object"
              },
              "IsDone": {
                "description": "Whether this task is open or done.",
                "type": "boolean"
              },
              "PlannedEffort": {
                "format": "double",
                "description": "The planned effort, in  hours.",
                "type": "number"
              },
              "PercentDone": {
                "format": "int32",
                "description": "The done value of the task in percent",
                "type": "integer"
              },
              "Description": {
                "description": "The description of the task.",
                "type": "string"
              },
              "StartOn": {
                "format": "date-time",
                "description": "The start time of the task.",
                "type": "string"
              },
              "EndOn": {
                "format": "date-time",
                "description": "The end time of the task.",
                "type": "string"
              },
              "TaskTypeId": {
                "format": "int32",
                "description": "The Id of the task type.",
                "type": "integer"
              },
              "TaskType": {
                "description": "The type of the task.",
                "type": "object"
              },
              "TaskTypeStatusId": {
                "format": "int32",
                "description": "The id of the status of the task.",
                "type": "integer"
              },
              "TaskTypeStatus": {
                "description": "The status of the task.",
                "type": "object"
              },
              "Dependencies": {
                "description": "The dependencies to another task.",
                "type": "array"
              },
              "UserReportings": {
                "description": "The reportings of the task",
                "type": "array"
              },
              "IsAppointment": {
                "description": "Checked if the task is a appointment",
                "type": "boolean"
              },
              "SyncId": {
                "description": "The external id of the task for e.g sync clients.",
                "type": "string"
              },
              "Sync": {
                "description": "Whether the task should be synced to the configured sync clients.",
                "type": "boolean"
              },
              "JiraProjectName": {
                "description": "The short name of the linked JIRA project.",
                "type": "string"
              },
              "Remaining": {
                "format": "double",
                "description": "The remainig value of the task in hours.",
                "type": "number"
              },
              "ProjectBudgetId": {
                "format": "int32",
                "description": "The id of the project budget of the task.",
                "type": "integer"
              },
              "ProjectBudget": {
                "description": "The project budget of the task.",
                "type": "object"
              },
              "ChargeType": {
                "description": "The charge type of the task",
                "type": "string"
              },
              "ChargeValue": {
                "format": "double",
                "description": "The charge value of the task",
                "type": "number"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "ODataResponse[List[TaskDependency]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "description": "A task dependency represents a dependency between two tasks, where one task needs to be finished before the other can be started.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "FromTask": {
                "description": "The task which is the predecessor to the successor task",
                "type": "object"
              },
              "FromTaskId": {
                "format": "int32",
                "description": "The id of the task which is the predecessor to the successor task",
                "type": "integer"
              },
              "ToTask": {
                "description": "The task which is the successor to the predecessor task",
                "type": "object"
              },
              "ToTaskId": {
                "format": "int32",
                "description": "The id of the task which is the successor to the predecessor task",
                "type": "integer"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "ODataResponse[List[TaskAssignment]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "description": "The assignment of a user to a task",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "AssignmentUnit": {
                "description": "The type of the assignment value. Percentage not allowed",
                "type": "string"
              },
              "AssignmentValue": {
                "format": "double",
                "description": "The value of the assignment. The value is stored in the unit specified in AssignmentUnit",
                "type": "number"
              },
              "TaskId": {
                "format": "int32",
                "description": "The id of the task the assignment is for",
                "type": "integer"
              },
              "Task": {
                "description": "The task the assignment is for",
                "type": "object"
              },
              "UserId": {
                "format": "int32",
                "description": "The id of the user assigned to the task",
                "type": "integer"
              },
              "User": {
                "description": "The user assigned to the task",
                "type": "object"
              },
              "ResourceId": {
                "format": "int32",
                "description": "The id of the resource assigned to the task",
                "type": "integer"
              },
              "Resource": {
                "description": "The resource assigned to the task",
                "type": "object"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "ODataResponse[List[ProjectTemplate]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "description": "A project template defines the default tasks of this project and whether the project is internal or external.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "Name": {
                "description": "The name of the project template",
                "type": "string"
              },
              "IsInternal": {
                "description": "Whether this is an internal project template without a company or with a company",
                "type": "boolean"
              },
              "ProjectStatus": {
                "description": "All project status that are related to the template",
                "type": "array"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "ODataResponse[List[Project]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "description": "A project represents a service you are performing for a customer, like a job or any other project-based service.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "Number": {
                "description": "The number of the project",
                "type": "string"
              },
              "Name": {
                "description": "The name of the project",
                "type": "string"
              },
              "Status": {
                "description": "The current status description of the project",
                "type": "string"
              },
              "PlannedStartDate": {
                "format": "date-time",
                "description": "The planned start date of the first task of the project",
                "type": "string"
              },
              "PlannedEndDate": {
                "format": "date-time",
                "description": "The planned end date of the last task of the project",
                "type": "string"
              },
              "StartDate": {
                "format": "date-time",
                "description": "The planned start date of the project",
                "type": "string"
              },
              "EndDate": {
                "format": "date-time",
                "description": "The planned end date of the project",
                "type": "string"
              },
              "AworkSyncId": {
                "description": "The Id from the linked awork project",
                "type": "string"
              },
              "Subsystems": {
                "description": "The subsystems this project is associated with",
                "type": "array"
              },
              "ProjectTemplateId": {
                "format": "int32",
                "description": "The id of the project template",
                "type": "integer"
              },
              "ProjectTemplate": {
                "description": "The template of this project",
                "type": "object"
              },
              "ProjectStatusId": {
                "format": "int32",
                "description": "The id of the project status",
                "type": "integer"
              },
              "CompanyId": {
                "format": "int32",
                "description": "The id of the company",
                "type": "integer"
              },
              "LeadId": {
                "format": "int32",
                "description": "The Id of the lead",
                "type": "integer"
              },
              "InvoiceAddressId": {
                "format": "int32",
                "description": "Id of the address for invoices of this project",
                "type": "integer"
              },
              "DeliveryAddressId": {
                "format": "int32",
                "description": "Id of the address for the deliveries of this project",
                "type": "integer"
              },
              "ResponsibleUserId": {
                "format": "int32",
                "description": "The id of the user which is responsible for this (internal) project",
                "type": "integer"
              },
              "ProjectStatus": {
                "description": "The status of the project",
                "type": "object"
              },
              "Company": {
                "description": "The company this project is associated with",
                "type": "object"
              },
              "ResponsibleUser": {
                "description": "The user which is responsible for this (internal) project",
                "type": "object"
              },
              "DeliveryAddress": {
                "description": "The address for delvieries of this project",
                "type": "object"
              },
              "InvoiceAddress": {
                "description": "The address for delvieries of this project",
                "type": "object"
              },
              "Lead": {
                "description": "The lead of the project",
                "type": "object"
              },
              "CustomFields": {
                "description": "The custom fields of this project",
                "type": "array"
              },
              "Reportings": {
                "description": "The user reportings of this project",
                "type": "array"
              },
              "Files": {
                "description": "The files of this project",
                "type": "array"
              },
              "Members": {
                "description": "The members of this project",
                "type": "array"
              },
              "ContactHistories": {
                "description": "Contact histories linked to this project.",
                "type": "array"
              },
              "ContactPersons": {
                "description": "Contact persons linked to this project.",
                "type": "array"
              },
              "Articles": {
                "description": "All articles linked to the project",
                "type": "array"
              },
              "ProjectBudgets": {
                "description": "All articles linked to the project",
                "type": "array"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "ODataResponse[List[TaskType]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "description": "Every task in HQ has a type. This is a task classification and often used for different external invoicing charge rates.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "Name": {
                "description": "The name of the task type",
                "type": "string"
              },
              "IsDefault": {
                "description": "Whether this is the default task type",
                "type": "boolean"
              },
              "TaskTypeStatus": {
                "description": "The status of the task.",
                "type": "array"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "ODataResponse[List[PublicHolidays]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "description": "The public holidays in the HQ",
            "type": "object",
            "properties": {
              "Id": {
                "format": "int32",
                "description": "The name of the holiday",
                "type": "integer"
              },
              "Name": {
                "description": "The name of the holiday",
                "type": "string"
              },
              "Date": {
                "format": "date-time",
                "description": "The date of the holiday",
                "type": "string"
              },
              "Country": {
                "description": "The country for the holiday",
                "type": "string"
              },
              "FederalStates": {
                "description": "The list of federal states of the holiday",
                "type": "array"
              }
            }
          }
        }
      }
    },
    "PublicHolidays": {
      "description": "The public holidays in the HQ",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "The name of the holiday",
          "type": "integer"
        },
        "Name": {
          "description": "The name of the holiday",
          "type": "string"
        },
        "Date": {
          "format": "date-time",
          "description": "The date of the holiday",
          "type": "string"
        },
        "Country": {
          "description": "The country for the holiday",
          "type": "string"
        },
        "FederalStates": {
          "description": "The list of federal states of the holiday",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Me": {
      "description": "A user represents a user in your HQ system.",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "FirstName": {
          "description": "The first name of the user",
          "type": "string"
        },
        "LastName": {
          "description": "The last name of the user",
          "type": "string"
        },
        "UserName": {
          "description": "The user's user name in HQ",
          "type": "string"
        },
        "EMailWork": {
          "description": "The work email of the user",
          "type": "string"
        },
        "Salutation": {
          "description": "The salutation of the user, i.e. Mrs. or Mr.",
          "type": "string"
        },
        "Title": {
          "description": "The professional title of the user",
          "type": "string"
        },
        "BirthDate": {
          "format": "date-time",
          "description": "The birth date of the user",
          "type": "string"
        },
        "Id": {
          "format": "int32",
          "description": "The unique identifier of this entity",
          "type": "integer"
        },
        "CreatedBy": {
          "format": "int32",
          "description": "The id of the user who created this entity",
          "type": "integer"
        },
        "UpdatedBy": {
          "format": "int32",
          "description": "The id of the last user who modified this entity",
          "type": "integer"
        },
        "CreatedOn": {
          "format": "date-time",
          "description": "The date and time this entity was created, in UTC",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "description": "The last date and time this entity was updated, in UTC",
          "type": "string"
        }
      }
    },
    "ODataResponse[List[UserReporting]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "description": "A user reporting represents a logged time of a user on a specific task in HQ.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "Note": {
                "description": "The user-provided note of this reporting",
                "type": "string"
              },
              "Duration": {
                "format": "int64",
                "description": "The reporting duration, in seconds",
                "type": "integer"
              },
              "UserId": {
                "format": "int32",
                "description": "The id of the user this reporting is for",
                "type": "integer"
              },
              "User": {
                "description": "The user this reporting is for",
                "type": "object"
              },
              "ChargeRateValue": {
                "format": "double",
                "description": "The external charge rate value",
                "type": "number"
              },
              "InternalChargeRateValue": {
                "format": "double",
                "description": "The internal charge rate value",
                "type": "number"
              },
              "IsApproved": {
                "description": "Whether this reporting was approved",
                "type": "boolean"
              },
              "StartOn": {
                "format": "date-time",
                "description": "The date of the reporting",
                "type": "string"
              },
              "BreakDuration": {
                "format": "int64",
                "description": "The break duration of this reporting, in seconds",
                "type": "integer"
              },
              "ProjectId": {
                "format": "int32",
                "description": "The id of the project that this reporting belongs to",
                "type": "integer"
              },
              "Project": {
                "description": "The project that this reporting belongs to",
                "type": "object"
              },
              "TaskId": {
                "format": "int32",
                "description": "The id of the task this reporting was created for",
                "type": "integer"
              },
              "Task": {
                "description": "The task this reporting was created for",
                "type": "object"
              },
              "CurrencyInternalChargeRateValue": {
                "description": "The ISO 4217 code of the currency of the internal charge rate value",
                "maxLength": 3,
                "minLength": 0,
                "type": "string"
              },
              "CurrencyChargeRateValue": {
                "description": "The ISO 4217 code of the currency of the external charge rate",
                "maxLength": 3,
                "minLength": 0,
                "type": "string"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "ODataResponse[List[User]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "description": "A user represents a user in your HQ system.",
            "required": [
              "Id"
            ],
            "type": "object",
            "properties": {
              "FirstName": {
                "description": "The first name of the user",
                "type": "string"
              },
              "LastName": {
                "description": "The last name of the user",
                "type": "string"
              },
              "UserName": {
                "description": "The user's user name in HQ",
                "type": "string"
              },
              "EMailWork": {
                "description": "The work email of the user",
                "type": "string"
              },
              "Salutation": {
                "description": "The salutation of the user, i.e. Mrs. or Mr.",
                "type": "string"
              },
              "Title": {
                "description": "The professional title of the user",
                "type": "string"
              },
              "EmployeeNumber": {
                "description": "The employee number of the user",
                "type": "string"
              },
              "Department": {
                "description": "The department of the user",
                "type": "string"
              },
              "BirthDate": {
                "format": "date-time",
                "description": "The birth date of the user",
                "type": "string"
              },
              "FederalState": {
                "description": "The federal state of the user",
                "type": "string"
              },
              "Country": {
                "description": "The country of the user",
                "type": "string"
              },
              "BasicLoadInHours": {
                "format": "double",
                "description": "The basic load in hours of the user",
                "type": "number"
              },
              "EntryDate": {
                "format": "date-time",
                "description": "The entry date of the user",
                "type": "string"
              },
              "LeavingDate": {
                "format": "date-time",
                "description": "The leaving date of the user",
                "type": "string"
              },
              "PhoneLandlinePrivate": {
                "description": "The private phone number of the user - landline",
                "type": "string"
              },
              "PhoneLandlineWork": {
                "description": "The work phone number of the user - landline",
                "type": "string"
              },
              "PhoneMobilePrivate": {
                "description": "The private phone number of the user - mobile",
                "type": "string"
              },
              "PhoneMobileWork": {
                "description": "The work phon number of the user - mobile",
                "type": "string"
              },
              "UserWorkingHours": {
                "description": "The custom fields of the user",
                "type": "array"
              },
              "CustomFields": {
                "description": "The custom fields of the user",
                "type": "array"
              },
              "UserGroups": {
                "description": "The user groups of the user",
                "type": "array"
              },
              "ResourceGroup": {
                "description": "The resource group of the user",
                "type": "object"
              },
              "Absences": {
                "description": "The absences of the user",
                "type": "array"
              },
              "Assignments": {
                "description": "The tasks the user is assigned to",
                "type": "array"
              },
              "Reportings": {
                "description": "The reportings of this user",
                "type": "array"
              },
              "ProjectMembers": {
                "description": "The allocations of this user to projects",
                "type": "array"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "ODataResponse[List[UserAbsence]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "description": "An absence represents a time of absence from work, for example holidays or sickness. \r\n            Absences can be either paid or unpaid.",
            "required": [
              "Start",
              "End",
              "UserId",
              "Id"
            ],
            "type": "object",
            "properties": {
              "Start": {
                "format": "date-time",
                "description": "The start date or date time of this absence, depending on the type. In ISO 8601 format.",
                "type": "string"
              },
              "End": {
                "format": "date-time",
                "description": "The end date or date time of this absence, depending on the type. In ISO 8601 format.",
                "type": "string"
              },
              "Type": {
                "description": "The type of this absence",
                "type": "string"
              },
              "Note": {
                "description": "The user-provided note for this absence",
                "type": "string"
              },
              "UserId": {
                "format": "int32",
                "description": "The id of the user this absence is for",
                "type": "integer"
              },
              "User": {
                "description": "The user this absence is for",
                "type": "object"
              },
              "IsApproved": {
                "description": "Whether this absence was approved",
                "type": "boolean"
              },
              "MissedDays": {
                "format": "double",
                "description": "The number of working days missed by this absence. Takes overlapping other absences into account.\r\n            Read-only!\r\n            This value is only applicable for full- and half-day absences (sick leave and vacation)",
                "type": "number"
              },
              "Id": {
                "format": "int32",
                "description": "The unique identifier of this entity",
                "type": "integer"
              },
              "CreatedBy": {
                "format": "int32",
                "description": "The id of the user who created this entity",
                "type": "integer"
              },
              "UpdatedBy": {
                "format": "int32",
                "description": "The id of the last user who modified this entity",
                "type": "integer"
              },
              "CreatedOn": {
                "format": "date-time",
                "description": "The date and time this entity was created, in UTC",
                "type": "string"
              },
              "UpdatedOn": {
                "format": "date-time",
                "description": "The last date and time this entity was updated, in UTC",
                "type": "string"
              }
            }
          }
        }
      }
    }
  }
}
